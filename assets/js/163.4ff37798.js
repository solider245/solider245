(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{389:function(s,n,a){"use strict";a.r(n);var e=a(25),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("strong",[s._v("译者按:")]),s._v(" Dockerfile 的语法非常简单，然而如何加快镜像构建速度，如何减少 Docker 镜像的大小却不是那么直观，需要积累实践经验。这篇博客可以帮助你快速掌握编写 Dockerfile 的技巧。")]),s._v(" "),a("ul",[a("li",[s._v("原文: "),a("a",{attrs:{href:"https://rock-it.pl/how-to-write-excellent-dockerfiles/",target:"_blank",rel:"noopener noreferrer"}},[s._v("How to write excellent Dockerfiles"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("译者: "),a("a",{attrs:{href:"https://www.fundebug.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Fundebug"),a("OutboundLink")],1)])]),s._v(" "),a("p",[a("strong",[s._v("本文采用意译，版权归原作者所有")])]),s._v(" "),a("p",[s._v("我已经使用 Docker 有一段时间了，其中编写 Dockerfile 是非常重要的一部分工作。在这篇博客中，我打算分享一些建议，帮助大家编写更好的 Dockerfile。")]),s._v(" "),a("h3",{attrs:{id:"目标"}},[a("a",{attrs:{href:"#%E7%9B%AE%E6%A0%87",title:"目标:"}}),s._v("目标:")]),s._v(" "),a("ul",[a("li",[s._v("更快的构建速度")]),s._v(" "),a("li",[s._v("更小的 Docker 镜像大小")]),s._v(" "),a("li",[s._v("更少的 Docker 镜像层")]),s._v(" "),a("li",[s._v("充分利用镜像缓存")]),s._v(" "),a("li",[s._v("增加 Dockerfile 可读性")]),s._v(" "),a("li",[s._v("让 Docker 容器使用起来更简单")])]),s._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{attrs:{href:"#%E6%80%BB%E7%BB%93",title:"总结"}}),s._v("总结")]),s._v(" "),a("ul",[a("li",[s._v("编写.dockerignore 文件")]),s._v(" "),a("li",[s._v("容器只运行单个应用")]),s._v(" "),a("li",[s._v("将多个 RUN 指令合并为一个")]),s._v(" "),a("li",[s._v("基础镜像的标签不要用 latest")]),s._v(" "),a("li",[s._v("每个 RUN 指令后删除多余文件")]),s._v(" "),a("li",[s._v("选择合适的基础镜像(alpine 版本最好)")]),s._v(" "),a("li",[s._v("设置 WORKDIR 和 CMD")]),s._v(" "),a("li",[s._v("使用 ENTRYPOINT (可选)")]),s._v(" "),a("li",[s._v("在 entrypoint 脚本中使用 exec")]),s._v(" "),a("li",[s._v("COPY 与 ADD 优先使用前者")]),s._v(" "),a("li",[s._v("合理调整 COPY 与 RUN 的顺序")]),s._v(" "),a("li",[s._v("设置默认的环境变量，映射端口和数据卷")]),s._v(" "),a("li",[s._v("使用 LABEL 设置镜像元数据")]),s._v(" "),a("li",[s._v("添加 HEALTHCHECK")])]),s._v(" "),a("h3",{attrs:{id:"示例"}},[a("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B",title:"示例"}}),s._v("示例")]),s._v(" "),a("p",[s._v("示例 Dockerfile 犯了几乎所有的错(当然我是故意的)。接下来，我会一步步优化它。假设我们需要使用 Docker 运行一个 Node.js 应用，下面就是它的 Dockerfile(CMD 指令太复杂了，所以我简化了，它是错误的，仅供参考)。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("FROM ubuntu\n\nADD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /app\n\nRUN apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-get update\nRUN apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-get upgrade "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-y\nRUN apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-get "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-y nodejs "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" mysql\nRUN "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /app "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this should start three processes, mysql and ssh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in the background and node app in foreground")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# isn't it beautifully terrible? <3")]),s._v("\nCMD mysql "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" sshd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" start\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("构建镜像:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build -t wtf .\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_1-编写-dockerignore-文件"}},[a("a",{attrs:{href:"#1-%E7%BC%96%E5%86%99-dockerignore-%E6%96%87%E4%BB%B6",title:"1. 编写.dockerignore 文件"}}),s._v("1. 编写.dockerignore 文件")]),s._v(" "),a("p",[s._v("构建镜像时，Docker 需要先准备"),a("code",[s._v("context")]),s._v(" ，将所有需要的文件收集到进程中。默认的"),a("code",[s._v("context")]),s._v("包含 Dockerfile 目录中的所有文件，但是实际上，"),a("strong",[s._v("我们并不需要.git 目录，node_modules 目录等内容")]),s._v("。 "),a("code",[s._v(".dockerignore")]),s._v(" 的作用和语法类似于 "),a("code",[s._v(".gitignore")]),s._v("，可以忽略一些不需要的文件，这样可以有效加快镜像构建时间，同时减少 Docker 镜像的大小。示例如下:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n.git/\nnode _modules/\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_2-容器只运行单个应用"}},[a("a",{attrs:{href:"#2-%E5%AE%B9%E5%99%A8%E5%8F%AA%E8%BF%90%E8%A1%8C%E5%8D%95%E4%B8%AA%E5%BA%94%E7%94%A8",title:"2. 容器只运行单个应用"}}),s._v("2. 容器只运行单个应用")]),s._v(" "),a("p",[s._v("从技术角度讲，你可以在 Docker 容器中运行多个进程。你可以将数据库，前端，后端，ssh，supervisor 都运行在同一个 Docker 容器中。但是，这会让你非常痛苦:")]),s._v(" "),a("ul",[a("li",[s._v("非常长的构建时间(修改前端之后，整个后端也需要重新构建)")]),s._v(" "),a("li",[s._v("非常大的镜像大小")]),s._v(" "),a("li",[s._v("多个应用的日志难以处理(不能直接使用 stdout，否则多个应用的日志会混合到一起)")]),s._v(" "),a("li",[s._v("横向扩展时非常浪费资源(不同的应用需要运行的容器数并不相同)")]),s._v(" "),a("li",[s._v("僵尸进程问题 - 你需要选择合适的 init 进程")])]),s._v(" "),a("p",[s._v("因此，我建议大家为每个应用构建单独的 Docker 镜像，然后使用 "),a("a",{attrs:{href:"https://docs.docker.com/compose/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker Compose"),a("OutboundLink")],1),s._v(" 运行多个 Docker 容器。")]),s._v(" "),a("p",[s._v("现在，我从 Dockerfile 中删除一些不需要的安装包，另外，SSH 可以用"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/exec/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker exec"),a("OutboundLink")],1),s._v("替代。示例如下：")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get update\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get upgrade \\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# we should remove ssh and mysql, and use")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# separate container for database")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get install \\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("y nodejs  \\"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ssh mysql")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cd /app && npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" npm start\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"_3-将多个-run-指令合并为一个"}},[a("a",{attrs:{href:"#3-%E5%B0%86%E5%A4%9A%E4%B8%AA-RUN-%E6%8C%87%E4%BB%A4%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E4%B8%AA",title:"3. 将多个 RUN 指令合并为一个"}}),s._v("3. 将多个 RUN 指令合并为一个")]),s._v(" "),a("p",[s._v("Docker 镜像是分层的，下面这些知识点非常重要:")]),s._v(" "),a("ul",[a("li",[s._v("Dockerfile 中的每个指令都会创建一个新的镜像层。")]),s._v(" "),a("li",[s._v("镜像层将被缓存和复用")]),s._v(" "),a("li",[s._v("当 Dockerfile 的指令修改了，复制的文件变化了，或者构建镜像时指定的变量不同了，对应的镜像层缓存就会失效")]),s._v(" "),a("li",[s._v("某一层的镜像缓存失效之后，它之后的镜像层缓存都会失效")]),s._v(" "),a("li",[s._v("镜像层是不可变的，如果我们再某一层中添加一个文件，然后在下一层中删除它，则镜像中依然会包含该文件(只是这个文件在 Docker 容器中不可见了)。")])]),s._v(" "),a("p",[s._v("Docker 镜像类似于洋葱。它们都有很多层。为了修改内层，则需要将外面的层都删掉。记住这一点的话，其他内容就很好理解了。")]),s._v(" "),a("p",[s._v("现在，我们"),a("strong",[s._v("将所有的"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#run",target:"_blank",rel:"noopener noreferrer"}},[s._v("RUN"),a("OutboundLink")],1),s._v("指令合并为一个")]),s._v("。同时把"),a("code",[s._v("apt-get upgrade")]),s._v("删除，因为它会使得镜像构建非常不确定(我们只需要依赖基础镜像的更新就好了)")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get update \\\\\n && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("y nodejs \\\\\n && cd /app \\\\\n && npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" npm start\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("记住一点，我们只能将变化频率一样的指令合并在一起。将 node.js 安装与 npm 模块安装放在一起的话，则每次修改源代码，都需要重新安装 node.js，这显然不合适。因此，正确的写法是这样的:")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get update && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("y nodejs\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cd /app && npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" npm start\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"_4-基础镜像的标签不要用-latest"}},[a("a",{attrs:{href:"#4-%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E7%9A%84%E6%A0%87%E7%AD%BE%E4%B8%8D%E8%A6%81%E7%94%A8-latest",title:"4. 基础镜像的标签不要用 latest"}}),s._v("4. 基础镜像的标签不要用 latest")]),s._v(" "),a("p",[s._v("当镜像没有指定标签时，将默认使用"),a("code",[s._v("latest")]),s._v(" 标签。因此， "),a("code",[s._v("FROM ubuntu")]),s._v(" 指令等同于"),a("code",[s._v("FROM ubuntu:latest")]),s._v("。当时，当镜像更新时，latest 标签会指向不同的镜像，这时构建镜像有可能失败。如果你的确需要使用最新版的基础镜像，可以使用 latest 标签，否则的话，最好指定确定的镜像标签。")]),s._v(" "),a("p",[s._v("示例 Dockerfile 应该使用"),a("code",[s._v("16.04")]),s._v("作为标签。")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("16.04  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it's that easy!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get update && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("y nodejs\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cd /app && npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" npm start\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"_5-每个-run-指令后删除多余文件"}},[a("a",{attrs:{href:"#5-%E6%AF%8F%E4%B8%AA-RUN-%E6%8C%87%E4%BB%A4%E5%90%8E%E5%88%A0%E9%99%A4%E5%A4%9A%E4%BD%99%E6%96%87%E4%BB%B6",title:"5. 每个 RUN 指令后删除多余文件"}}),s._v("5. 每个 RUN 指令后删除多余文件")]),s._v(" "),a("p",[s._v("假设我们更新了 apt-get 源，下载，解压并安装了一些软件包，它们都保存在"),a("code",[s._v("/var/lib/apt/lists/")]),s._v("目录中。但是，运行应用时 Docker 镜像中并不需要这些文件。我们最好将它们删除，因为它会使 Docker 镜像变大。")]),s._v(" "),a("p",[s._v("示例 Dockerfile 中，我们可以删除"),a("code",[s._v("/var/lib/apt/lists/")]),s._v("目录中的文件(它们是由 apt-get update 生成的)。")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("16.04\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get update \\\\\n && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("y nodejs \\\\\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# added lines")]),s._v("\n && rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("rf /var/lib/apt/lists/\\*\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cd /app && npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" npm start\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"_6-选择合适的基础镜像-alpine-版本最好"}},[a("a",{attrs:{href:"#6-%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F-alpine-%E7%89%88%E6%9C%AC%E6%9C%80%E5%A5%BD",title:"6. 选择合适的基础镜像(alpine 版本最好)"}}),s._v("6. 选择合适的基础镜像(alpine 版本最好)")]),s._v(" "),a("p",[s._v("在示例中，我们选择了"),a("code",[s._v("ubuntu")]),s._v("作为基础镜像。但是我们只需要运行 node 程序，有必要使用一个通用的基础镜像吗？"),a("code",[s._v("node")]),s._v("镜像应该是更好的选择。")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# we don't need to install node")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# anymore and use apt-get")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cd /app && npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" npm start\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("更好的选择是 alpine 版本的"),a("code",[s._v("node")]),s._v("镜像。alpine 是一个极小化的 Linux 发行版，只有 4MB，这让它非常适合作为基础镜像。")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cd /app && npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" npm start\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management",target:"_blank",rel:"noopener noreferrer"}},[s._v("apk"),a("OutboundLink")],1),s._v("是 Alpine 的包管理工具。它与"),a("code",[s._v("apt-get")]),s._v("有些不同，但是非常容易上手。另外，它还有一些非常有用的特性，比如"),a("code",[s._v("no-cache")]),s._v("和 "),a("code",[s._v("--virtual")]),s._v("选项，它们都可以帮助我们减少镜像的大小。")]),s._v(" "),a("h3",{attrs:{id:"_7-设置-workdir-和-cmd"}},[a("a",{attrs:{href:"#7-%E8%AE%BE%E7%BD%AE-WORKDIR-%E5%92%8C-CMD",title:"7. 设置 WORKDIR 和 CMD"}}),s._v("7. 设置 WORKDIR 和 CMD")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#workdir",target:"_blank",rel:"noopener noreferrer"}},[s._v("WORKDIR"),a("OutboundLink")],1),s._v("指令可以设置默认目录，也就是运行"),a("code",[s._v("RUN")]),s._v(" / "),a("code",[s._v("CMD")]),s._v(" / "),a("code",[s._v("ENTRYPOINT")]),s._v("指令的地方。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#cmd",target:"_blank",rel:"noopener noreferrer"}},[s._v("CMD"),a("OutboundLink")],1),s._v("指令可以设置容器创建是执行的默认命令。另外，你应该讲命令写在一个数组中，数组中每个元素为命令的每个单词(参考"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#cmd",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v(")。")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"_8-使用-entrypoint-可选"}},[a("a",{attrs:{href:"#8-%E4%BD%BF%E7%94%A8-ENTRYPOINT-%E5%8F%AF%E9%80%89",title:"8. 使用 ENTRYPOINT (可选)"}}),s._v("8. 使用 ENTRYPOINT (可选)")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#entrypoint",target:"_blank",rel:"noopener noreferrer"}},[s._v("ENTRYPOINT"),a("OutboundLink")],1),s._v("指令并不是必须的，因为它会增加复杂度。"),a("code",[s._v("ENTRYPOINT")]),s._v("是一个脚本，它会默认执行，并且将指定的命令错误其参数。它通常用于构建可执行的 Docker 镜像。entrypoint.sh 如下:")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $0 is a script name,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1, $2, $3 etc are passed arguments")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 is our command")]),s._v("\nCMD=$1\n\ncase "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$CMD"')]),s._v(" in\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev"')]),s._v(" )\n npm install\n export NODE_ENV=development\n exec npm run dev\n ;;\n\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),s._v(" )\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# we can modify files here, using ENV variables passed in")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker create"')]),s._v(" command. It can't be done during build process.\n echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"db: $DATABASE_ADDRESS"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" /app/config.yml\n export NODE_ENV=production\n exec npm start\n ;;\n\n * )\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Run custom command. Thanks to this line we can still use")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker run our_image /bin/bash"')]),s._v(" and it will work\n exec $CMD $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n ;;\nesac\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[s._v("示例 Dockerfile:")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./entrypoint.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("可以使用如下命令运行该镜像:")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行开发版本")]),s._v("\ndocker run our"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("app dev\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行生产版本")]),s._v("\ndocker run our"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("app start\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行bash")]),s._v("\ndocker run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("it our"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("app /bin/bash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"_9-在-entrypoint-脚本中使用-exec"}},[a("a",{attrs:{href:"#9-%E5%9C%A8-entrypoint-%E8%84%9A%E6%9C%AC%E4%B8%AD%E4%BD%BF%E7%94%A8-exec",title:"9. 在 entrypoint 脚本中使用 exec"}}),s._v("9. 在 entrypoint 脚本中使用 exec")]),s._v(" "),a("p",[s._v("在前文的 entrypoint 脚本中，我使用了"),a("code",[s._v("exec")]),s._v("命令运行 node 应用。不使用"),a("code",[s._v("exec")]),s._v("的话，我们则不能顺利地关闭容器，因为 SIGTERM 信号会被 bash 脚本进程吞没。"),a("code",[s._v("exec")]),s._v("命令启动的进程可以取代脚本进程，因此所有的信号都会正常工作。")]),s._v(" "),a("h3",{attrs:{id:"_10-copy-与-add-优先使用前者"}},[a("a",{attrs:{href:"#10-COPY-%E4%B8%8E-ADD-%E4%BC%98%E5%85%88%E4%BD%BF%E7%94%A8%E5%89%8D%E8%80%85",title:"10. COPY 与 ADD 优先使用前者"}}),s._v("10. COPY 与 ADD 优先使用前者")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#copy",target:"_blank",rel:"noopener noreferrer"}},[s._v("COPY"),a("OutboundLink")],1),s._v("指令非常简单，仅用于将文件拷贝到镜像中。"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#add",target:"_blank",rel:"noopener noreferrer"}},[s._v("ADD"),a("OutboundLink")],1),s._v("相对来讲复杂一些，可以用于下载远程文件以及解压压缩包(参考 "),a("a",{attrs:{href:"https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#add-or-copy",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v(")。")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./entrypoint.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"_11-合理调整-copy-与-run-的顺序"}},[a("a",{attrs:{href:"#11-%E5%90%88%E7%90%86%E8%B0%83%E6%95%B4-COPY-%E4%B8%8E-RUN-%E7%9A%84%E9%A1%BA%E5%BA%8F",title:"11. 合理调整 COPY 与 RUN 的顺序"}}),s._v("11. 合理调整 COPY 与 RUN 的顺序")]),s._v(" "),a("p",[s._v("我们应该"),a("strong",[s._v("把变化最少的部分放在 Dockerfile 的前面")]),s._v("，这样可以充分利用镜像缓存。")]),s._v(" "),a("p",[s._v("示例中，源代码会经常变化，则每次构建镜像时都需要重新安装 NPM 模块，这显然不是我们希望看到的。因此我们可以先拷贝"),a("code",[s._v("package.json")]),s._v("，然后安装 NPM 模块，最后才拷贝其余的源代码。这样的话，即使源代码变化，也不需要重新安装 NPM 模块。")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . /app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./entrypoint.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"_12-设置默认的环境变量，映射端口和数据卷"}},[a("a",{attrs:{href:"#12-%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%EF%BC%8C%E6%98%A0%E5%B0%84%E7%AB%AF%E5%8F%A3%E5%92%8C%E6%95%B0%E6%8D%AE%E5%8D%B7",title:"12. 设置默认的环境变量，映射端口和数据卷"}}),s._v("12. 设置默认的环境变量，映射端口和数据卷")]),s._v(" "),a("p",[s._v("运行 Docker 容器时很可能需要一些环境变量。在 Dockerfile 设置默认的环境变量是一种很好的方式。另外，我们应该在 Dockerfile 中设置映射端口和数据卷。示例如下:")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" PROJECT_DIR=/app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" $PROJECT_DIR\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json $PROJECT_DIR\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . $PROJECT_DIR\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" MEDIA_DIR=media \\\\\n NODE_ENV=production \\\\\n APP_PORT=3000\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" $MEDIA_DIR\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" $APP_PORT\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./entrypoint.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#env",target:"_blank",rel:"noopener noreferrer"}},[s._v("ENV"),a("OutboundLink")],1),s._v("指令指定的环境变量在容器中可以使用。如果你只是需要指定构建镜像时的变量，你可以使用"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#arg",target:"_blank",rel:"noopener noreferrer"}},[s._v("ARG"),a("OutboundLink")],1),s._v("指令。")]),s._v(" "),a("h3",{attrs:{id:"_13-使用-label-设置镜像元数据"}},[a("a",{attrs:{href:"#13-%E4%BD%BF%E7%94%A8-LABEL-%E8%AE%BE%E7%BD%AE%E9%95%9C%E5%83%8F%E5%85%83%E6%95%B0%E6%8D%AE",title:"13. 使用 LABEL 设置镜像元数据"}}),s._v("13. 使用 LABEL 设置镜像元数据")]),s._v(" "),a("p",[s._v("使用"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#label",target:"_blank",rel:"noopener noreferrer"}},[s._v("LABEL"),a("OutboundLink")],1),s._v("指令，可以为镜像设置元数据，例如"),a("strong",[s._v("镜像创建者")]),s._v("或者"),a("strong",[s._v("镜像说明")]),s._v("。旧版的 Dockerfile 语法使用"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#maintainer-deprecated",target:"_blank",rel:"noopener noreferrer"}},[s._v("MAINTAINER"),a("OutboundLink")],1),s._v("指令指定镜像创建者，但是它已经被弃用了。有时，一些外部程序需要用到镜像的元数据，例如"),a("a",{attrs:{href:"https://github.com/NVIDIA/nvidia-docker",target:"_blank",rel:"noopener noreferrer"}},[s._v("nvidia-docker"),a("OutboundLink")],1),s._v("需要用到"),a("code",[s._v("com.nvidia.volumes.needed")]),s._v("。示例如下:")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("maintainer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jakub.skalecki@example.com"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_14-添加-healthcheck"}},[a("a",{attrs:{href:"#14-%E6%B7%BB%E5%8A%A0-HEALTHCHECK",title:"14. 添加 HEALTHCHECK"}}),s._v("14. 添加 HEALTHCHECK")]),s._v(" "),a("p",[s._v("运行容器时，可以指定"),a("code",[s._v("--restart always")]),s._v("选项。这样的话，容器崩溃时，Docker 守护进程(docker daemon)会重启容器。对于需要长时间运行的容器，这个选项非常有用。但是，如果容器的确在运行，但是不可(陷入死循环，配置错误)用怎么办？使用"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#healthcheck",target:"_blank",rel:"noopener noreferrer"}},[s._v("HEALTHCHECK"),a("OutboundLink")],1),s._v("指令可以让 Docker 周期性的检查容器的健康状况。我们只需要指定一个命令，如果一切正常的话返回 0，否则返回 1。对 HEALTHCHECK 感兴趣的话，可以参考"),a("a",{attrs:{href:"https://blog.newrelic.com/2016/08/24/docker-health-check-instruction/",target:"_blank",rel:"noopener noreferrer"}},[s._v("这篇博客"),a("OutboundLink")],1),s._v("。示例如下:")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("maintainer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jakub.skalecki@example.com"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" PROJECT_DIR=/app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" $PROJECT_DIR\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json $PROJECT_DIR\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . $PROJECT_DIR\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" MEDIA_DIR=/media \\\\\n NODE_ENV=production \\\\\n APP_PORT=3000\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" $MEDIA_DIR\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" $APP_PORT\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HEALTHCHECK")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" curl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("fail http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("$APP_PORT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" exit 1\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" \\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./entrypoint.sh"')]),s._v("\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" \\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),s._v("\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("当请求失败时，"),a("code",[s._v("curl --fail")]),s._v(" 命令返回非 0 状态。")]),s._v(" "),a("h3",{attrs:{id:"关于fundebug"}},[s._v("关于Fundebug")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.fundebug.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Fundebug"),a("OutboundLink")],1),s._v("专注于JavaScript、微信小程序、微信小游戏、支付宝小程序、React Native、Node.js和Java线上应用实时BUG监控。 自从2016年双十一正式上线，Fundebug累计处理了40亿+错误事件，付费客户有阳光保险、达令家、核桃编程、荔枝FM、微脉等众多品牌企业。欢迎大家"),a("a",{attrs:{href:"https://www.fundebug.com/team/create",target:"_blank",rel:"noopener noreferrer"}},[s._v("免费试用"),a("OutboundLink")],1),s._v("！")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://static.fundebug.cn/wechat_slogan.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://static.fundebug.cn/wechat_slogan.png",alt:""}}),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"版权声明"}},[s._v("版权声明")]),s._v(" "),a("p",[s._v("转载时请注明作者 **"),a("a",{attrs:{href:"https://blog.fundebug.com",title:"Fundebug",target:"_blank",rel:"noopener noreferrer"}},[s._v("Fundebug"),a("OutboundLink")],1),s._v("**以及本文地址：\n"),a("strong",[a("a",{attrs:{href:"https://blog.fundebug.com/2017/05/15/write-excellent-dockerfile/",title:"如何编写最佳的Dockerfile",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.fundebug.com/2017/05/15/write-excellent-dockerfile/"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=t.exports}}]);