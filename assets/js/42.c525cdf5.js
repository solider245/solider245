(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{518:function(n,e,t){"use strict";t.r(e);var o=t(25),r=Object(o.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"_12-1-概述¶"}},[n._v("12.1. 概述"),t("a",{attrs:{href:"#introduction",title:"永久链接至标题"}},[n._v("¶")])]),n._v(" "),t("p",[n._v("Python应用程序通常会使用不在标准库内的软件包和模块。应用程序有时需要特定版本的库，因为应用程序可能需要修复特定的错误，或者可以使用库的过时版本的接口编写应用程序。")]),n._v(" "),t("p",[n._v("这意味着一个Python安装可能无法满足每个应用程序的要求。如果应用程序A需要特定模块的1.0版本但应用程序B需要2.0版本，则需求存在冲突，安装版本1.0或2.0将导致某一个应用程序无法运行。")]),n._v(" "),t("p",[n._v("这个问题的解决方案是创建一个 "),t("a",{attrs:{href:"https://docs.python.org/zh-cn/3/glossary.html#term-virtual-environment",target:"_blank",rel:"noopener noreferrer"}},[n._v("virtual environment"),t("OutboundLink")],1),n._v("，一个目录树，其中安装有特定Python版本，以及许多其他包。")]),n._v(" "),t("p",[n._v("然后，不同的应用将可以使用不同的虚拟环境。 要解决先前需求相冲突的例子，应用程序 A 可以拥有自己的 安装了 1.0 版本的虚拟环境，而应用程序 B 则拥有安装了 2.0 版本的另一个虚拟环境。 如果应用程序 B 要求将某个库升级到 3.0 版本，也不会影响应用程序 A 的环境。")]),n._v(" "),t("h2",{attrs:{id:"_12-2-创建虚拟环境¶"}},[n._v("12.2. 创建虚拟环境"),t("a",{attrs:{href:"#creating-virtual-environments",title:"永久链接至标题"}},[n._v("¶")])]),n._v(" "),t("p",[n._v("用于创建和管理虚拟环境的模块称为 "),t("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/venv.html#module-venv",title:"venv: Creation of virtual environments.",target:"_blank",rel:"noopener noreferrer"}},[t("code",[n._v("venv")]),t("OutboundLink")],1),n._v("。 "),t("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/venv.html#module-venv",title:"venv: Creation of virtual environments.",target:"_blank",rel:"noopener noreferrer"}},[t("code",[n._v("venv")]),t("OutboundLink")],1),n._v(" 通常会安装你可用的最新版本的 Python。如果您的系统上有多个版本的 Python，您可以通过运行 "),t("code",[n._v("python3")]),n._v(" 或您想要的任何版本来选择特定的Python版本。")]),n._v(" "),t("p",[n._v("要创建虚拟环境，请确定要放置它的目录，并将 "),t("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/venv.html#module-venv",title:"venv: Creation of virtual environments.",target:"_blank",rel:"noopener noreferrer"}},[t("code",[n._v("venv")]),t("OutboundLink")],1),n._v(" 模块作为脚本运行目录路径:")]),n._v(" "),t("p",[n._v("python3 -m venv tutorial-env")]),n._v(" "),t("p",[n._v("如果它不存在，这将创建 "),t("code",[n._v("tutorial-env")]),n._v(" 目录，并在其中创建包含Python解释器，标准库和各种支持文件的副本的目录。")]),n._v(" "),t("p",[n._v("虚拟环境的常用目录位置是 "),t("code",[n._v(".venv")]),n._v("。 这个名称通常会令该目录在你的终端中保持隐藏，从而避免需要对所在目录进行额外解释的一般名称。 它还能防止与某些工具所支持的 "),t("code",[n._v(".env")]),n._v(" 环境变量定义文件发生冲突。")]),n._v(" "),t("p",[n._v("创建虚拟环境后，您可以激活它。")]),n._v(" "),t("p",[n._v("在Windows上，运行:")]),n._v(" "),t("p",[n._v("tutorial-env\\Scripts\\activate.bat")]),n._v(" "),t("p",[n._v("在Unix或MacOS上，运行:")]),n._v(" "),t("p",[n._v("source tutorial-env/bin/activate")]),n._v(" "),t("p",[n._v("（这个脚本是为bash shell编写的。如果你使用 "),t("strong",[n._v("csh")]),n._v(" 或 "),t("strong",[n._v("fish")]),n._v(" shell，你应该改用 "),t("code",[n._v("activate.csh")]),n._v(" 或 "),t("code",[n._v("activate.fish")]),n._v(" 脚本。）")]),n._v(" "),t("p",[n._v("激活虚拟环境将改变你所用终端的提示符，以显示你正在使用的虚拟环境，并修改环境以使 "),t("code",[n._v("python")]),n._v(" 命令所运行的将是已安装的特定 Python 版本。 例如：")]),n._v(" "),t("p",[n._v("$ source ~/envs/tutorial-env/bin/activate\n(tutorial-env) $ python\nPython 3.5.1 (default, May  6 2016, 10:59:36)\n...")]),n._v(" "),t("blockquote",[t("blockquote",[t("blockquote",[t("p",[n._v("import sys\nsys.path\n['', '/usr/local/lib/python35.zip', ...,\n'~/envs/tutorial-env/lib/python3.5/site-packages']")])])]),n._v(" "),t("blockquote",[t("blockquote")])]),n._v(" "),t("h2",{attrs:{id:"_12-3-使用pip管理包¶"}},[n._v("12.3. 使用pip管理包"),t("a",{attrs:{href:"#managing-packages-with-pip",title:"永久链接至标题"}},[n._v("¶")])]),n._v(" "),t("p",[n._v("你可以使用一个名为 "),t("strong",[n._v("pip")]),n._v(" 的程序来安装、升级和移除软件包。默认情况下 "),t("code",[n._v("pip")]),n._v(" 将从 Python Package Index <"),t("a",{attrs:{href:"https://pypi.org",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://pypi.org"),t("OutboundLink")],1),n._v("> 安装软件包。你可以在浏览器中访问 Python Package Index 或是使用 "),t("code",[n._v("pip")]),n._v(" 受限的搜索功能:")]),n._v(" "),t("p",[n._v("(tutorial-env) $ pip search astronomy\nskyfield               - Elegant astronomy for Python\ngary                   - Galactic astronomy and gravitational dynamics.\nnovas                  - The United States Naval Observatory NOVAS astronomy library\nastroobs               - Provides astronomy ephemeris to plan telescope observations\nPyAstronomy            - A collection of astronomy related tools for Python.\n...")]),n._v(" "),t("p",[t("code",[n._v("pip")]),n._v(" 有许多子命令：“search”、“install”、“uninstall”、“freeze”等等。（请参阅 "),t("a",{attrs:{href:"https://docs.python.org/zh-cn/3/installing/index.html#installing-index",target:"_blank",rel:"noopener noreferrer"}},[n._v("安装 Python 模块"),t("OutboundLink")],1),n._v(" 指南以了解 "),t("code",[n._v("pip")]),n._v(" 的完整文档。）")]),n._v(" "),t("p",[n._v("您可以通过指定包的名称来安装最新版本的包：")]),n._v(" "),t("p",[n._v("(tutorial-env) $ pip install novas\nCollecting novas\nDownloading novas-3.1.1.3.tar.gz (136kB)\nInstalling collected packages: novas\nRunning setup.py install for novas\nSuccessfully installed novas-3.1.1.3")]),n._v(" "),t("p",[n._v("您还可以通过提供包名称后跟 "),t("code",[n._v("==")]),n._v(" 和版本号来安装特定版本的包：")]),n._v(" "),t("p",[n._v("(tutorial-env) $ pip install requests==2.6.0\nCollecting requests==2.6.0\nUsing cached requests-2.6.0-py2.py3-none-any.whl\nInstalling collected packages: requests\nSuccessfully installed requests-2.6.0")]),n._v(" "),t("p",[n._v("如果你重新运行这个命令，"),t("code",[n._v("pip")]),n._v(" 会注意到已经安装了所请求的版本并且什么都不做。您可以提供不同的版本号来获取该版本，或者您可以运行 "),t("code",[n._v("pip install --upgrade")]),n._v(" 将软件包升级到最新版本：")]),n._v(" "),t("p",[n._v("(tutorial-env) $ pip install --upgrade requests\nCollecting requests\nInstalling collected packages: requests\nFound existing installation: requests 2.6.0\nUninstalling requests-2.6.0:\nSuccessfully uninstalled requests-2.6.0\nSuccessfully installed requests-2.7.0")]),n._v(" "),t("p",[t("code",[n._v("pip uninstall")]),n._v(" 后跟一个或多个包名称将从虚拟环境中删除包。")]),n._v(" "),t("p",[t("code",[n._v("pip show")]),n._v(" 将显示有关特定包的信息：")]),n._v(" "),t("p",[n._v("(tutorial-env) $ pip show requests\n---\nMetadata-Version: 2.0\nName: requests\nVersion: 2.7.0\nSummary: Python HTTP for Humans.\nHome-page: http://python-requests.org\nAuthor: Kenneth Reitz\nAuthor-email: me@kennethreitz.com\nLicense: Apache 2.0\nLocation: /Users/akuchling/envs/tutorial-env/lib/python3.4/site-packages\nRequires:")]),n._v(" "),t("p",[t("code",[n._v("pip list")]),n._v(" 将显示虚拟环境中安装的所有软件包：")]),n._v(" "),t("p",[n._v("(tutorial-env) $ pip list\nnovas (3.1.1.3)\nnumpy (1.9.2)\npip (7.0.3)\nrequests (2.7.0)\nsetuptools (16.0)")]),n._v(" "),t("p",[n._v("pip freeze` 将生成一个类似的已安装包列表，但输出使用 "),t("code",[n._v("pip install")]),n._v(" 期望的格式。一个常见的约定是将此列表放在 "),t("code",[n._v("requirements.txt")]),n._v(" 文件中：")]),n._v(" "),t("p",[n._v("(tutorial-env) $ pip freeze > requirements.txt\n(tutorial-env) $ cat requirements.txt\nnovas==3.1.1.3\nnumpy==1.9.2\nrequests==2.7.0")]),n._v(" "),t("p",[n._v("然后可以将 "),t("code",[n._v("requirements.txt")]),n._v(" 提交给版本控制并作为应用程序的一部分提供。然后用户可以使用 "),t("code",[n._v("install -r")]),n._v(" 安装所有必需的包：")]),n._v(" "),t("p",[n._v("(tutorial-env) $ pip install -r requirements.txt\nCollecting novas==3.1.1.3 (from -r requirements.txt (line 1))\n...\nCollecting numpy==1.9.2 (from -r requirements.txt (line 2))\n...\nCollecting requests==2.7.0 (from -r requirements.txt (line 3))\n...\nInstalling collected packages: novas, numpy, requests\nRunning setup.py install for novas\nSuccessfully installed novas-3.1.1.3 numpy-1.9.2 requests-2.7.0")]),n._v(" "),t("p",[t("code",[n._v("pip")]),n._v(" 有更多选择。有关 "),t("code",[n._v("pip")]),n._v(" 的完整文档，请参阅 "),t("a",{attrs:{href:"https://docs.python.org/zh-cn/3/installing/index.html#installing-index",target:"_blank",rel:"noopener noreferrer"}},[n._v("安装 Python 模块"),t("OutboundLink")],1),n._v(" 指南。当您编写一个包并希望在 Python 包索引中使它可用时，请参考 "),t("a",{attrs:{href:"https://docs.python.org/zh-cn/3/distributing/index.html#distributing-index",target:"_blank",rel:"noopener noreferrer"}},[n._v("分发 Python 模块"),t("OutboundLink")],1),n._v(" 指南。")])])}),[],!1,null,null,null);e.default=r.exports}}]);