(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{481:function(e,t,s){"use strict";s.r(t);var r=s(25),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"问题产生原因"}},[e._v("问题产生原因")]),e._v(" "),s("p",[e._v("在查看别人的Python项目时，经常会看到一个"),s("code",[e._v("requirements.txt")]),e._v("文件，里面记录了当前程序的所有依赖包及其精确版本号。这个文件有点类似与Rails的"),s("code",[e._v("Gemfile")]),e._v("。其作用是用来在另一台PC上重新构建项目所需要的运行环境依赖。")]),e._v(" "),s("p",[e._v("requirements.txt可以通过"),s("code",[e._v("pip")]),e._v("命令自动生成和安装")]),e._v(" "),s("h3",{attrs:{id:"生成requirements-txt文件"}},[e._v("生成requirements.txt文件")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("pip freeze "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" requirements.txt\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"安装requirements-txt依赖"}},[e._v("安装requirements.txt依赖")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -r requirements.txt\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"环境混用怎么办？"}},[e._v("环境混用怎么办？")]),e._v(" "),s("p",[e._v("在导出依赖到 requirement.txt 文件时会有一种尴尬的情况。")]),e._v(" "),s("p",[e._v("你的本地环境不仅包含项目 A 所需要的依赖，也包含着项目 B 所需要的依赖。此时我们要如何做到只把项目 A 的依赖导出呢？")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/bndr/pipreqs",target:"_blank",rel:"noopener noreferrer"}},[e._v("pipreqs"),s("OutboundLink")],1),e._v(" 可以通过扫描项目目录，帮助我们仅生成当前项目的依赖清单。")]),e._v(" "),s("p",[e._v("通过以下命令安装：")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" pipreqs\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("运行：")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("pipreqs ./\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"补充"}},[e._v("补充")]),e._v(" "),s("p",[e._v("如果安装pipreqs之后找不到命令，那么就是你的路径有问题。因为pip安装的软件的命令默认在.local，很多路径都没有包括。")]),e._v(" "),s("p",[e._v("临时使用的时候，可以输入")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("~/.local/bin:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("然后测试下有没有效果，如果有效果，那么就把这行复制到你的配置中。")]),e._v(" "),s("h2",{attrs:{id:"参考文章"}},[e._v("参考文章")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/69058584",target:"_blank",rel:"noopener noreferrer"}},[e._v("Python 中的 requirement.txt"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://lazybios.com/2015/06/how-to-use-requirementstxt-file-in-python/",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何自动生成和安装requirements.txt依赖"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);