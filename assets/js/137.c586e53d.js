(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{438:function(i,v,e){"use strict";e.r(v);var t=e(25),n=Object(t.a)({},(function(){var i=this,v=i.$createElement,e=i._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[e("h1",{attrs:{id:"前言"}},[e("code",[i._v("前言")])]),i._v(" "),e("p",[i._v("轻量级 Vim 配置框架，全中文注释，这既是一份合理的轻量级配置，更是一份简明教程。话说，网上的 Vim 配置多的数不过来，这里又做一个干嘛？这些配置都有一些问题：")]),i._v(" "),e("ul",[e("li",[i._v("注释不够，很多配置就是劈里啪啦一堆 VimScript 看的人一头雾水，新人顶多只能 “用”，没法跟着 “学”。")]),i._v(" "),e("li",[i._v("大部分都是针对 Vim 7 以前的版本，太过陈旧，对 8.0/8.1 以后的各种现代编辑器特征支持不足。")]),i._v(" "),e("li",[i._v("模块化不够好，全部塞在一个几百行的 "),e("code",[i._v("vimrc")]),i._v(" 文件里，各部分搅在一起，增改都比较麻烦。")]),i._v(" "),e("li",[i._v("插件没有分组，不能根据需要灵活选择功能组，所有插件一上就全上了，要禁止就是进去注释代码。")]),i._v(" "),e("li",[i._v("它们有很多错误的地方，比如中文编码都没设对，很多 Windows 下的 PowerShell 脚本都打开不了。")]),i._v(" "),e("li",[i._v("错误的习惯，比如把 jk 映射成 ESC 的，顺着从 a 打倒 z 都打不流畅，输入个 "),e("code",[i._v("Dijkstra")]),i._v(" 都输入不了。")]),i._v(" "),e("li",[i._v("对 C/C++ 开发支持不足。")])]),i._v(" "),e("p",[i._v("还有不少插件自己给设置门槛的，比如把方向键禁用掉，我见过很多才用 Vim 的新人，大部分都呆在插入模式下，保存文件才会退出一下，至少人家开始用了，等到熟练了，该用 hjkl 的时候自然会去用。你这上来就把方向键和鼠标禁止了，除了阻挡新人外，我不知道有什么作用。")]),i._v(" "),e("p",[i._v("总之，山寨居多，还有某些著名的广为流传的 Vim 配置，我都不想点名了，把 Leader 键映射成逗号了，它不知道逗号/分号在 Vim 里是用来定位 f/t 搜索的下一个/上一个结果的么？就和 n/N 定位斜杠搜索一样。把 Leader 定义成空格我都还觉得挺科学，定义成逗号和分号的这些配置，是在把错误的用法源源不断的交给未来的新用户。")]),i._v(" "),e("p",[i._v("所以网上缺一份合理的轻量级配置，适合新人学习那种，于是有了这个项目。")]),i._v(" "),e("h1",{attrs:{id:"安装-安装"}},[e("code",[i._v("[](#安装)安装")])]),i._v(" "),e("p",[i._v("将项目克隆到你喜欢的目录内，比如 "),e("code",[i._v("~/.vim")]),i._v(" 内：")]),i._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[i._v("cd")]),i._v(" ~/.vim\n"),e("span",{pre:!0,attrs:{class:"token function"}},[i._v("git")]),i._v(" clone https://github.com/skywind3000/vim-init.git\n")])]),i._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[i._v("1")]),e("br"),e("span",{staticClass:"line-number"},[i._v("2")]),e("br")])]),e("p",[i._v("然后创建你的 "),e("code",[i._v("~/.vimrc")]),i._v(" 文件，里面只有一句话：")]),i._v(" "),e("div",{staticClass:"language-viml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[i._v("source ~/.vim/vim-init/init.vim\n")])]),i._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[i._v("1")]),e("br")])]),e("p",[i._v("请调整你的终端软件，确保对 ALT 键的支持，以及 Backspace 键发送正确扫描码：")]),i._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/skywind3000/vim-init/wiki/Setup-terminals-to-support-ALT-and-Backspace-correctly",target:"_blank",rel:"noopener noreferrer"}},[i._v("终端软件下正确支持 ALT 键和 Backspace 键"),e("OutboundLink")],1)]),i._v(" "),e("p",[i._v("然后启动 Vim，在命令行运行 "),e("code",[i._v(":PlugInstall")]),i._v(" 安装依赖插件即可。")]),i._v(" "),e("h1",{attrs:{id:"结构-结构"}},[e("code",[i._v("[](#结构)结构")])]),i._v(" "),e("p",[i._v("本配置按顺序，由如下几个主要模块组成：")]),i._v(" "),e("ul",[e("li",[e("code",[i._v("init.vim")]),i._v(": 配置入口，设置 runtimepath 检测脚本路径，加载其他脚本。")]),i._v(" "),e("li",[e("code",[i._v("init-basic.vim")]),i._v(": 所有人都能同意的基础配置，去除任何按键和样式定义，保证能用于 "),e("code",[i._v("tiny")]),i._v(" 模式（没有 "),e("code",[i._v("+eval")]),i._v("）。")]),i._v(" "),e("li",[e("code",[i._v("init-config.vim")]),i._v(": 支持 +eval 的非 tiny 配置，初始化 ALT 键支持，功能键键盘码，备份，终端兼容等")]),i._v(" "),e("li",[e("code",[i._v("init-tabsize.vim")]),i._v(": 制表符宽度，是否展开空格等，因为个人差异太大，单独一个文件好更改。")]),i._v(" "),e("li",[e("code",[i._v("init-plugin.vim")]),i._v(": 插件，使用 vim-plug，按照设定的插件分组进行配置。")]),i._v(" "),e("li",[e("code",[i._v("init-style.vim")]),i._v(": 色彩主题，高亮优化，状态栏，更紧凑的标签栏文字等和显示相关的东西。")]),i._v(" "),e("li",[e("code",[i._v("init-keymaps.vim")]),i._v(": 快捷键定义。")])]),i._v(" "),e("p",[i._v("最好 fork 一份到你自己的仓库，然后不断修改，把它修改成你自己的东西，平时要更新时到这里同步下上游仓库，然后自己合并一下即可。")]),i._v(" "),e("p",[i._v("除去 vim-plug 额外安装的插件外，本配置自带一些依赖较大的"),e("a",{attrs:{href:"https://github.com/skywind3000/vim-init/wiki/Integrated-Plugins",target:"_blank",rel:"noopener noreferrer"}},[i._v("插件"),e("OutboundLink")],1),i._v("，保证内网连不了网的情况下，把本配置压缩包解压一下就能跑得起来，且基本功能可用，它们都比较简单，往往一两个文件，分布于 "),e("code",[i._v("plugin")]),i._v(" 和 "),e("code",[i._v("autoload")]),i._v(" 两个目录中，你可以根据自己需要增改。")]),i._v(" "),e("h1",{attrs:{id:"帮助-帮助"}},[e("code",[i._v("[](#帮助)帮助")])]),i._v(" "),e("p",[i._v("既然是全中文注释，帮助主要看 "),e("a",{attrs:{href:"https://github.com/skywind3000/vim-init/blob/master/init/init-keymaps.vim",target:"_blank",rel:"noopener noreferrer"}},[i._v("init-keymaps.vim"),e("OutboundLink")],1),i._v(" 和 "),e("a",{attrs:{href:"https://github.com/skywind3000/vim-init/blob/master/init/init-plugins.vim",target:"_blank",rel:"noopener noreferrer"}},[i._v("init-plugins.vim"),e("OutboundLink")],1),i._v(" 两个文件，每个点我都写满了注释了，也是未来你自己可能修改的最多的两个文件。每次你修改或者调试了单个 .vim 配置文件后，命令行输入 "),e("code",[i._v(":so %")]),i._v(" 即可重新载入，so 是 "),e("code",[i._v("source")]),i._v(" 的简写，意思是加载脚本，"),e("code",[i._v("%")]),i._v(" 代表当前正在编辑脚本的名字。")]),i._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/solider245/vim-init",target:"_blank",rel:"noopener noreferrer"}},[i._v("solider245/vim-init: 轻量级 Vim 配置框架，全中文注释"),e("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=n.exports}}]);