(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{439:function(t,e,r){"use strict";r.r(e);var n=r(25),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"前因"}},[r("strong",[t._v("前因")])]),t._v(" "),r("p",[r("strong",[t._v("这段话你可能看不懂如果你不是个gopher 直跳主题就好^_^")])]),t._v(" "),r("p",[t._v("继上篇文章我做了一次init.vim的拆分，其实目的是已经达到了。但是我最近又把它细化了，写了几年go，1.10之前的gocode是让人舒适的，但是1.10之后调整了缓存等，nsf不在维护gocode，于是google的工作人员接手了，添加的-souce特性让我崩溃，从源码获取补全信息？可想能慢到什么程度，不然你要每次手动go install -i 来生成.a的文件供gocode寻找，于是我准备切换使用lsp试试。")]),t._v(" "),r("p",[t._v("切换lsp 的解决方案有3种：")]),t._v(" "),r("ol",[r("li",[t._v("使用"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/autozimu/LanguageClient-neovim",target:"_blank",rel:"noopener noreferrer"}},[t._v("LanguageClient-neovim"),r("OutboundLink")],1),t._v(" (好像是国人写的） 配合 "),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/Shougo/deoplete",target:"_blank",rel:"noopener noreferrer"}},[t._v("deoplete"),r("OutboundLink")],1),t._v(" 或者 "),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/ncm2/ncm2",target:"_blank",rel:"noopener noreferrer"}},[t._v("ncm2"),r("OutboundLink")],1),t._v(" （国人写的）")]),t._v(" "),r("li",[t._v("使用"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/neoclide/coc.nvim",target:"_blank",rel:"noopener noreferrer"}},[t._v("coc"),r("OutboundLink")],1),t._v(" （作者是赵启明 大佬）")]),t._v(" "),r("li",[t._v("deoplete-tabnine 它也是支持lsp的")])]),t._v(" "),r("p",[t._v("正好想试试coc，所以准备折腾一下，结果我发现上次拆分玩的配置还是不太好维护，可能装的插件太多了，"),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/54864654",target:"_blank",rel:"noopener noreferrer"}},[t._v("上篇文章"),r("OutboundLink")],1),t._v(" 适用于插件较少的配置 20个左右？它表现的就很好。所以我就继续拆了一下。")]),t._v(" "),r("h2",{attrs:{id:"module-init-vim"}},[r("strong",[t._v("Module init.vim")])]),t._v(" "),r("p",[t._v("init.vim的模块")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("dein")])]),t._v(" "),r("li",[r("p",[t._v("plugins.toml 正常加载插件")])]),t._v(" "),r("li",[r("p",[t._v("plugins-lazy.toml 懒加载插件（基于某些命令或文件格式等加载插件）")])]),t._v(" "),r("li",[r("p",[t._v("plugins")])]),t._v(" "),r("li",[r("p",[t._v("插件配置")])]),t._v(" "),r("li",[r("p",[t._v("general")])]),t._v(" "),r("li",[r("p",[t._v("vim设置")])]),t._v(" "),r("li",[r("p",[t._v("mappings")])]),t._v(" "),r("li",[r("p",[t._v("键位映射设置，（注意：leader和mapleader必须加载在插件前）")])]),t._v(" "),r("li",[r("p",[t._v("filetype")])]),t._v(" "),r("li",[r("p",[t._v("文件格式设置")])]),t._v(" "),r("li",[r("p",[t._v("autoload")])]),t._v(" "),r("li",[r("p",[t._v("utils.vim --\x3e airlinetabline 函数")])])]),t._v(" "),r("p",[t._v("现在的样子，这样看起来想比之前的更加清爽了，也方便维护了")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://picb.zhimg.com/v2-00255bb2025202c7a1ed1f6ca9862a83_b.jpg",alt:""}})]),t._v(" "),r("p",[r("img",{attrs:{src:"https://picb.zhimg.com/80/v2-00255bb2025202c7a1ed1f6ca9862a83_720w.jpg",alt:""}})]),t._v(" "),r("p",[t._v("目录")]),t._v(" "),r("p",[t._v("然后重写了一下init.vim 也就是简单的写了个函数：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://pic1.zhimg.com/v2-192bd9865b4e14399ac7e6d8c5fe9c32_b.jpg",alt:""}})]),t._v(" "),r("p",[r("img",{attrs:{src:"https://pic1.zhimg.com/80/v2-192bd9865b4e14399ac7e6d8c5fe9c32_720w.jpg",alt:""}})]),t._v(" "),r("p",[t._v("至此就大功告成了，看到现在的配置目录简直是舒服！！！")]),t._v(" "),r("h2",{attrs:{id:"关于coc与deoplete"}},[r("strong",[t._v("关于coc与deoplete")])]),t._v(" "),r("p",[t._v("coc确实集成了很多东西，而且配置简单，易上手，性能优秀，最近用coc写react的时候确实很舒服！！！")]),t._v(" "),r("p",[t._v("ncm2我没用过，所以不太清楚，关于coc与deoplete是有区别的，看似都在做一件事，其实deoplete是个自动完成补全的框架，而coc 更像是 all in one package approach for LSP。最近看到说补全速度的。deoplete进行了优化，说实话我之前很长用过很长一段时间deoplete，切换coc，在速度上我是没什么感觉哪个更快哪个更慢。")]),t._v(" "),r("p",[t._v("所以这2个插件都是五星推荐： ★★★★★")]),t._v(" "),r("p",[t._v("或者你可以像我一样 vim 和neovim都用，2个配置，一个deoplete 一个coc。鱼和熊掌兼得了")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/taigacute/mydotfiles",target:"_blank",rel:"noopener noreferrer"}},[t._v("taigacute/mydotfiles​github.com"),r("img",{attrs:{src:"https://pic4.zhimg.com/v2-10dab5b58e56cd4283ea8899d93a0b2a_ipico.jpg",alt:"图标"}}),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("最后附图我的配置")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://pic1.zhimg.com/v2-c4e4cc6952514f41dad77fe48f840010_b.jpg",alt:""}})]),t._v(" "),r("p",[r("img",{attrs:{src:"https://pic1.zhimg.com/80/v2-c4e4cc6952514f41dad77fe48f840010_720w.jpg",alt:""}})]),t._v(" "),r("p",[t._v("编辑于 2019-01-22")]),t._v(" "),r("p",[t._v("ThinkVim")]),t._v(" "),r("p",[t._v("`")]),t._v(" "),r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/hardcoreplayers/ThinkVim/wiki/Screenshots",target:"_blank",rel:"noopener noreferrer"}},[t._v("屏幕截图"),r("OutboundLink")],1)]),t._v(" •使用 "),r("strong",[r("a",{attrs:{href:"https://github.com/hardcoreplayers/ThinkVim/wiki/QuickStart",target:"_blank",rel:"noopener noreferrer"}},[t._v("入门"),r("OutboundLink")],1)]),t._v(" • "),r("strong",[r("a",{attrs:{href:"https://github.com/hardcoreplayers/ThinkVim/wiki/Shorcuts",target:"_blank",rel:"noopener noreferrer"}},[t._v("快捷方式"),r("OutboundLink")],1)]),t._v(" • "),r("strong",[r("a",{attrs:{href:"https://github.com/hardcoreplayers/ThinkVim/blob/develop/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://user-images.githubusercontent.com/41671631/84489554-71c4f980-acd4-11ea-929a-4dfc0f9ea1bf.png",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://user-images.githubusercontent.com/41671631/84489554-71c4f980-acd4-11ea-929a-4dfc0f9ea1bf.png",alt:""}}),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("对于某些用户，我编写了一个CLI来生成名为 "),r("a",{attrs:{href:"https://github.com/glepnir/jarvim",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jarvim的"),r("OutboundLink")],1),t._v(" vim配置"),r("a",{attrs:{href:"https://github.com/glepnir/jarvim",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"features-features"}},[r("code",[t._v("[](#features)Features")])]),t._v(" "),r("ul",[r("li",[t._v("简约的外观受到现代编辑的启发。")]),t._v(" "),r("li",[t._v("模块化架构，可实现更有条理的Neovim配置。")]),t._v(" "),r("li",[t._v("自动缩进检测和editorconfig集成。 让其他人争论制表符与 "),r("strong",[t._v("空格")]),t._v(" 。")]),t._v(" "),r("li",[t._v("由 "),r("a",{attrs:{href:"https://github.com/BurntSushi/ripgrep",target:"_blank",rel:"noopener noreferrer"}},[t._v("ripgrep"),r("OutboundLink")],1),t._v(" 和 "),r("a",{attrs:{href:"https://github.com/liuchengxu/vim-clap",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-clap"),r("OutboundLink")],1),t._v(" 支持的快速搜索（和替换）实用程序"),r("a",{attrs:{href:"https://github.com/liuchengxu/vim-clap",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("vim和emacs组合的键绑定方案，以领导者和本地领导者前缀键（ SPC 和 ; ，默认为）为中心。")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/neoclide/coc.nvim",target:"_blank",rel:"noopener noreferrer"}},[t._v("coc.nvim的"),r("OutboundLink")],1),t._v(" 完整Lsp支持"),r("a",{attrs:{href:"https://github.com/neoclide/coc.nvim",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("使用60多个插件和由 "),r("a",{attrs:{href:"https://github.com/Shougo/dein.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("dein"),r("OutboundLink")],1),t._v(" 支持的声明性插件管理，可在不到80ms的时间内快速启动"),r("a",{attrs:{href:"https://github.com/Shougo/dein.vim",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("美丽的statusline "),r("a",{attrs:{href:"https://github.com/hardcoreplayers/spaceline.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("spaceline.vim"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("色彩方案 "),r("a",{attrs:{href:"https://github.com/hardcoreplayers/oceanic-material",target:"_blank",rel:"noopener noreferrer"}},[t._v("OceanicMaterial"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("仪表 "),r("a",{attrs:{href:"https://github.com/hardcoreplayers/dashboard-nvim",target:"_blank",rel:"noopener noreferrer"}},[t._v("板dashboard-nvim"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("交互式外壳安装语言支持")])]),t._v(" "),r("h2",{attrs:{id:"installation-installation"}},[r("code",[t._v("[](#installation)Installation")])]),t._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --depth"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" https://github.com/hardcoreplayers/ThinkVim.git ~/.config/nvim\n"),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/.config/nvim\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" scripts/install.sh\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br")])]),r("h2",{attrs:{id:"uninstall-uninstall"}},[r("code",[t._v("[](#uninstall)Uninstall")])]),t._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" scripts/cleanup.sh\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br")])]),r("h2",{attrs:{id:"quick-start-quick-start"}},[r("code",[t._v("[](#quick-start)Quick Start")])]),t._v(" "),r("p",[t._v("检查 "),r("a",{attrs:{href:"https://github.com/hardcoreplayers/ThinkVim/wiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("thinkvim Wiki"),r("OutboundLink")],1),t._v(" 页面或docs文件夹。")])])}),[],!1,null,null,null);e.default=a.exports}}]);