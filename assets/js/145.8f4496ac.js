(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{363:function(e,s,a){"use strict";a.r(s);var n=a(25),v=Object(n.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#用法-🔗-usage"}},[e._v("用法 🔗")])]),a("li",[a("a",{attrs:{href:"#buildkit-🔗-buildkit"}},[e._v("BuildKit 🔗")])]),a("li",[a("a",{attrs:{href:"#格式-🔗-format"}},[e._v("格式 🔗")])]),a("li",[a("a",{attrs:{href:"#解析器指令-🔗-parser-directives"}},[e._v("解析器指令 🔗")])]),a("li",[a("a",{attrs:{href:"#语法-🔗-syntax"}},[e._v("语法 🔗")]),a("ul",[a("li",[a("a",{attrs:{href:"#官方发布-🔗-official-releases"}},[e._v("官方发布 🔗")])])])]),a("li",[a("a",{attrs:{href:"#逃脱-🔗-escape"}},[e._v("逃脱 🔗")])]),a("li",[a("a",{attrs:{href:"#更换环境-🔗-environment-replacement"}},[e._v("更换环境 🔗")])]),a("li",[a("a",{attrs:{href:"#dockerignore文件-🔗-dockerignore-file"}},[e._v(".dockerignore文件 🔗")])]),a("li",[a("a",{attrs:{href:"#来自-🔗-from"}},[e._v("来自 🔗")]),a("ul",[a("li",[a("a",{attrs:{href:"#了解arg和from之间的交互方式-🔗-understand-how-arg-and-from-interact"}},[e._v("了解ARG和FROM之间的交互方式 🔗")])])])]),a("li",[a("a",{attrs:{href:"#运行-🔗-run"}},[e._v("运行 🔗")]),a("ul",[a("li",[a("a",{attrs:{href:"#已知问题（运行）-🔗-known-issues-run"}},[e._v("已知问题（运行） 🔗")])])])]),a("li",[a("a",{attrs:{href:"#cmd-🔗-cmd"}},[e._v("CMD 🔗")])]),a("li",[a("a",{attrs:{href:"#标签-🔗-label"}},[e._v("标签 🔗")])]),a("li",[a("a",{attrs:{href:"#维护者-maintainer-deprecated-（已弃用）-🔗-maintainer-deprecated"}},[e._v("维护者](#maintainer-deprecated) （已弃用） [🔗")])]),a("li",[a("a",{attrs:{href:"#暴露-🔗-expose"}},[e._v("暴露 🔗")])]),a("li",[a("a",{attrs:{href:"#环保-v-env"}},[e._v("环保 V")])]),a("li",[a("a",{attrs:{href:"#添加-🔗-add"}},[e._v("添加 🔗")])]),a("li",[a("a",{attrs:{href:"#复制-🔗-copy"}},[e._v("复制 🔗")])]),a("li",[a("a",{attrs:{href:"#入口点-🔗-entrypoint"}},[e._v("入口点 🔗")]),a("ul",[a("li",[a("a",{attrs:{href:"#执行表格entrypoint示例-🔗-exec-form-entrypoint-example"}},[e._v("执行表格ENTRYPOINT示例 🔗")])]),a("li",[a("a",{attrs:{href:"#外壳形式entrypoint示例-example-shell-form-entrypoint-example"}},[e._v("外壳形式ENTRYPOINT示例 example")])]),a("li",[a("a",{attrs:{href:"#了解cmd和entrypoint如何相互作用-🔗-understand-how-cmd-and-entrypoint-interact"}},[e._v("了解CMD和ENTRYPOINT如何相互作用 🔗")])])])]),a("li",[a("a",{attrs:{href:"#音量-🔗-volume"}},[e._v("音量 🔗")]),a("ul",[a("li",[a("a",{attrs:{href:"#有关指定卷的注意事项-🔗-notes-about-specifying-volumes"}},[e._v("有关指定卷的注意事项 🔗")])])])]),a("li",[a("a",{attrs:{href:"#用户-🔗-user"}},[e._v("用户 🔗")])]),a("li",[a("a",{attrs:{href:"#workdir-🔗-workdir"}},[e._v("WORKDIR 🔗")])]),a("li",[a("a",{attrs:{href:"#arg-🔗-arg"}},[e._v("ARG 🔗")]),a("ul",[a("li",[a("a",{attrs:{href:"#默认值-🔗-default-values"}},[e._v("默认值 🔗")])]),a("li",[a("a",{attrs:{href:"#范围-🔗-scope"}},[e._v("范围 🔗")])]),a("li",[a("a",{attrs:{href:"#使用arg变量-🔗-using-arg-variables"}},[e._v("使用ARG变量 🔗")])]),a("li",[a("a",{attrs:{href:"#预定义的-args🔗-predefined-args"}},[e._v("预定义的 ARGs🔗")])]),a("li",[a("a",{attrs:{href:"#全球范围内的自动平台-args🔗-automatic-platform-args-in-the-global-scope"}},[e._v("全球范围内的自动平台 ARGs🔗")])]),a("li",[a("a",{attrs:{href:"#对构建缓存的影响-🔗-impact-on-build-caching"}},[e._v("对构建缓存的影响 🔗")])])])]),a("li",[a("a",{attrs:{href:"#已建-🔗-onbuild"}},[e._v("已建 🔗")])]),a("li",[a("a",{attrs:{href:"#停止-信号🔗-stopsignal"}},[e._v("停止 信号🔗")])]),a("li",[a("a",{attrs:{href:"#健康-检查🔗-healthcheck"}},[e._v("健康 检查🔗")])]),a("li",[a("a",{attrs:{href:"#shell-🔗-shell"}},[e._v("SHELL 🔗")])]),a("li",[a("a",{attrs:{href:"#外部实施功能-🔗-external-implementation-features"}},[e._v("外部实施功能 🔗")])]),a("li",[a("a",{attrs:{href:"#dockerfile示例-examples-dockerfile-examples"}},[e._v("Dockerfile示例 examples")])])])]),e._v("\nDocker可以通过阅读Docker的指令来自动构建映像 "),a("code",[e._v("Dockerfile")]),e._v(" 。 A "),a("code",[e._v("Dockerfile")]),e._v(" 是一个文本文档，其中包含用户可以在命令行上调用以组装图像的所有命令。 使用 "),a("code",[e._v("docker build")]),e._v(" 用户可以创建一个自动构建，该构建连续执行多个命令行指令。"),a("p"),e._v(" "),a("p",[e._v("本页描述您可以在中使用的命令 "),a("code",[e._v("Dockerfile")]),e._v(" 。 阅读完此页面后，请参考 "),a("a",{attrs:{href:"https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Dockerfile")]),e._v("最佳实践"),a("OutboundLink")],1),e._v(" 以获取有关技巧的指南。")]),e._v(" "),a("h2",{attrs:{id:"用法-🔗"}},[e._v("用法 "),a("a",{attrs:{href:"#usage"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("的 "),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/build/",target:"_blank",rel:"noopener noreferrer"}},[e._v("搬运工构建"),a("OutboundLink")],1),e._v(" 命令从一个构建的图像 "),a("code",[e._v("Dockerfile")]),e._v(" 和一个 "),a("em",[e._v("上下文")]),e._v(" 。 构建的上下文是指定位置 "),a("code",[e._v("PATH")]),e._v(" 或 的文件集 "),a("code",[e._v("URL")]),e._v(" 。 这 "),a("code",[e._v("PATH")]),e._v(" 是本地文件系统上的目录。 该 "),a("code",[e._v("URL")]),e._v(" 是一个Git仓库的位置。")]),e._v(" "),a("p",[e._v("上下文是递归处理的。 因此，a "),a("code",[e._v("PATH")]),e._v(" 包括任何子目录，并且 a 包括 "),a("code",[e._v("URL")]),e._v(" 存储库及其子模块。 此示例显示了一个使用当前目录作为上下文的构建命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build .\n\nSending build context to Docker daemon  6.51 MB\n...\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("构建是由Docker守护程序而不是CLI运行的。 生成过程要做的第一件事是将整个上下文（递归）发送到守护程序。 在大多数情况下，最好从空目录开始作为上下文，并将Dockerfile保留在该目录中。 仅添加构建Dockerfile所需的文件。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("警告")])]),e._v(" "),a("p",[e._v("不要用你的根目录下， "),a("code",[e._v("/")]),e._v(" 作为 "),a("code",[e._v("PATH")]),e._v(" 因为它会导致生成到您的硬盘驱动器的全部内容传输到码头工人守护进程。")])]),e._v(" "),a("p",[e._v("要在构建上下文中使用文件， "),a("code",[e._v("Dockerfile")]),e._v(" 引用是指指令（例如， "),a("code",[e._v("COPY")]),e._v(" 指令）中 指定的文件 。 要提高构建的性能，请通过将 "),a("code",[e._v(".dockerignore")]),e._v(" 文件 添加 到上下文目录来 排除文件和 目录。 有关如何 "),a("a",{attrs:{href:"#dockerignore-file"}},[e._v("创建 "),a("code",[e._v(".dockerignore")]),e._v(" 文件的信息，")]),e._v(" 请参阅此页面上的文档。")]),e._v(" "),a("p",[e._v("传统上， "),a("code",[e._v("Dockerfile")]),e._v(" 称为 "),a("code",[e._v("Dockerfile")]),e._v(" 并位于上下文的根中。 您可以使用 "),a("code",[e._v("-f")]),e._v(" 标志with "),a("code",[e._v("docker build")]),e._v(" 指向文件系统中任何位置的Dockerfile。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build -f /path/to/a/Dockerfile .\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("如果构建成功，则可以指定一个存储库和标记，用于在其中存储新图像：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build -t shykes/myapp .\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("要在构建后将映像标记到多个存储库中，请在 "),a("code",[e._v("-t")]),e._v(" 运行 "),a("code",[e._v("build")]),e._v(" 命令 时 添加多个 参数 ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build -t shykes/myapp:1.0.2 -t shykes/myapp:latest .\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("在Docker守护程序运行中的指令之前 "),a("code",[e._v("Dockerfile")]),e._v(" ，它 会对 进行初步验证， "),a("code",[e._v("Dockerfile")]),e._v(" 如果语法不正确，则返回错误：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build -t test/myapp .\n\nSending build context to Docker daemon 2.048 kB\nError response from daemon: Unknown instruction: RUNCMD\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("Docker守护程序以 "),a("code",[e._v("Dockerfile")]),e._v(" 一对一的方式 运行指令， 如有必要，将每条指令的结果提交到新映像，然后最终输出新映像的ID。 Docker守护程序将自动清理您发送的上下文。")]),e._v(" "),a("p",[e._v("请注意，每条指令都是独立运行的，并会导致创建新映像-因此 "),a("code",[e._v("RUN cd /tmp")]),e._v(" 对下一条指令不会有任何影响。")]),e._v(" "),a("p",[e._v("Docker将尽可能重用中间映像（缓存），以 "),a("code",[e._v("docker build")]),e._v(" 显着 加速该 过程。 这由 "),a("code",[e._v("Using cache")]),e._v(" 控制台输出中 的 消息 指示 。 （有关详细信息，请参阅 "),a("a",{attrs:{href:"https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Dockerfile")]),e._v("最佳做法指南"),a("OutboundLink")],1),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build -t svendowideit/ambassador .\n\nSending build context to Docker daemon 15.36 kB\nStep 1/4 : FROM alpine:3.2\n ---\x3e 31f630c65071\nStep 2/4 : MAINTAINER SvenDowideit@home.org.au\n ---\x3e Using cache\n ---\x3e 2a1c91448f5f\nStep 3/4 : RUN apk update &&      apk add socat &&        rm -r /var/cache/\n ---\x3e Using cache\n ---\x3e 21ed6e7fbb73\nStep 4/4 : CMD env | grep _TCP= | (sed 's/.*_PORT_\\([0-9]*\\)_TCP=tcp:\\/\\/\\(.*\\):\\(.*\\)/socat -t 100000000 TCP4-LISTEN:\\1,fork,reuseaddr TCP4:\\2:\\3 \\&/' && echo wait) | sh\n ---\x3e Using cache\n ---\x3e 7ea8aef582cc\nSuccessfully built 7ea8aef582cc\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("p",[e._v("构建缓存仅用于具有本地父链的映像。 这意味着这些图像是由以前的版本创建的，或者整个图像链都已加载 "),a("code",[e._v("docker load")]),e._v(" 。 如果您希望使用特定映像的构建缓存，则可以使用 "),a("code",[e._v("--cache-from")]),e._v(" 选项 指定它 。 指定的图像 "),a("code",[e._v("--cache-from")]),e._v(" 不需要具有父链，并且可以从其他注册表中提取。")]),e._v(" "),a("p",[e._v("完成构建后，就可以开始研究 "),a("a",{attrs:{href:"https://docs.docker.com/engine/tutorials/dockerrepos/#/contributing-to-docker-hub",target:"_blank",rel:"noopener noreferrer"}},[a("em",[e._v("将存储库推送到其注册表了")]),a("OutboundLink")],1),e._v(" 。")]),e._v(" "),a("h2",{attrs:{id:"buildkit-🔗"}},[e._v("BuildKit "),a("a",{attrs:{href:"#buildkit"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("从版本18.09开始，Docker支持由 "),a("a",{attrs:{href:"https://github.com/moby/buildkit",target:"_blank",rel:"noopener noreferrer"}},[e._v("moby / buildkit"),a("OutboundLink")],1),e._v(" 项目 提供的用于执行构建的新后端 。 与旧的实现相比，BuildKit后端提供了许多好处。 例如，BuildKit可以：")]),e._v(" "),a("ul",[a("li",[e._v("检测并跳过执行未使用的构建阶段")]),e._v(" "),a("li",[e._v("并行构建独立构建阶段")]),e._v(" "),a("li",[e._v("两次构建之间仅增量传输构建上下文中的更改文件")]),e._v(" "),a("li",[e._v("在构建上下文中检测并跳过传输未使用的文件")]),e._v(" "),a("li",[e._v("使用具有许多新功能的外部Dockerfile实现")]),e._v(" "),a("li",[e._v("避免与其他API产生副作用（中间图像和容器）")]),e._v(" "),a("li",[e._v("优先考虑构建缓存以进行自动修剪")])]),e._v(" "),a("p",[e._v("要使用BuildKit后端，您需要 "),a("code",[e._v("DOCKER_BUILDKIT=1")]),e._v(" 在CLI上 设置环境变量 ，然后再调用 "),a("code",[e._v("docker build")]),e._v(" 。")]),e._v(" "),a("p",[e._v("要了解基于BuildKit的构建可用的实验性Dockerfile语法， "),a("a",{attrs:{href:"https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/experimental.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("请参阅BuildKit存储库中的文档"),a("OutboundLink")],1),e._v(" 。")]),e._v(" "),a("h2",{attrs:{id:"格式-🔗"}},[e._v("格式 "),a("a",{attrs:{href:"#format"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("这是的格式 "),a("code",[e._v("Dockerfile")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Comment\nINSTRUCTION arguments\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("该指令不区分大小写。 但是，约定将它们大写，以便更轻松地将它们与参数区分开。")]),e._v(" "),a("p",[e._v("Docker "),a("code",[e._v("Dockerfile")]),e._v(" 按顺序 运行指令 。 一个 "),a("code",[e._v("Dockerfile")]),e._v(" "),a("strong",[e._v("必须以开始"),a("code",[e._v("FROM")]),e._v("的指令")]),e._v(" 。 这可能在 "),a("a",{attrs:{href:"#parser-directives"}},[e._v("解析器指令")]),e._v(" ， "),a("a",{attrs:{href:"#format"}},[e._v("注释")]),e._v(" 和全局范围的 "),a("a",{attrs:{href:"#arg"}},[e._v("ARG之后")]),e._v(" 。 该 "),a("code",[e._v("FROM")]),e._v(" 指令指定 要从中构建 "),a("a",{attrs:{href:"https://docs.docker.com/glossary/#parent_image",target:"_blank",rel:"noopener noreferrer"}},[a("em",[e._v("父图像")]),a("OutboundLink")],1),e._v(" 。 "),a("code",[e._v("FROM")]),e._v(" 只能在一个或多个 "),a("code",[e._v("ARG")]),e._v(" 指令之后，这些指令声明在中的 "),a("code",[e._v("FROM")]),e._v(" 行中 使用的参数 "),a("code",[e._v("Dockerfile")]),e._v(" 。")]),e._v(" "),a("p",[e._v("该码头工人对待线 "),a("em",[e._v("开始")]),e._v(" 以 "),a("code",[e._v("#")]),e._v(" 作为注释，除非该行是一个有效的 "),a("a",{attrs:{href:"#parser-directives"}},[e._v("解析器指令")]),e._v(" 。 "),a("code",[e._v("#")]),e._v(" 一行中其他任何地方 的 标记都被视为参数。 这允许如下语句：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Comment\nRUN echo 'we are running some # of cool things'\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("在执行Dockerfile指令之前删除注释行，这意味着以下示例中的注释不会由执行 "),a("code",[e._v("echo")]),e._v(" 命令 的Shell处理 ，并且以下两个示例是等效的：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("RUN echo hello \\\n# comment\nworld\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("RUN echo hello \\\nworld\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("注释中不支持换行符。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意空白")])]),e._v(" "),a("p",[e._v("为了向后兼容， 将忽略但不鼓励 在注释（ "),a("code",[e._v("#")]),e._v(" ）和指令（例如 "),a("code",[e._v("RUN")]),e._v(" ） 之前的前导空白 。 在这些情况下，不保留前导空格，因此以下示例是等效的：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("        # this is a comment-line\n    RUN echo hello\nRUN echo world\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# this is a comment-line\nRUN echo hello\nRUN echo world\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("但是请注意，指令 "),a("em",[e._v("参数")]),e._v(" 中的空格 （例如跟随其后的命令 "),a("code",[e._v("RUN")]),e._v(" ）被保留，因此以下示例使用指定的前导空格打印“ hello world”：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('RUN echo "\\\n     hello\\\n     world"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])])]),e._v(" "),a("h2",{attrs:{id:"解析器指令-🔗"}},[e._v("解析器指令 "),a("a",{attrs:{href:"#parser-directives"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("解析器指令是可选的，并且会影响 "),a("code",[e._v("Dockerfile")]),e._v(" 处理 a 中 后续行的 方式。 解析器指令不会在构建中添加层，也不会显示为构建步骤。 解析器指令以形式写为特殊类型的注释 "),a("code",[e._v("# directive=value")]),e._v(" 。 单个指令只能使用一次。")]),e._v(" "),a("p",[e._v("处理完注释，空行或生成器指令后，Docker不再寻找解析器指令。 而是将格式化为解析器指令的任何内容都视为注释，并且不会尝试验证它是否可能是解析器指令。 因此，所有解析器指令必须位于的最顶部 "),a("code",[e._v("Dockerfile")]),e._v(" 。")]),e._v(" "),a("p",[e._v("解析器指令不区分大小写。 但是，约定是小写的。 约定还应在任何解析器指令之后包含一个空白行。 解析器伪指令不支持行继续字符。")]),e._v(" "),a("p",[e._v("由于这些规则，以下示例均无效：")]),e._v(" "),a("p",[e._v("由于行继续而无效：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# direc \\\ntive=value\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("由于出现两次而无效：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# directive=value1\n# directive=value2\n\nFROM ImageName\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("由于出现在构建器指令之后而被视为注释：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ImageName\n# directive=value\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("由于出现在不是解析器指令的注释之后，因此被视为注释：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# About my dockerfile\n# directive=value\nFROM ImageName\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("由于未被识别，未知指令被视为注释。 此外，由于在非解析程序指令的注释之后出现，因此已知指令被视为注释。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# unknowndirective=value\n# knowndirective=value\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("解析器指令中允许非换行空格。 因此，以下各行均被相同对待：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("#directive=value\n# directive =value\n#\tdirective= value\n# directive = value\n#\t  dIrEcTiVe=value\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("支持以下解析器指令：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("syntax")])]),e._v(" "),a("li",[a("code",[e._v("escape")])])]),e._v(" "),a("h2",{attrs:{id:"语法-🔗"}},[e._v("语法 "),a("a",{attrs:{href:"#syntax"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# syntax=[remote image reference]\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# syntax=docker/dockerfile\n# syntax=docker/dockerfile:1.0\n# syntax=docker.io/docker/dockerfile:1\n# syntax=docker/dockerfile:1.0.0-experimental\n# syntax=example.com/user/repo:tag@sha256:abcdef...\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("仅当使用 "),a("a",{attrs:{href:"#buildkit"}},[e._v("BuildKit")]),e._v(" 后端 时才启用此功能 。")]),e._v(" "),a("p",[e._v("语法指令定义用于构建当前Dockerfile的Dockerfile构建器的位置。 BuildKit后端允许无缝使用构建器的外部实现，这些构建器以Docker映像的形式分发并在容器沙箱环境中执行。")]),e._v(" "),a("p",[e._v("自定义Dockerfile实现使您能够：")]),e._v(" "),a("ul",[a("li",[e._v("自动获取错误修正，无需更新守护程序")]),e._v(" "),a("li",[e._v("确保所有用户都使用相同的实现来构建您的Dockerfile")]),e._v(" "),a("li",[e._v("使用最新功能而不更新守护程序")]),e._v(" "),a("li",[e._v("试用新的实验性或第三方功能")])]),e._v(" "),a("h3",{attrs:{id:"官方发布-🔗"}},[e._v("官方发布 "),a("a",{attrs:{href:"#official-releases"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("Docker分发映像的正式版本，这些映像可用于 "),a("code",[e._v("docker/dockerfile")]),e._v(" 在Docker Hub上的存储库 下构建Dockerfile 。 有两个发布新图像的渠道：稳定版和实验版。")]),e._v(" "),a("p",[e._v("稳定的通道遵循语义版本控制。 例如：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("docker/dockerfile:1.0.0")]),e._v(" -仅允许不可变版本 "),a("code",[e._v("1.0.0")])]),e._v(" "),a("li",[a("code",[e._v("docker/dockerfile:1.0")]),e._v(" -允许版本 "),a("code",[e._v("1.0.*")])]),e._v(" "),a("li",[a("code",[e._v("docker/dockerfile:1")]),e._v(" -允许版本 "),a("code",[e._v("1.*.*")])]),e._v(" "),a("li",[a("code",[e._v("docker/dockerfile:latest")]),e._v(" -稳定频道上的最新版本")])]),e._v(" "),a("p",[e._v("在发布时，实验频道使用稳定版本中主要和次要组件的增量版本控制。 例如：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("docker/dockerfile:1.0.1-experimental")]),e._v(" -仅允许不可变版本 "),a("code",[e._v("1.0.1-experimental")])]),e._v(" "),a("li",[a("code",[e._v("docker/dockerfile:1.0-experimental")]),e._v(" -之后的最新实验版本 "),a("code",[e._v("1.0")])]),e._v(" "),a("li",[a("code",[e._v("docker/dockerfile:experimental")]),e._v(" -实验频道的最新版本")])]),e._v(" "),a("p",[e._v("您应该选择最适合自己需求的渠道。 如果您只想修正错误，则应使用 "),a("code",[e._v("docker/dockerfile:1.0")]),e._v(" 。 如果您想从实验功能中受益，则应使用实验频道。 如果您正在使用实验性频道，则较新的版本可能无法向后兼容，因此建议使用不可变的完整版本。")]),e._v(" "),a("p",[e._v("有关主版本和每晚发布的功能，请参考 "),a("a",{attrs:{href:"https://github.com/moby/buildkit/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("源存储库中"),a("OutboundLink")],1),e._v(" 的描述 。")]),e._v(" "),a("h2",{attrs:{id:"逃脱-🔗"}},[e._v("逃脱 "),a("a",{attrs:{href:"#escape"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# escape=\\ (backslash)\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("要么")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# escape=` (backtick)\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("escape")]),e._v(" 指令设置用来逃避的字符的字符 "),a("code",[e._v("Dockerfile")]),e._v(" 。 如果未指定，则默认转义字符为 "),a("code",[e._v("\\")]),e._v(" 。")]),e._v(" "),a("p",[e._v("转义字符用于转义一行中的字符和转义换行符。 这允许一条 "),a("code",[e._v("Dockerfile")]),e._v(" 指令跨越多行。 请注意，无论 "),a("code",[e._v("escape")]),e._v(" parser指令是否包含在 "),a("code",[e._v("Dockerfile")]),e._v(" ， "),a("em",[e._v("都不会在"),a("code",[e._v("RUN")]),e._v("命令中执行转义，除非在行末。")])]),e._v(" "),a("p",[e._v("将转义符设置 "),a("code",[e._v("`")]),e._v(" 为尤其有用 "),a("code",[e._v("Windows")]),e._v(" ，其中 "),a("code",[e._v("\\")]),e._v(" 目录路径分隔符为。 "),a("code",[e._v("`")]),e._v(" 与 "),a("a",{attrs:{href:"https://technet.microsoft.com/en-us/library/hh847755.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Windows PowerShell"),a("OutboundLink")],1),e._v(" 一致 。")]),e._v(" "),a("p",[e._v("考虑以下示例，该示例将以非显而易见的方式失败 "),a("code",[e._v("Windows")]),e._v(" 。 第二 "),a("code",[e._v("\\")]),e._v(" ，在第二行的端部将被解释为用于换行的逃逸，而不是从第一逸出的目标 "),a("code",[e._v("\\")]),e._v(" 。 类似地， "),a("code",[e._v("\\")]),e._v(" 假设第三行的末尾实际上被当作一条指令来处理，则将其视为行的继续。 该dockerfile的结果是第二和第三行被视为一条指令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM microsoft/nanoserver\nCOPY testfile.txt c:\\\\\nRUN dir c:\\\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("结果是：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("PS C:\\John> docker build -t cmd .\nSending build context to Docker daemon 3.072 kB\nStep 1/2 : FROM microsoft/nanoserver\n ---\x3e 22738ff49c6d\nStep 2/2 : COPY testfile.txt c:\\RUN dir c:\nGetFileAttributesEx c:RUN: The system cannot find the file specified.\nPS C:\\John>\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("上述解决方案之一是将 和和 "),a("code",[e._v("/")]),e._v(" 用作目标 。 但是，这种语法充其量是令人困惑的，因为它对上的路径来说并不自然 ，而在最坏的情况下，由于并非所有 支持的 命令都 作为路径分隔符 ，因此容易出错 。 "),a("code",[e._v("COPY")]),e._v(" "),a("code",[e._v("dir")]),e._v(" "),a("code",[e._v("Windows")]),e._v(" "),a("code",[e._v("Windows")]),e._v(" "),a("code",[e._v("/")])]),e._v(" "),a("p",[e._v("通过添加 "),a("code",[e._v("escape")]),e._v(" 解析器指令，通过对以下 "),a("code",[e._v("Dockerfile")]),e._v(" 文件路径使用自然平台语义 ，以下操作可以 按预期成功 "),a("code",[e._v("Windows")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# escape=`\n\nFROM microsoft/nanoserver\nCOPY testfile.txt c:\\\nRUN dir c:\\\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("结果是：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("PS C:\\John> docker build -t succeeds --no-cache=true .\nSending build context to Docker daemon 3.072 kB\nStep 1/3 : FROM microsoft/nanoserver\n ---\x3e 22738ff49c6d\nStep 2/3 : COPY testfile.txt c:\\\n ---\x3e 96655de338de\nRemoving intermediate container 4db9acbb1682\nStep 3/3 : RUN dir c:\\\n ---\x3e Running in a2c157f842f5\n Volume in drive C has no label.\n Volume Serial Number is 7E6D-E0F7\n\n Directory of c:\\\n\n10/05/2016  05:04 PM             1,894 License.txt\n10/05/2016  02:22 PM    <DIR>          Program Files\n10/05/2016  02:14 PM    <DIR>          Program Files (x86)\n10/28/2016  11:18 AM                62 testfile.txt\n10/28/2016  11:20 AM    <DIR>          Users\n10/28/2016  11:20 AM    <DIR>          Windows\n           2 File(s)          1,956 bytes\n           4 Dir(s)  21,259,096,064 bytes free\n ---\x3e 01c7f3bef04f\nRemoving intermediate container a2c157f842f5\nSuccessfully built 01c7f3bef04f\nPS C:\\John>\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br")])]),a("h2",{attrs:{id:"更换环境-🔗"}},[e._v("更换环境 "),a("a",{attrs:{href:"#environment-replacement"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("环境变量（与声明 "),a("a",{attrs:{href:"#env"}},[e._v("的 "),a("code",[e._v("ENV")]),e._v(" 声明")]),e._v(" ），也可以在特定指令作为变量用来被解释 "),a("code",[e._v("Dockerfile")]),e._v(" 。 转义也可以通过将类变量的语法包括在语句中而得到处理。")]),e._v(" "),a("p",[e._v("环境变量 "),a("code",[e._v("Dockerfile")]),e._v(" 用 "),a("code",[e._v("$variable_name")]),e._v(" 或表示 "),a("code",[e._v("${variable_name}")]),e._v(" 。 它们被同等对待，并且大括号语法通常用于解决变量名没有空格的问题，例如 "),a("code",[e._v("${foo}_bar")]),e._v(" 。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("${variable_name}")]),e._v(" 语法还支持以下一些标准 "),a("code",[e._v("bash")]),e._v(" 修饰符：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("${variable:-word}")]),e._v(" 表示如果 "),a("code",[e._v("variable")]),e._v(" 设置，则结果将是该值。 如果 "),a("code",[e._v("variable")]),e._v(" 未设置，则为 "),a("code",[e._v("word")]),e._v(" 结果。")]),e._v(" "),a("li",[a("code",[e._v("${variable:+word}")]),e._v(" 指示如果 "),a("code",[e._v("variable")]),e._v(" 设置 了if，则将 是 "),a("code",[e._v("word")]),e._v(" 结果，否则结果为空字符串。")])]),e._v(" "),a("p",[e._v("在所有情况下， "),a("code",[e._v("word")]),e._v(" 都可以是任何字符串，包括其他环境变量。")]),e._v(" "),a("p",[e._v("可通过 "),a("code",[e._v("\\")]),e._v(" 在变量前 添加a来 进行 转义 ： 例如， "),a("code",[e._v("\\$foo")]),e._v(" 或 "),a("code",[e._v("\\${foo}")]),e._v(" 将 分别 转换为 "),a("code",[e._v("$foo")]),e._v(" 和 "),a("code",[e._v("${foo}")]),e._v(" 文字。")]),e._v(" "),a("p",[e._v("示例（解析的表示形式显示在之后 "),a("code",[e._v("#")]),e._v(" ）：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM busybox\nENV foo /bar\nWORKDIR ${foo}   # WORKDIR /bar\nADD . $foo       # ADD . /bar\nCOPY \\$foo /quux # COPY $foo /quux\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("以下变量中的指令列表支持环境变量 "),a("code",[e._v("Dockerfile")]),e._v(" ：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ADD")])]),e._v(" "),a("li",[a("code",[e._v("COPY")])]),e._v(" "),a("li",[a("code",[e._v("ENV")])]),e._v(" "),a("li",[a("code",[e._v("EXPOSE")])]),e._v(" "),a("li",[a("code",[e._v("FROM")])]),e._v(" "),a("li",[a("code",[e._v("LABEL")])]),e._v(" "),a("li",[a("code",[e._v("STOPSIGNAL")])]),e._v(" "),a("li",[a("code",[e._v("USER")])]),e._v(" "),a("li",[a("code",[e._v("VOLUME")])]),e._v(" "),a("li",[a("code",[e._v("WORKDIR")])]),e._v(" "),a("li",[a("code",[e._v("ONBUILD")]),e._v(" （当与以上支持的说明之一结合使用时）")])]),e._v(" "),a("p",[e._v("在整个指令中，环境变量替换将对每个变量使用相同的值。 换句话说，在此示例中：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ENV abc=hello\nENV abc=bye def=$abc\nENV ghi=$abc\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("将导致 "),a("code",[e._v("def")]),e._v(" 值为 "),a("code",[e._v("hello")]),e._v(" ，而不是 "),a("code",[e._v("bye")]),e._v(" 。 但是， "),a("code",[e._v("ghi")]),e._v(" 将具有的值， "),a("code",[e._v("bye")]),e._v(" 因为它不是设置 "),a("code",[e._v("abc")]),e._v(" 为 的同一指令的一部分 "),a("code",[e._v("bye")]),e._v(" 。")]),e._v(" "),a("h2",{attrs:{id:"dockerignore文件-🔗"}},[e._v(".dockerignore文件 "),a("a",{attrs:{href:"#dockerignore-file"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("在docker CLI将上下文发送到docker守护程序之前，它会 "),a("code",[e._v(".dockerignore")]),e._v(" 在上下文的根目录中 查找名为的文件 。 如果此文件存在，则CLI会修改上下文以排除与其中的模式匹配的文件和目录。 这有助于避免不必要地将大型文件或敏感文件和目录发送到守护程序，并避免使用 "),a("code",[e._v("ADD")]),e._v(" 或 将它们添加到映像中 "),a("code",[e._v("COPY")]),e._v(" 。")]),e._v(" "),a("p",[e._v("CLI将 "),a("code",[e._v(".dockerignore")]),e._v(" 文件 解释 为以换行符分隔的模式列表，类似于Unix Shell的文件组。 为了匹配，上下文的根被认为是工作目录和根目录。 例如，图案 "),a("code",[e._v("/foo/bar")]),e._v(" 和 "),a("code",[e._v("foo/bar")]),e._v(" 两个排除命名的文件或目录 "),a("code",[e._v("bar")]),e._v(" 的 "),a("code",[e._v("foo")]),e._v(" 子目录 "),a("code",[e._v("PATH")]),e._v(" 或位于Git仓库的根 "),a("code",[e._v("URL")]),e._v(" 。 都不排除其他任何东西。")]),e._v(" "),a("p",[e._v("如果 "),a("code",[e._v(".dockerignore")]),e._v(" 文件中 的一行以第 "),a("code",[e._v("#")]),e._v(" 1列 开头 ，则该行将被视为注释，并且在CLI解释之前将被忽略。")]),e._v(" "),a("p",[e._v("这是一个示例 "),a("code",[e._v(".dockerignore")]),e._v(" 文件：")]),e._v(" "),a("div",{staticClass:"language-gitignore line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# comment\n*/temp*\n*/*/temp*\ntemp?\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("此文件导致以下生成行为：")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("规则")]),e._v(" "),a("th",[e._v("行为")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("# comment")])]),e._v(" "),a("td",[e._v("忽略了。")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("*/temp*")])]),e._v(" "),a("td",[e._v("排除名称以 "),a("code",[e._v("temp")]),e._v(" 根的任何直接子目录 开头的文件和目录 。 例如， "),a("code",[e._v("/somedir/temporary.txt")]),e._v(" 排除 纯文件 ，排除目录 "),a("code",[e._v("/somedir/temp")]),e._v(" 。")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("*/*/temp*")])]),e._v(" "),a("td",[e._v("排除 "),a("code",[e._v("temp")]),e._v(" 从根以下两个级别的任何子目录 开始的文件和目录 。 例如， "),a("code",[e._v("/somedir/subdir/temporary.txt")]),e._v(" 被排除。")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("temp?")])]),e._v(" "),a("td",[e._v("排除名称为的一个字符扩展名的根目录中的文件和目录 "),a("code",[e._v("temp")]),e._v(" 。 例如， "),a("code",[e._v("/tempa")]),e._v(" 和 "),a("code",[e._v("/tempb")]),e._v(" 被排除。")])])])]),e._v(" "),a("p",[e._v("使用Go的 "),a("a",{attrs:{href:"http://golang.org/pkg/path/filepath#Match",target:"_blank",rel:"noopener noreferrer"}},[e._v("filepath.Match"),a("OutboundLink")],1),e._v(" 规则 进行匹配 。 预处理步骤 使用Go的 "),a("a",{attrs:{href:"http://golang.org/pkg/path/filepath/#Clean",target:"_blank",rel:"noopener noreferrer"}},[e._v("filepath.Clean"),a("OutboundLink")],1),e._v(" 除去开头和结尾的空格，并消除 "),a("code",[e._v(".")]),e._v(" 和 "),a("code",[e._v("..")]),e._v(" 元素 。 预处理后空白的行将被忽略。"),a("a",{attrs:{href:"http://golang.org/pkg/path/filepath/#Clean",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("除了Go的filepath.Match规则外，Docker还支持一个特殊的通配符字符串 "),a("code",[e._v("**")]),e._v(" ，该 字符串 可匹配任意数量的目录（包括零个）。 例如， "),a("code",[e._v("**/*.go")]),e._v(" 将排除 "),a("code",[e._v(".go")]),e._v(" 在所有目录（包括构建上下文的根目录）中找到的所有 结尾的文件 。")]),e._v(" "),a("p",[e._v("以 "),a("code",[e._v("!")]),e._v(" （感叹号） 开头的行 可用于排除例外。 以下是 "),a("code",[e._v(".dockerignore")]),e._v(" 使用此机制 的示例 文件：")]),e._v(" "),a("div",{staticClass:"language-gitignore line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("*.md\n!README.md\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[a("em",[e._v("除")]),e._v(" "),a("code",[e._v("README.md")]),e._v(" 上下文"),a("em",[e._v("外")]),e._v(" ， 所有降价文件 都排除在外。")]),e._v(" "),a("p",[a("code",[e._v("!")]),e._v(" 异常规则 的位置会 影响行为： "),a("code",[e._v(".dockerignore")]),e._v(" 匹配特定文件的 的最后一行 确定是包含还是排除该文件。 考虑以下示例：")]),e._v(" "),a("div",{staticClass:"language-gitignore line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("*.md\n!README*.md\nREADME-secret.md\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("除了以外的自述文件，上下文中没有markdown文件 "),a("code",[e._v("README-secret.md")]),e._v(" 。")]),e._v(" "),a("p",[e._v("现在考虑以下示例：")]),e._v(" "),a("div",{staticClass:"language-gitignore line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("*.md\nREADME-secret.md\n!README*.md\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("包括所有自述文件。 中线无效，因为 "),a("code",[e._v("!README*.md")]),e._v(" 匹配 "),a("code",[e._v("README-secret.md")]),e._v(" 并排在最后。")]),e._v(" "),a("p",[e._v("您甚至可以使用该 "),a("code",[e._v(".dockerignore")]),e._v(" 文件排除 "),a("code",[e._v("Dockerfile")]),e._v(" 和 "),a("code",[e._v(".dockerignore")]),e._v(" 文件。 这些文件仍被发送到守护程序，因为它需要它们来完成其工作。 但是 "),a("code",[e._v("ADD")]),e._v(" 和 "),a("code",[e._v("COPY")]),e._v(" 指令不会将它们复制到映像中。")]),e._v(" "),a("p",[e._v("最后，您可能想要指定要包含在上下文中的文件，而不是要排除的文件。 为此，请指定 "),a("code",[e._v("*")]),e._v(" 为第一个模式，然后 指定 一个或多个 "),a("code",[e._v("!")]),e._v(" 异常模式。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("由于历史原因，该模式 "),a("code",[e._v(".")]),e._v(" 被忽略。")])]),e._v(" "),a("h2",{attrs:{id:"来自-🔗"}},[e._v("来自 "),a("a",{attrs:{href:"#from"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM [--platform=<platform>] <image> [AS <name>]\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("要么")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM [--platform=<platform>] <image>[:<tag>] [AS <name>]\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("要么")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM [--platform=<platform>] <image>[@<digest>] [AS <name>]\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("FROM")]),e._v(" 指令初始化一个新的构建阶段，并 为后续指令 设置 "),a("a",{attrs:{href:"https://docs.docker.com/glossary/#base_image",target:"_blank",rel:"noopener noreferrer"}},[a("em",[e._v("基本映像")]),a("OutboundLink")],1),e._v(" 。 因此，有效的 "),a("code",[e._v("Dockerfile")]),e._v(" 必须从 "),a("code",[e._v("FROM")]),e._v(" 指令 开始 。 该图像可以是任何有效图像- 从"),a("a",{attrs:{href:"https://docs.docker.com/engine/tutorials/dockerrepos/",target:"_blank",rel:"noopener noreferrer"}},[a("em",[e._v("公共存储库中")]),a("OutboundLink")],1),a("strong",[e._v("拉出图像")]),e._v(" 特别容易启动 。"),a("a",{attrs:{href:"https://docs.docker.com/engine/tutorials/dockerrepos/",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ARG")]),e._v(" 是先于仅指示 "),a("code",[e._v("FROM")]),e._v(" 在 "),a("code",[e._v("Dockerfile")]),e._v(" 。 请参阅 "),a("a",{attrs:{href:"#understand-how-arg-and-from-interact"}},[e._v("了解ARG和FROM之间的相互作用")]),e._v(" 。")]),e._v(" "),a("li",[a("code",[e._v("FROM")]),e._v(" 可以一次出现多次 "),a("code",[e._v("Dockerfile")]),e._v(" 以创建多个映像，也可以将一个构建阶段作为对另一个构建阶段的依赖。 只需在每个新 "),a("code",[e._v("FROM")]),e._v(" 指令 之前记录一次提交输出的最后一个图像ID 。 每个 "),a("code",[e._v("FROM")]),e._v(" 指令清除由先前指令创建的任何状态。")]),e._v(" "),a("li",[e._v("可选的名称可以通过添加给予一个新的构建阶段 "),a("code",[e._v("AS name")]),e._v(" 的 "),a("code",[e._v("FROM")]),e._v(" 指令。 该名称可以在后续版本 "),a("code",[e._v("FROM")]),e._v(" 和 "),a("code",[e._v("COPY --from=<name|index>")]),e._v(" 说明中 使用， 以引用此阶段中构建的映像。")]),e._v(" "),a("li",[e._v("该 "),a("code",[e._v("tag")]),e._v(" 或 "),a("code",[e._v("digest")]),e._v(" 值是可选的。 如果您忽略其中任何一个 "),a("code",[e._v("latest")]),e._v(" ，那么缺省情况下 ，构建器将采用 标签。 如果构建器找不到该 "),a("code",[e._v("tag")]),e._v(" 值， 则返回错误 。")])]),e._v(" "),a("p",[a("code",[e._v("--platform")]),e._v(" 在 "),a("code",[e._v("FROM")]),e._v(" 引用多平台图像的 情况下 ，可选 标志可用于指定图像 的平台。 例如， "),a("code",[e._v("linux/amd64")]),e._v(" ， "),a("code",[e._v("linux/arm64")]),e._v(" ，或 "),a("code",[e._v("windows/amd64")]),e._v(" 。 默认情况下，使用构建请求的目标平台。 可以在此标志的值中使用全局构建参数，例如， "),a("a",{attrs:{href:"#automatic-platform-args-in-the-global-scope"}},[e._v("自动平台ARG")]),e._v(" 允许您将阶段强制到本机构建平台（ "),a("code",[e._v("--platform=$BUILDPLATFORM")]),e._v(" ），并使用它来交叉编译到阶段内部的目标平台。")]),e._v(" "),a("h3",{attrs:{id:"了解arg和from之间的交互方式-🔗"}},[e._v("了解ARG和FROM之间的交互方式 "),a("a",{attrs:{href:"#understand-how-arg-and-from-interact"}},[e._v("🔗")])]),e._v(" "),a("p",[a("code",[e._v("FROM")]),e._v(" 指令支持由 "),a("code",[e._v("ARG")]),e._v(" 第一指令之前的 任何 指令 声明的变量 "),a("code",[e._v("FROM")]),e._v(" 。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ARG  CODE_VERSION=latest\nFROM base:${CODE_VERSION}\nCMD  /code/run-app\n\nFROM extras:${CODE_VERSION}\nCMD  /code/run-extras\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[a("code",[e._v("ARG")]),e._v(" 在a之前 的 声明 "),a("code",[e._v("FROM")]),e._v(" 位于构建阶段之外，因此在a之后的任何指令中都不能使用它 "),a("code",[e._v("FROM")]),e._v(" 。 要 "),a("code",[e._v("ARG")]),e._v(" 在第一次 "),a("code",[e._v("FROM")]),e._v(" 使用 声明之前 使用默认值，请 在 "),a("code",[e._v("ARG")]),e._v(" 构建阶段 使用 没有值 的 指令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ARG VERSION=latest\nFROM busybox:$VERSION\nARG VERSION\nRUN echo $VERSION > image_version\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h2",{attrs:{id:"运行-🔗"}},[e._v("运行 "),a("a",{attrs:{href:"#run"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("RUN有2种形式：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("RUN <command>")]),e._v(" （ "),a("em",[e._v("shell")]),e._v(" 形式，命令在shell中运行，默认情况下 "),a("code",[e._v("/bin/sh -c")]),e._v(" 在Linux或 "),a("code",[e._v("cmd /S /C")]),e._v(" Windows 上运行 ）")]),e._v(" "),a("li",[a("code",[e._v('RUN ["executable", "param1", "param2"]')]),e._v(" （ "),a("em",[e._v("执行")]),e._v(" 表格）")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("RUN")]),e._v(" 指令将在当前图像顶部的新层中执行所有命令，并提交结果。 生成的提交图像将用于中的下一步 "),a("code",[e._v("Dockerfile")]),e._v(" 。")]),e._v(" "),a("p",[e._v("分层 "),a("code",[e._v("RUN")]),e._v(" 指令和生成提交符合Docker的核心概念，在Docker上，提交很便宜，并且可以从映像历史记录的任何位置创建容器，就像源代码控制一样。")]),e._v(" "),a("p",[e._v("在 "),a("em",[e._v("EXEC")]),e._v(" 形式使得能够避免壳串改写（munging），并 "),a("code",[e._v("RUN")]),e._v(" 使用不包含指定壳可执行基本图像的命令。")]),e._v(" "),a("p",[e._v("可以使用以下 命令 更改 "),a("em",[e._v("shell")]),e._v(" 形式 的默认shell "),a("code",[e._v("SHELL")]),e._v(" 。")]),e._v(" "),a("p",[e._v("在 "),a("em",[e._v("shell")]),e._v(" 形式中，您可以使用 "),a("code",[e._v("\\")]),e._v(" （反斜杠）将一条RUN指令继续到下一行。 例如，考虑以下两行：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("RUN /bin/bash -c 'source $HOME/.bashrc; \\\necho $HOME'\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("它们合起来相当于以下一行：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("RUN /bin/bash -c 'source $HOME/.bashrc; echo $HOME'\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("要使用'/ bin / sh'以外的其他shell，请使用 "),a("em",[e._v("exec")]),e._v(" 形式传入所需的shell。 例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('RUN ["/bin/bash", "-c", "echo hello"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("在 "),a("em",[e._v("EXEC")]),e._v(" 形式被解析为一个JSON阵列，这意味着必须使用双引号（“）周围的话不单引号（'）。")])]),e._v(" "),a("p",[e._v("与 "),a("em",[e._v("shell")]),e._v(" 表单 不同 ， "),a("em",[e._v("exec")]),e._v(" 表单不会调用命令shell。 这意味着不会发生常规的外壳处理。 例如， "),a("code",[e._v('RUN [ "echo", "$HOME" ]')]),e._v(" 将不会对进行变量替换 "),a("code",[e._v("$HOME")]),e._v(" 。 如果要进行shell处理，则可以使用 "),a("em",[e._v("shell")]),e._v(" 形式或直接执行shell，例如： "),a("code",[e._v('RUN [ "sh", "-c", "echo $HOME" ]')]),e._v(" 。 当使用exec表单并直接执行shell时（例如在shell表单中），是由shell进行环境变量扩展，而不是docker。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("在 "),a("em",[e._v("JSON")]),e._v(" 格式中，必须转义反斜杠。 这在Windows中特别有用，在Windows中反斜杠是路径分隔符。 由于无效的JSON， 以下行否则将被视为 "),a("em",[e._v("shell")]),e._v(" 形式，并以意外的方式失败：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('RUN ["c:\\windows\\system32\\tasklist.exe"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("此示例的正确语法为：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('RUN ["c:\\\\windows\\\\system32\\\\tasklist.exe"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])])]),e._v(" "),a("p",[a("code",[e._v("RUN")]),e._v(" 下一次构建期间 ， 指令 缓存 不会自动失效。 类似指令的缓存 "),a("code",[e._v("RUN apt-get dist-upgrade -y")]),e._v(" 将在下一个构建中重用。 "),a("code",[e._v("RUN")]),e._v(" 指令 的缓存 可以通过使用 "),a("code",[e._v("--no-cache")]),e._v(" 标志 来使无效 ，例如 "),a("code",[e._v("docker build --no-cache")]),e._v(" 。")]),e._v(" "),a("p",[e._v("有关 更多信息， 请参见 "),a("a",{attrs:{href:"https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Dockerfile")]),e._v("最佳实践指南"),a("OutboundLink")],1),e._v(" 。")]),e._v(" "),a("p",[a("code",[e._v("RUN")]),e._v(" 指令 的缓存 可以被 "),a("a",{attrs:{href:"#add"}},[a("code",[e._v("ADD")])]),e._v(" 和 "),a("a",{attrs:{href:"#copy"}},[a("code",[e._v("COPY")])]),e._v(" 指令 无效 。")]),e._v(" "),a("h3",{attrs:{id:"已知问题（运行）-🔗"}},[e._v("已知问题（运行） "),a("a",{attrs:{href:"#known-issues-run"}},[e._v("🔗")])]),e._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/docker/docker/issues/783",target:"_blank",rel:"noopener noreferrer"}},[e._v("问题783"),a("OutboundLink")],1),e._v(" 是有关使用AUFS文件系统时可能发生的文件权限问题。 例如，您在尝试 "),a("code",[e._v("rm")]),e._v(" 文件 过程中可能会注意到它 。")]),e._v(" "),a("p",[e._v("对于具有最新aufs版本的系统（即， "),a("code",[e._v("dirperm1")]),e._v(" 可以设置安装选项），docker将尝试通过使用options挂载层来尝试自动修复问题 "),a("code",[e._v("dirperm1")]),e._v(" 。 有关 "),a("code",[e._v("dirperm1")]),e._v(" 选项的 更多详细信息，请 参见 "),a("a",{attrs:{href:"https://github.com/sfjro/aufs3-linux/tree/aufs3.18/Documentation/filesystems/aufs",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("aufs")]),e._v("手册页"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("如果您的系统不支持 "),a("code",[e._v("dirperm1")]),e._v(" ，则该问题描述了一种解决方法。")])])]),e._v(" "),a("h2",{attrs:{id:"cmd-🔗"}},[e._v("CMD "),a("a",{attrs:{href:"#cmd"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("CMD")]),e._v(" 指令具有三种形式：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v('CMD ["executable","param1","param2"]')]),e._v(" （ "),a("em",[e._v("exec")]),e._v(" 形式，这是首选形式）")]),e._v(" "),a("li",[a("code",[e._v('CMD ["param1","param2"]')]),e._v(" （作为 "),a("em",[e._v("ENTRYPOINT的默认参数")]),e._v(" ）")]),e._v(" "),a("li",[a("code",[e._v("CMD command param1 param2")]),e._v(" （ "),a("em",[e._v("外壳")]),e._v(" 形式）")])]),e._v(" "),a("p",[a("code",[e._v("CMD")]),e._v(" 指令中 只能有一条 指令 "),a("code",[e._v("Dockerfile")]),e._v(" 。 如果您列出多个， "),a("code",[e._v("CMD")]),e._v(" 则只有最后一个 "),a("code",[e._v("CMD")]),e._v(" 才会生效。")]),e._v(" "),a("p",[a("strong",[e._v("a的主要目的"),a("code",[e._v("CMD")]),e._v("是为执行中的容器提供默认值。")]),e._v(" 这些默认值可以包含一个可执行文件，也可以忽略该可执行文件，在这种情况下，您还必须指定一条 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 指令。")]),e._v(" "),a("p",[e._v("如果 "),a("code",[e._v("CMD")]),e._v(" 用于为 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 指令 提供默认参数 ，则 "),a("code",[e._v("CMD")]),e._v(" 和 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 指令均应使用JSON数组格式指定。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("在 "),a("em",[e._v("EXEC")]),e._v(" 形式被解析为一个JSON阵列，这意味着必须使用双引号（“）周围的话不单引号（'）。")])]),e._v(" "),a("p",[e._v("与 "),a("em",[e._v("shell")]),e._v(" 表单 不同 ， "),a("em",[e._v("exec")]),e._v(" 表单不会调用命令shell。 这意味着不会发生常规的外壳处理。 例如， "),a("code",[e._v('CMD [ "echo", "$HOME" ]')]),e._v(" 将不会对进行变量替换 "),a("code",[e._v("$HOME")]),e._v(" 。 如果要进行shell处理，则可以使用 "),a("em",[e._v("shell")]),e._v(" 形式或直接执行shell，例如： "),a("code",[e._v('CMD [ "sh", "-c", "echo $HOME" ]')]),e._v(" 。 当使用exec表单并直接执行shell时（例如在shell表单中），是由shell进行环境变量扩展，而不是docker。")]),e._v(" "),a("p",[e._v("当以shell或exec格式使用时，该 "),a("code",[e._v("CMD")]),e._v(" 指令设置运行映像时要执行的命令。")]),e._v(" "),a("p",[e._v("如果您使用的 "),a("em",[e._v("外壳")]),e._v(" 形式 "),a("code",[e._v("CMD")]),e._v(" ，则将在中 "),a("code",[e._v("<command>")]),e._v(" 执行 "),a("code",[e._v("/bin/sh -c")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM ubuntu\nCMD echo "This is a test." | wc -\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("如果要 "),a("strong",[e._v("在")]),e._v(" "),a("code",[e._v("<command>")]),e._v(" "),a("strong",[e._v("没有外壳")]),e._v(" "),a("strong",[e._v("的"),a("strong",[a("strong",[e._v("情况下")])]),e._v("运行，")]),e._v(" 则必须将命令表示为JSON数组，并提供可执行文件的完整路径。 "),a("strong",[e._v("此数组形式是的首选格式"),a("code",[e._v("CMD")]),e._v("。")]),e._v(" 任何其他参数必须在数组中分别表示为字符串：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM ubuntu\nCMD ["/usr/bin/wc","--help"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("如果您希望容器每次都运行相同的可执行文件，则应考虑 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 与结合使用 "),a("code",[e._v("CMD")]),e._v(" 。 请参阅 "),a("a",{attrs:{href:"#entrypoint"}},[a("em",[e._v("ENTRYPOINT")])]),e._v(" 。")]),e._v(" "),a("p",[e._v("如果用户指定的参数， "),a("code",[e._v("docker run")]),e._v(" 则它们将覆盖中指定的默认参数 "),a("code",[e._v("CMD")]),e._v(" 。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("不要 "),a("code",[e._v("RUN")]),e._v(" 与 混淆 "),a("code",[e._v("CMD")]),e._v(" 。 "),a("code",[e._v("RUN")]),e._v(" 实际上运行命令并提交结果； "),a("code",[e._v("CMD")]),e._v(" 在生成时不执行任何操作，但是指定映像的预期命令。")])]),e._v(" "),a("h2",{attrs:{id:"标签-🔗"}},[e._v("标签 "),a("a",{attrs:{href:"#label"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("LABEL <key>=<value> <key>=<value> <key>=<value> ...\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("LABEL")]),e._v(" 指令将元数据添加到图像。 A "),a("code",[e._v("LABEL")]),e._v(" 是键值对。 要在 "),a("code",[e._v("LABEL")]),e._v(" 值中 包含空格 ，请像在命令行分析中一样使用引号和反斜杠。 一些用法示例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('LABEL "com.example.vendor"="ACME Incorporated"\nLABEL com.example.label-with-value="foo"\nLABEL version="1.0"\nLABEL description="This text illustrates \\\nthat label-values can span multiple lines."\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("一幅图像可以有多个标签。 您可以在一行上指定多个标签。 在Docker 1.10之前的版本中，这减小了最终映像的大小，但是情况不再如此。 您仍然可以通过以下两种方式之一选择在一条指令中指定多个标签：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('LABEL multi.label1="value1" multi.label2="value2" other="value3"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('LABEL multi.label1="value1" \\\n      multi.label2="value2" \\\n      other="value3"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("基本或父图像（该 "),a("code",[e._v("FROM")]),e._v(" 行中的图像）中 包含的标签 由您的图像继承。 如果标签已经存在但具有不同的值，则最近应用的值将覆盖任何先前设置的值。")]),e._v(" "),a("p",[e._v("要查看图像的标签，请使用 "),a("code",[e._v("docker image inspect")]),e._v(" 命令。 您可以使用该 "),a("code",[e._v("--format")]),e._v(" 选项仅显示标签。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker image inspect --format='' myimage\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "com.example.vendor": "ACME Incorporated",\n  "com.example.label-with-value": "foo",\n  "version": "1.0",\n  "description": "This text illustrates that label-values can span multiple lines.",\n  "multi.label1": "value1",\n  "multi.label2": "value2",\n  "other": "value3"\n}\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("h2",{attrs:{id:"维护者-（已弃用）-🔗"}},[a("a",{attrs:{href:"#maintainer-deprecated"}},[e._v("维护者")]),e._v(" （已弃用） "),a("a",{attrs:{href:"#maintainer-deprecated"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("MAINTAINER <name>\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("MAINTAINER")]),e._v(" 指令设置 生成图像 的 "),a("em",[e._v("作者")]),e._v(" 字段。 该 "),a("code",[e._v("LABEL")]),e._v(" 指令是此版本的灵活得多，您应该改用它，因为它可以设置所需的任何元数据，并且可以轻松查看，例如使用 "),a("code",[e._v("docker inspect")]),e._v(" 。 要设置与该 "),a("code",[e._v("MAINTAINER")]),e._v(" 字段 对应的标签， 可以使用：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('LABEL maintainer="SvenDowideit@home.org.au"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("这样 "),a("code",[e._v("docker inspect")]),e._v(" ，其他标签 就可以显示出来 了。")]),e._v(" "),a("h2",{attrs:{id:"暴露-🔗"}},[e._v("暴露 "),a("a",{attrs:{href:"#expose"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("EXPOSE <port> [<port>/<protocol>...]\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("EXPOSE")]),e._v(" 指令通知Docker容器在运行时监听指定的网络端口。 您可以指定端口是侦听TCP还是UDP，如果未指定协议，则默认值为TCP。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("EXPOSE")]),e._v(" 指令实际上并未发布端口。 它充当构建映像的人员和运行容器的人员之间的一种文档类型，有关打算发布哪些端口的信息。 要在运行容器时实际发布端口，请使用 "),a("code",[e._v("-p")]),e._v(" 标记on "),a("code",[e._v("docker run")]),e._v(" 发布和映射一个或多个端口，或者使用 "),a("code",[e._v("-P")]),e._v(" 标记发布所有公开的端口并将它们映射到高阶端口。")]),e._v(" "),a("p",[e._v("默认情况下， "),a("code",[e._v("EXPOSE")]),e._v(" 假定为TCP。 您还可以指定UDP：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("EXPOSE 80/udp\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("要同时在TCP和UDP上公开，请包括以下两行：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("EXPOSE 80/tcp\nEXPOSE 80/udp\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("在这种情况下，如果 "),a("code",[e._v("-P")]),e._v(" 与配合 使用 "),a("code",[e._v("docker run")]),e._v(" ，则该端口仅对TCP公开一次，对于UDP公开一次。 请记住， "),a("code",[e._v("-P")]),e._v(" 该端口在主机上使用临时的高阶主机端口，因此该端口对于TCP和UDP将是不同的。")]),e._v(" "),a("p",[e._v("无论 "),a("code",[e._v("EXPOSE")]),e._v(" 设置 如何 ，都可以在运行时使用该 "),a("code",[e._v("-p")]),e._v(" 标志 覆盖它们 。 例如")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker run -p 80:80/tcp -p 80:80/udp ...\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("要在主机系统上设置端口重定向，请参阅 "),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/run/#expose-incoming-ports",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用-P标志"),a("OutboundLink")],1),e._v(" 。 该 "),a("code",[e._v("docker network")]),e._v(" 命令支持创建网络以在容器之间进行通信，而无需暴露或发布特定端口，因为连接到网络的容器可以通过任何端口相互通信。 有关详细信息，请参阅 "),a("a",{attrs:{href:"https://docs.docker.com/engine/userguide/networking/",target:"_blank",rel:"noopener noreferrer"}},[e._v("此功能"),a("OutboundLink")],1),e._v(" 的 "),a("a",{attrs:{href:"https://docs.docker.com/engine/userguide/networking/",target:"_blank",rel:"noopener noreferrer"}},[e._v("概述"),a("OutboundLink")],1),e._v(" 。")]),e._v(" "),a("h2",{attrs:{id:"环保-v"}},[e._v("环保 "),a("a",{attrs:{href:"#env"}},[e._v("V")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ENV <key> <value>\nENV <key>=<value> ...\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("ENV")]),e._v(" 指令将环境变量 "),a("code",[e._v("<key>")]),e._v(" 设置为value "),a("code",[e._v("<value>")]),e._v(" 。 此值将在构建阶段中所有后续指令的环境中使用，并且可以 在很多情况下 "),a("a",{attrs:{href:"#environment-replacement"}},[e._v("内联替换")]),e._v(" 。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("ENV")]),e._v(" 指令有两种形式。 第一种形式， "),a("code",[e._v("ENV <key> <value>")]),e._v(" 会将一个变量设置为一个值。 第一个空格之后的整个字符串将被视为 "),a("code",[e._v("<value>")]),e._v(" -包括空格字符。 该值将为其他环境变量解释，因此如果不对引号字符进行转义，则将其删除。")]),e._v(" "),a("p",[e._v("第二种形式 "),a("code",[e._v("ENV <key>=<value> ...")]),e._v(" 允许一次设置多个变量。 请注意，第二种形式在语法中使用等号（=），而第一种形式则不使用等号（=）。 与命令行分析一样，引号和反斜杠可用于在值中包含空格。")]),e._v(" "),a("p",[e._v("例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('ENV myName="John Doe" myDog=Rex\\ The\\ Dog \\\n    myCat=fluffy\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("和")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ENV myName John Doe\nENV myDog Rex The Dog\nENV myCat fluffy\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("将在最终图像中产生相同的净结果。")]),e._v(" "),a("p",[a("code",[e._v("ENV")]),e._v(" 从结果映像运行容器时， 使用设置的环境变量 将保留。 您可以使用查看值 "),a("code",[e._v("docker inspect")]),e._v(" ，并使用更改它们 "),a("code",[e._v("docker run --env <key>=<value>")]),e._v(" 。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("环境持久性可能导致意外的副作用。 例如，设置 "),a("code",[e._v("ENV DEBIAN_FRONTEND noninteractive")]),e._v(" 可能会使基于Debian的映像上的apt-get用户感到困惑。 要为单个命令设置值，请使用 "),a("code",[e._v("RUN <key>=<value> <command>")]),e._v(" 。")])]),e._v(" "),a("h2",{attrs:{id:"添加-🔗"}},[e._v("添加 "),a("a",{attrs:{href:"#add"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("ADD有两种形式：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('ADD [--chown=<user>:<group>] <src>... <dest>\nADD [--chown=<user>:<group>] ["<src>",... "<dest>"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("包含空格的路径需要后一种形式。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("--chown")]),e._v(" 功能仅在用于构建Linux容器的Dockerfiles上受支持，而在Windows容器上不起作用。 由于用户和组所有权概念不会在Linux和Windows之间转换，因此使用 "),a("code",[e._v("/etc/passwd")]),e._v(" 和 "),a("code",[e._v("/etc/group")]),e._v(" 将用户名和组名转换为ID的使用限制了此功能仅适用于基于Linux OS的容器。")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("ADD")]),e._v(" 指令从中复制新文件，目录或远程文件URL "),a("code",[e._v("<src>")]),e._v(" ，并将它们添加到路径中映像的文件系统中 "),a("code",[e._v("<dest>")]),e._v(" 。")]),e._v(" "),a("p",[a("code",[e._v("<src>")]),e._v(" 可以指定 多个 资源，但是如果它们是文件或目录，则将其路径解释为相对于构建上下文源的路径。")]),e._v(" "),a("p",[e._v("每个都 "),a("code",[e._v("<src>")]),e._v(" 可能包含通配符，并且匹配将使用Go的 "),a("a",{attrs:{href:"http://golang.org/pkg/path/filepath#Match",target:"_blank",rel:"noopener noreferrer"}},[e._v("filepath.Match"),a("OutboundLink")],1),e._v(" 规则完成。 例如：")]),e._v(" "),a("p",[e._v("要添加所有以“ hom”开头的文件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ADD hom* /mydir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("在下面的示例中， "),a("code",[e._v("?")]),e._v(" 被替换为任何单个字符，例如“ home.txt”。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ADD hom?.txt /mydir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("的 "),a("code",[e._v("<dest>")]),e._v(" 是一个绝对路径，或相对于一个路径 "),a("code",[e._v("WORKDIR")]),e._v(" ，到其中的源将在目标容器内进行复制。")]),e._v(" "),a("p",[e._v("下面的示例使用相对路径，并将“ test.txt”添加到 "),a("code",[e._v("<WORKDIR>/relativeDir/")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ADD test.txt relativeDir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("而此示例使用绝对路径，并向其中添加“ test.txt” "),a("code",[e._v("/absoluteDir/")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ADD test.txt /absoluteDir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("添加包含特殊字符（例如 "),a("code",[e._v("[")]),e._v(" 和 "),a("code",[e._v("]")]),e._v(" ）的 文件或目录时 ，您需要按照Golang规则转义那些路径，以防止将它们视为匹配模式。 例如，要添加名为的文件 "),a("code",[e._v("arr[0].txt")]),e._v(" ，请使用以下命令；")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ADD arr[[]0].txt /mydir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("除非可选 "),a("code",[e._v("--chown")]),e._v(" 标志指定给定的用户名，组名或UID / GID组合以请求对所添加内容的特定所有权 ，否则所有新文件和目录的UID和GID均为0 。 "),a("code",[e._v("--chown")]),e._v(" 标志 的格式 允许用户名和组名字符串或直接整数UID和GID任意组合。 提供不带组名的用户名或不带GID的UID将使用与GID相同的数字UID。 如果提供了用户名或组名，则将使用容器的根文件系统 "),a("code",[e._v("/etc/passwd")]),e._v(" 和 "),a("code",[e._v("/etc/group")]),e._v(" 文件将名称分别转换为整数UID或GID。 以下示例显示了该 "),a("code",[e._v("--chown")]),e._v(" 标志的 有效定义 ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ADD --chown=55:mygroup files* /somedir/\nADD --chown=bin files* /somedir/\nADD --chown=1 files* /somedir/\nADD --chown=10:11 files* /somedir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("如果容器根文件系统不包含 "),a("code",[e._v("/etc/passwd")]),e._v(" 或 "),a("code",[e._v("/etc/group")]),e._v(" 文件，并且在 "),a("code",[e._v("--chown")]),e._v(" 标志 中使用了用户名或组名 ，则该构建将在该 "),a("code",[e._v("ADD")]),e._v(" 操作 上失败 。 使用数字ID不需要查找，并且不依赖于容器根文件系统内容。")]),e._v(" "),a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 是远程文件URL，则目标将具有600的权限。如果要检索的远程文件具有HTTP "),a("code",[e._v("Last-Modified")]),e._v(" 标头，则该标头中的时间戳将用于设置 "),a("code",[e._v("mtime")]),e._v(" 目标文件上的 时间戳 。 但是，就像在期间处理的任何其他文件一样 "),a("code",[e._v("ADD")]),e._v(" ， "),a("code",[e._v("mtime")]),e._v(" 该文件是否已更改以及是否应更新缓存的确定将不包括在内。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("如果通过传递 "),a("code",[e._v("Dockerfile")]),e._v(" STDIN（ "),a("code",[e._v("docker build - < somefile")]),e._v(" ）进行构建，则没有构建上下文，因此 "),a("code",[e._v("Dockerfile")]),e._v(" 只能包含基于URL的 "),a("code",[e._v("ADD")]),e._v(" 指令。 您还可以通过STDIN：（ "),a("code",[e._v("docker build - < archive.tar.gz")]),e._v(" ） 传递压缩的归档文件，归档文件 "),a("code",[e._v("Dockerfile")]),e._v(" 根目录中的，归档文件的其余部分将用作构建的上下文。")])]),e._v(" "),a("p",[e._v("如果您的网址文件都使用认证保护，则需要使用 "),a("code",[e._v("RUN wget")]),e._v(" ， "),a("code",[e._v("RUN curl")]),e._v(" 或作为从容器内使用另一种工具 "),a("code",[e._v("ADD")]),e._v(" 指令不支持认证。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[a("code",[e._v("ADD")]),e._v(" 如果Dockerfile的内容 "),a("code",[e._v("<src>")]),e._v(" 已更改 ，则第一个遇到的 指令将使Dockerfile中所有后续指令的缓存无效 。 这包括使高速缓存中的 "),a("code",[e._v("RUN")]),e._v(" 指令 无效 。 有关 更多信息， 请参见 "),a("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#leverage-build-cache",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Dockerfile")]),e._v("最佳实践指南–利用构建缓存"),a("OutboundLink")],1),e._v(" 。")])]),e._v(" "),a("p",[a("code",[e._v("ADD")]),e._v(" 遵守以下规则：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("该 "),a("code",[e._v("<src>")]),e._v(" 路径必须是内部 "),a("em",[e._v("语境")]),e._v(" 的构建; 您不能这样做 "),a("code",[e._v("ADD ../something /something")]),e._v(" ，因为a的第一步 "),a("code",[e._v("docker build")]),e._v(" 是将上下文目录（和子目录）发送到docker守护程序。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 是URL， "),a("code",[e._v("<dest>")]),e._v(" 并且不以斜杠结尾，则从URL下载文件并将其复制到 "),a("code",[e._v("<dest>")]),e._v(" 。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 是URL并 "),a("code",[e._v("<dest>")]),e._v(" 以斜杠结尾，则从URL推断文件名，然后将文件下载到 "),a("code",[e._v("<dest>/<filename>")]),e._v(" 。 例如， "),a("code",[e._v("ADD http://example.com/foobar /")]),e._v(" 将创建文件 "),a("code",[e._v("/foobar")]),e._v(" 。 该URL必须具有非平凡的路径，以便在这种情况下可以发现适当的文件名（ "),a("code",[e._v("http://example.com")]),e._v(" 将不起作用）。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 是目录，则将复制目录的整个内容，包括文件系统元数据。")])])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("该目录本身不被复制，仅被复制其内容。")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 是以 公认的压缩格式（身份，gzip，bzip2或xz）作为 "),a("em",[e._v("本地")]),e._v(" tar归档文件，则将其解压缩为目录。 来自 "),a("em",[e._v("远程")]),e._v(" URL的 资源 "),a("strong",[e._v("不会被")]),e._v(" 解压缩。 复制或解压缩目录时，其行为与相同 "),a("code",[e._v("tar -x")]),e._v(" ，结果是以下各项的并集：")]),e._v(" "),a("ol",[a("li",[e._v("目标路径上存在的任何内容")]),e._v(" "),a("li",[e._v("源代码树的内容，已解决冲突，而选择了“ 2”。 在逐个文件的基础上。")])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("是否仅将文件内容而不是文件名确定为文件是公认的压缩格式。 例如，如果一个空文件恰好以 "),a("code",[e._v(".tar.gz")]),e._v(" 该 文件结尾， 则不会被识别为压缩文件，并且 "),a("strong",[e._v("不会")]),e._v(" 生成任何类型的解压缩错误消息，而是会将文件简单地复制到目标位置。")])])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 是任何其他类型的文件，则将其及其元数据一起单独复制。 在这种情况下，如果 "),a("code",[e._v("<dest>")]),e._v(" 以斜杠结尾 "),a("code",[e._v("/")]),e._v(" ，它将被视为目录，其内容 "),a("code",[e._v("<src>")]),e._v(" 将写入 "),a("code",[e._v("<dest>/base(<src>)")]),e._v(" 。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 直接或由于使用通配符而指定了 多个 资源，则该资源 "),a("code",[e._v("<dest>")]),e._v(" 必须是目录，并且必须以斜杠结尾 "),a("code",[e._v("/")]),e._v(" 。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<dest>")]),e._v(" 不以斜杠结尾，则将其视为常规文件，并将其内容 "),a("code",[e._v("<src>")]),e._v(" 写入 "),a("code",[e._v("<dest>")]),e._v(" 。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<dest>")]),e._v(" 不存在，它将与路径中所有缺少的目录一起创建。")])])]),e._v(" "),a("h2",{attrs:{id:"复制-🔗"}},[e._v("复制 "),a("a",{attrs:{href:"#copy"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("COPY有两种形式：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('COPY [--chown=<user>:<group>] <src>... <dest>\nCOPY [--chown=<user>:<group>] ["<src>",... "<dest>"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("包含空格的路径需要后一种形式")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("--chown")]),e._v(" 功能仅在用于构建Linux容器的Dockerfiles上受支持，而在Windows容器上不起作用。 由于用户和组所有权概念不会在Linux和Windows之间转换，因此使用 "),a("code",[e._v("/etc/passwd")]),e._v(" 和 "),a("code",[e._v("/etc/group")]),e._v(" 将用户名和组名转换为ID的使用限制了此功能仅适用于基于Linux OS的容器。")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("COPY")]),e._v(" 指令从中复制新文件或目录 "),a("code",[e._v("<src>")]),e._v(" ，并将它们添加到路径中容器的文件系统中 "),a("code",[e._v("<dest>")]),e._v(" 。")]),e._v(" "),a("p",[a("code",[e._v("<src>")]),e._v(" 可以指定 多个 资源，但是文件和目录的路径将被解释为相对于构建上下文的源。")]),e._v(" "),a("p",[e._v("每个都 "),a("code",[e._v("<src>")]),e._v(" 可能包含通配符，并且匹配将使用Go的 "),a("a",{attrs:{href:"http://golang.org/pkg/path/filepath#Match",target:"_blank",rel:"noopener noreferrer"}},[e._v("filepath.Match"),a("OutboundLink")],1),e._v(" 规则完成。 例如：")]),e._v(" "),a("p",[e._v("要添加所有以“ hom”开头的文件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("COPY hom* /mydir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("在下面的示例中， "),a("code",[e._v("?")]),e._v(" 被替换为任何单个字符，例如“ home.txt”。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("COPY hom?.txt /mydir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("的 "),a("code",[e._v("<dest>")]),e._v(" 是一个绝对路径，或相对于一个路径 "),a("code",[e._v("WORKDIR")]),e._v(" ，到其中的源将在目标容器内进行复制。")]),e._v(" "),a("p",[e._v("下面的示例使用相对路径，并将“ test.txt”添加到 "),a("code",[e._v("<WORKDIR>/relativeDir/")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("COPY test.txt relativeDir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("而此示例使用绝对路径，并向其中添加“ test.txt” "),a("code",[e._v("/absoluteDir/")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("COPY test.txt /absoluteDir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("复制包含特殊字符（例如 "),a("code",[e._v("[")]),e._v(" 和 "),a("code",[e._v("]")]),e._v(" ）的 文件或目录时 ，您需要按照Golang规则转义那些路径，以防止将它们视为匹配模式。 例如，要添加名为的文件 "),a("code",[e._v("arr[0].txt")]),e._v(" ，请使用以下命令；")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ADD arr[[]0].txt /mydir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("除非可选 "),a("code",[e._v("--chown")]),e._v(" 标志指定给定的用户名，组名或UID / GID组合以请求对复制内容的特定所有权 ，否则所有新文件和目录的UID和GID均为0 。 "),a("code",[e._v("--chown")]),e._v(" 标志 的格式 允许用户名和组名字符串或直接整数UID和GID任意组合。 提供不带组名的用户名或不带GID的UID将使用与GID相同的数字UID。 如果提供了用户名或组名，则将使用容器的根文件系统 "),a("code",[e._v("/etc/passwd")]),e._v(" 和 "),a("code",[e._v("/etc/group")]),e._v(" 文件将名称分别转换为整数UID或GID。 以下示例显示了该 "),a("code",[e._v("--chown")]),e._v(" 标志的 有效定义 ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("COPY --chown=55:mygroup files* /somedir/\nCOPY --chown=bin files* /somedir/\nCOPY --chown=1 files* /somedir/\nCOPY --chown=10:11 files* /somedir/\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("如果容器根文件系统不包含 "),a("code",[e._v("/etc/passwd")]),e._v(" 或 "),a("code",[e._v("/etc/group")]),e._v(" 文件，并且在 "),a("code",[e._v("--chown")]),e._v(" 标志 中使用了用户名或组名 ，则该构建将在该 "),a("code",[e._v("COPY")]),e._v(" 操作 上失败 。 使用数字ID不需要查找，并且不依赖于容器根文件系统内容。")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("如果使用STDIN（ "),a("code",[e._v("docker build - < somefile")]),e._v(" ）进行 构建 ，则没有构建上下文，因此 "),a("code",[e._v("COPY")]),e._v(" 无法使用。")])]),e._v(" "),a("p",[e._v("（可选） "),a("code",[e._v("COPY")]),e._v(" 接受一个标志 "),a("code",[e._v("--from=<name|index>")]),e._v(" ， 该标志 可用于将源位置设置为 "),a("code",[e._v("FROM .. AS <name>")]),e._v(" 将用于代替用户发送的构建上下文 的上一个构建阶段（使用创建 ）。 该标志还接受为以 "),a("code",[e._v("FROM")]),e._v(" 指令 开头的所有先前构建阶段分配的数字索引 。 如果找不到具有指定名称的构建阶段，则尝试使用具有相同名称的映像代替。")]),e._v(" "),a("p",[a("code",[e._v("COPY")]),e._v(" 遵守以下规则：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("该 "),a("code",[e._v("<src>")]),e._v(" 路径必须是内部 "),a("em",[e._v("语境")]),e._v(" 的构建; 您不能这样做 "),a("code",[e._v("COPY ../something /something")]),e._v(" ，因为a的第一步 "),a("code",[e._v("docker build")]),e._v(" 是将上下文目录（和子目录）发送到docker守护程序。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 是目录，则将复制目录的整个内容，包括文件系统元数据。")])])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("该目录本身不被复制，仅被复制其内容。")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 是任何其他类型的文件，则将其及其元数据一起单独复制。 在这种情况下，如果 "),a("code",[e._v("<dest>")]),e._v(" 以斜杠结尾 "),a("code",[e._v("/")]),e._v(" ，它将被视为目录，其内容 "),a("code",[e._v("<src>")]),e._v(" 将写入 "),a("code",[e._v("<dest>/base(<src>)")]),e._v(" 。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<src>")]),e._v(" 直接或由于使用通配符而指定了 多个 资源，则该资源 "),a("code",[e._v("<dest>")]),e._v(" 必须是目录，并且必须以斜杠结尾 "),a("code",[e._v("/")]),e._v(" 。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<dest>")]),e._v(" 不以斜杠结尾，则将其视为常规文件，并将其内容 "),a("code",[e._v("<src>")]),e._v(" 写入 "),a("code",[e._v("<dest>")]),e._v(" 。")])]),e._v(" "),a("li",[a("p",[e._v("如果 "),a("code",[e._v("<dest>")]),e._v(" 不存在，它将与路径中所有缺少的目录一起创建。")])])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[a("code",[e._v("COPY")]),e._v(" 如果Dockerfile的内容 "),a("code",[e._v("<src>")]),e._v(" 已更改 ，则第一个遇到的 指令将使Dockerfile中所有后续指令的缓存无效 。 这包括使高速缓存中的 "),a("code",[e._v("RUN")]),e._v(" 指令 无效 。 有关 更多信息， 请参见 "),a("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#leverage-build-cache",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Dockerfile")]),e._v("最佳实践指南–利用构建缓存"),a("OutboundLink")],1),e._v(" 。")])]),e._v(" "),a("h2",{attrs:{id:"入口点-🔗"}},[e._v("入口点 "),a("a",{attrs:{href:"#entrypoint"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("ENTRYPOINT有两种形式：")]),e._v(" "),a("p",[e._v("在 "),a("em",[e._v("EXEC")]),e._v(" 的形式，这是优选的形式：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('ENTRYPOINT ["executable", "param1", "param2"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("em",[e._v("壳")]),e._v(" 形式：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ENTRYPOINT command param1 param2\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("An "),a("code",[e._v("ENTRYPOINT")]),e._v(" 允许您配置将作为可执行文件运行的容器。")]),e._v(" "),a("p",[e._v("例如，以下代码以其默认内容启动nginx，监听端口80：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker run -i -t --rm -p 80:80 nginx\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("命令行参数to "),a("code",[e._v("docker run <image>")]),e._v(" 将以 "),a("em",[e._v("exec")]),e._v(" 形式 附加在所有元素之后 "),a("code",[e._v("ENTRYPOINT")]),e._v(" ，并将覆盖使用指定的所有元素 "),a("code",[e._v("CMD")]),e._v(" 。 这允许将参数传递给入口点，即， "),a("code",[e._v("docker run <image> -d")]),e._v(" 将 "),a("code",[e._v("-d")]),e._v(" 参数 传递 给入口点。 您可以 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 使用该 "),a("code",[e._v("docker run --entrypoint")]),e._v(" 标志 覆盖 指令 。")]),e._v(" "),a("p",[e._v("所述 "),a("em",[e._v("壳")]),e._v(" 形式防止任何 "),a("code",[e._v("CMD")]),e._v(" 或 "),a("code",[e._v("run")]),e._v(" 被使用命令行参数，但具有的缺点是你 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 将开始作为的子命令 "),a("code",[e._v("/bin/sh -c")]),e._v(" ，其不通过信号。 这意味着可执行文件将不是容器的 "),a("code",[e._v("PID 1")]),e._v(" -并且将 "),a("em",[e._v("不会")]),e._v(" 接收Unix信号-因此您的可执行文件将不会 "),a("code",[e._v("SIGTERM")]),e._v(" 从 接收 到 "),a("code",[e._v("docker stop <container>")]),e._v(" 。")]),e._v(" "),a("p",[e._v("只有中的最后一条 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 指令 "),a("code",[e._v("Dockerfile")]),e._v(" 才会生效。")]),e._v(" "),a("h3",{attrs:{id:"执行表格entrypoint示例-🔗"}},[e._v("执行表格ENTRYPOINT示例 "),a("a",{attrs:{href:"#exec-form-entrypoint-example"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("您可以使用 "),a("em",[e._v("exec")]),e._v(" 形式的 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 来设置相当稳定的默认命令和参数，然后使用这两种形式的 "),a("code",[e._v("CMD")]),e._v(" 来设置更可能被更改的其他默认值。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM ubuntu\nENTRYPOINT ["top", "-b"]\nCMD ["-c"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("运行容器时，可以看到这 "),a("code",[e._v("top")]),e._v(" 是唯一的过程：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker run -it --rm --name test  top -H\n\ntop - 08:25:00 up  7:27,  0 users,  load average: 0.00, 0.01, 0.05\nThreads:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  0.1 us,  0.1 sy,  0.0 ni, 99.7 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem:   2056668 total,  1616832 used,   439836 free,    99352 buffers\nKiB Swap:  1441840 total,        0 used,  1441840 free.  1324440 cached Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND\n    1 root      20   0   19744   2336   2080 R  0.0  0.1   0:00.04 top\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("要进一步检查结果，可以使用 "),a("code",[e._v("docker exec")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker exec -it test ps aux\n\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  2.6  0.1  19752  2352 ?        Ss+  08:24   0:00 top -b -H\nroot         7  0.0  0.1  15572  2164 ?        R+   08:25   0:00 ps aux\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("您也可以使用优雅地请求 "),a("code",[e._v("top")]),e._v(" 关闭 "),a("code",[e._v("docker stop test")]),e._v(" 。")]),e._v(" "),a("p",[e._v("下面 "),a("code",[e._v("Dockerfile")]),e._v(" 显示了使用 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 来在前台运行Apache（即as "),a("code",[e._v("PID 1")]),e._v(" ）：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM debian:stable\nRUN apt-get update && apt-get install -y --force-yes apache2\nEXPOSE 80 443\nVOLUME ["/var/www", "/var/log/apache2", "/etc/apache2"]\nENTRYPOINT ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("如果需要为单个可执行文件编写启动脚本，则可以使用 "),a("code",[e._v("exec")]),e._v(" 和 "),a("code",[e._v("gosu")]),e._v(" 命令 确保最终的可执行文件接收Unix信号 ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#!/usr/bin/env bash\nset -e\n\nif [ "$1" = \'postgres\' ]; then\n    chown -R postgres "$PGDATA"\n\n    if [ -z "$(ls -A "$PGDATA")" ]; then\n        gosu postgres initdb\n    fi\n\n    exec gosu postgres "$@"\nfi\n\nexec "$@"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br")])]),a("p",[e._v("最后，如果您需要在关闭时进行一些额外的清理（或与其他容器通信），或者协调多个可执行文件，则可能需要确保 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 脚本接收Unix信号，将其传递，然后执行一些更多的工作：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#!/bin/sh\n# Note: I\'ve written this using sh so it works in the busybox container too\n\n# USE the trap if you need to also do manual cleanup after the service is stopped,\n#     or need to start multiple services in the one container\ntrap "echo TRAPed signal" HUP INT QUIT TERM\n\n# start service in background here\n/usr/sbin/apachectl start\n\necho "[hit enter key to exit] or run \'docker stop <container>\'"\nread\n\n# stop service and clean up here\necho "stopping apache"\n/usr/sbin/apachectl stop\n\necho "exited $0"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br")])]),a("p",[e._v("如果使用运行该映像 "),a("code",[e._v("docker run -it --rm -p 80:80 --name test apache")]),e._v(" ，则可以使用 "),a("code",[e._v("docker exec")]),e._v(" 或 来检查容器的进程 "),a("code",[e._v("docker top")]),e._v(" ，然后要求脚本停止Apache：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker exec -it test ps aux\n\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  0.1  0.0   4448   692 ?        Ss+  00:42   0:00 /bin/sh /run.sh 123 cmd cmd2\nroot        19  0.0  0.2  71304  4440 ?        Ss   00:42   0:00 /usr/sbin/apache2 -k start\nwww-data    20  0.2  0.2 360468  6004 ?        Sl   00:42   0:00 /usr/sbin/apache2 -k start\nwww-data    21  0.2  0.2 360468  6000 ?        Sl   00:42   0:00 /usr/sbin/apache2 -k start\nroot        81  0.0  0.1  15572  2140 ?        R+   00:44   0:00 ps aux\n\n$ docker top test\n\nPID                 USER                COMMAND\n10035               root                {run.sh} /bin/sh /run.sh 123 cmd cmd2\n10054               root                /usr/sbin/apache2 -k start\n10055               33                  /usr/sbin/apache2 -k start\n10056               33                  /usr/sbin/apache2 -k start\n\n$ /usr/bin/time docker stop test\n\ntest\nreal\t0m 0.27s\nuser\t0m 0.03s\nsys\t0m 0.03s\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br")])]),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("您可以使用覆盖 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 设置 "),a("code",[e._v("--entrypoint")]),e._v(" ，但这只能将二进制文件设置为 "),a("em",[e._v("exec")]),e._v(" （ "),a("code",[e._v("sh -c")]),e._v(" 将不使用）。")])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("在 "),a("em",[e._v("EXEC")]),e._v(" 形式被解析为一个JSON阵列，这意味着必须使用双引号（“）周围的话不单引号（'）。")])]),e._v(" "),a("p",[e._v("与 "),a("em",[e._v("shell")]),e._v(" 表单 不同 ， "),a("em",[e._v("exec")]),e._v(" 表单不会调用命令shell。 这意味着不会发生常规的外壳处理。 例如， "),a("code",[e._v('ENTRYPOINT [ "echo", "$HOME" ]')]),e._v(" 将不会对进行变量替换 "),a("code",[e._v("$HOME")]),e._v(" 。 如果要进行shell处理，则可以使用 "),a("em",[e._v("shell")]),e._v(" 形式或直接执行shell，例如： "),a("code",[e._v('ENTRYPOINT [ "sh", "-c", "echo $HOME" ]')]),e._v(" 。 当使用exec表单并直接执行shell时（例如在shell表单中），是由shell进行环境变量扩展，而不是docker。")]),e._v(" "),a("h3",{attrs:{id:"外壳形式entrypoint示例-example"}},[e._v("外壳形式ENTRYPOINT示例 "),a("a",{attrs:{href:"#shell-form-entrypoint-example"}},[e._v("example")])]),e._v(" "),a("p",[e._v("您可以为指定一个纯字符串 "),a("code",[e._v("ENTRYPOINT")]),e._v(" ，它将在中执行 "),a("code",[e._v("/bin/sh -c")]),e._v(" 。 这种形式将使用外壳处理来替代外壳环境变量，并且将忽略任何 "),a("code",[e._v("CMD")]),e._v(" 或 "),a("code",[e._v("docker run")]),e._v(" 命令行参数。 为了确保能够 正确 "),a("code",[e._v("docker stop")]),e._v(" 发出任何长期运行的 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 可执行文件 信号 ，您需要记住以以下命令启动它 "),a("code",[e._v("exec")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ubuntu\nENTRYPOINT exec top -b\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("运行此图像时，您将看到单个 "),a("code",[e._v("PID 1")]),e._v(" 过程：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker run -it --rm --name test top\n\nMem: 1704520K used, 352148K free, 0K shrd, 0K buff, 140368121167873K cached\nCPU:   5% usr   0% sys   0% nic  94% idle   0% io   0% irq   0% sirq\nLoad average: 0.08 0.03 0.05 2/98 6\n  PID  PPID USER     STAT   VSZ %VSZ %CPU COMMAND\n    1     0 root     R     3164   0%   0% top -b\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("干净地退出 "),a("code",[e._v("docker stop")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ /usr/bin/time docker stop test\n\ntest\nreal\t0m 0.20s\nuser\t0m 0.02s\nsys\t0m 0.04s\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("p",[e._v("如果您忘记添加 "),a("code",[e._v("exec")]),e._v(" 到您的开头 "),a("code",[e._v("ENTRYPOINT")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ubuntu\nENTRYPOINT top -b\nCMD --ignored-param1\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("然后，您可以运行它（为下一步命名）：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker run -it --name test top --ignored-param2\n\nMem: 1704184K used, 352484K free, 0K shrd, 0K buff, 140621524238337K cached\nCPU:   9% usr   2% sys   0% nic  88% idle   0% io   0% irq   0% sirq\nLoad average: 0.01 0.02 0.05 2/101 7\n  PID  PPID USER     STAT   VSZ %VSZ %CPU COMMAND\n    1     0 root     S     3168   0%   0% /bin/sh -c top -b cmd cmd2\n    7     1 root     R     3164   0%   0% top -b\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("从输出中可以看到 "),a("code",[e._v("top")]),e._v(" ，指定 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 的不是 "),a("code",[e._v("PID 1")]),e._v(" 。")]),e._v(" "),a("p",[e._v("如果随后运行 "),a("code",[e._v("docker stop test")]),e._v(" ，容器将不会干净退出- 超时后将 "),a("code",[e._v("stop")]),e._v(" 强制命令发送a "),a("code",[e._v("SIGKILL")]),e._v(" ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker exec -it test ps aux\n\nPID   USER     COMMAND\n    1 root     /bin/sh -c top -b cmd cmd2\n    7 root     top -b\n    8 root     ps aux\n\n$ /usr/bin/time docker stop test\n\ntest\nreal\t0m 10.19s\nuser\t0m 0.04s\nsys\t0m 0.03s\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("h3",{attrs:{id:"了解cmd和entrypoint如何相互作用-🔗"}},[e._v("了解CMD和ENTRYPOINT如何相互作用 "),a("a",{attrs:{href:"#understand-how-cmd-and-entrypoint-interact"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("无论 "),a("code",[e._v("CMD")]),e._v(" 和 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 指令定义运行的容器中时什么命令得到执行。 很少有规则描述他们的合作。")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Dockerfile应该指定 "),a("code",[e._v("CMD")]),e._v(" 或 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 命令 中的至少一个 。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("ENTRYPOINT")]),e._v(" 使用容器作为可执行文件时应定义。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("CMD")]),e._v(" 应该用作定义 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 命令 默认值 或在容器中执行临时命令的方式。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("CMD")]),e._v(" 当使用其他参数运行容器时，将被覆盖。")])])]),e._v(" "),a("p",[e._v("下表显示了针对不同 "),a("code",[e._v("ENTRYPOINT")]),e._v(" / "),a("code",[e._v("CMD")]),e._v(" 组合 执行的命令 ：")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th"),e._v(" "),a("th",[e._v("没有入口点")]),e._v(" "),a("th",[e._v("ENTRYPOINT exec_entry p1_entry")]),e._v(" "),a("th",[e._v("ENTRYPOINT [“ exec_entry”，“ p1_entry”]")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[e._v("没有CMD")])]),e._v(" "),a("td",[a("em",[e._v("错误，不允许")])]),e._v(" "),a("td",[e._v("/ bin / sh -c exec_entry p1_entry")]),e._v(" "),a("td",[e._v("exec_entry p1_entry")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("CMD [“ exec_cmd”，“ p1_cmd”]")])]),e._v(" "),a("td",[e._v("exec_cmd p1_cmd")]),e._v(" "),a("td",[e._v("/ bin / sh -c exec_entry p1_entry")]),e._v(" "),a("td",[e._v("exec_entry p1_entry exec_cmd p1_cmd")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("CMD [“ p1_cmd”，“ p2_cmd”]")])]),e._v(" "),a("td",[e._v("p1_cmd p2_cmd")]),e._v(" "),a("td",[e._v("/ bin / sh -c exec_entry p1_entry")]),e._v(" "),a("td",[e._v("exec_entry p1_entry p1_cmd p2_cmd")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("CMD exec_cmd p1_cmd")])]),e._v(" "),a("td",[e._v("/ bin / sh -c exec_cmd p1_cmd")]),e._v(" "),a("td",[e._v("/ bin / sh -c exec_entry p1_entry")]),e._v(" "),a("td",[e._v("exec_entry p1_entry / bin / sh -c exec_cmd p1_cmd")])])])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")])]),e._v(" "),a("p",[e._v("如果 "),a("code",[e._v("CMD")]),e._v(" 从基本图像定义，则设置 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 将重置 "),a("code",[e._v("CMD")]),e._v(" 为空值。 在这种情况下， "),a("code",[e._v("CMD")]),e._v(" 必须在当前图像中定义一个值。")])]),e._v(" "),a("h2",{attrs:{id:"音量-🔗"}},[e._v("音量 "),a("a",{attrs:{href:"#volume"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('VOLUME ["/data"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("VOLUME")]),e._v(" 指令创建具有指定名称的安装点，并将其标记为保存来自本机主机或其他容器的外部安装的卷。 该值可以是JSON数组，也可以是 "),a("code",[e._v('VOLUME ["/var/log/"]')]),e._v(" 具有多个参数的纯字符串，例如 "),a("code",[e._v("VOLUME /var/log")]),e._v(" 或 "),a("code",[e._v("VOLUME /var/log /var/db")]),e._v(" 。 有关通过Docker客户端的更多信息/示例和安装说明，请参阅 "),a("a",{attrs:{href:"https://docs.docker.com/storage/volumes/",target:"_blank",rel:"noopener noreferrer"}},[a("em",[e._v("通过Volumes共享目录")]),a("OutboundLink")],1),e._v(" 。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("docker run")]),e._v(" 命令使用基本映像内指定位置上存在的任何数据初始化新创建的卷。 例如，考虑以下Dockerfile片段：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM ubuntu\nRUN mkdir /myvol\nRUN echo "hello world" > /myvol/greeting\nVOLUME /myvol\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("该Dockerfile生成一个映像，该映像导致 "),a("code",[e._v("docker run")]),e._v(" 在处创建一个新的挂载点 "),a("code",[e._v("/myvol")]),e._v(" 并将该 "),a("code",[e._v("greeting")]),e._v(" 文件 复制 到新创建的卷中。")]),e._v(" "),a("h3",{attrs:{id:"有关指定卷的注意事项-🔗"}},[e._v("有关指定卷的注意事项 "),a("a",{attrs:{href:"#notes-about-specifying-volumes"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("关于。中的卷，请注意以下几点 "),a("code",[e._v("Dockerfile")]),e._v(" 。")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("基于Windows的容器上的卷")]),e._v(" ：使用基于Windows的容器时，容器内的卷的目的地必须是以下之一：")]),e._v(" "),a("ul",[a("li",[e._v("不存在或空目录")]),e._v(" "),a("li",[e._v("除以下以外的驱动器 "),a("code",[e._v("C:")])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("从Dockerfile中更改卷")]),e._v(" ：如果在声明了卷之后有任何构建步骤更改了卷中的数据，则这些更改将被丢弃。")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("JSON格式")]),e._v(" ：列表被解析为JSON数组。 您必须用双引号（ "),a("code",[e._v('"')]),e._v(" ）而不是单引号（ "),a("code",[e._v("'")]),e._v(" ） 括住单词 。")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("主机目录是在容器运行时声明的")]),e._v(" ：主机目录（挂载点）从本质上说是依赖于主机的。 这是为了保留图像的可移植性，因为不能保证给定的主机目录在所有主机上都可用。 因此，您无法从Dockerfile中挂载主机目录。 该 "),a("code",[e._v("VOLUME")]),e._v(" 指令不支持指定 "),a("code",[e._v("host-dir")]),e._v(" 参数。 创建或运行容器时，必须指定安装点。")])])]),e._v(" "),a("h2",{attrs:{id:"用户-🔗"}},[e._v("用户 "),a("a",{attrs:{href:"#user"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("USER <user>[:<group>]\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("要么")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("USER <UID>[:<GID>]\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("USER")]),e._v(" 指令设置运行映像时以及用于任何映像时使用的用户名（或UID）和可选的用户组（或GID） "),a("code",[e._v("RUN")]),e._v(" ， "),a("code",[e._v("CMD")]),e._v(" 以及在 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 后面跟随的指令 "),a("code",[e._v("Dockerfile")]),e._v(" 。")]),e._v(" "),a("blockquote",[a("p",[e._v("请注意，在为用户指定组时，用户将 "),a("em",[e._v("仅")]),e._v(" 具有指定的组成员身份。 任何其他已配置的组成员身份将被忽略。")])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("警告")])]),e._v(" "),a("p",[e._v("当用户没有主要组时，该映像（或后续说明）将与该 "),a("code",[e._v("root")]),e._v(" 组 一起运行 。")]),e._v(" "),a("p",[e._v("在Windows上，如果不是内置帐户，则必须首先创建用户。 这可以通过 "),a("code",[e._v("net user")]),e._v(" 作为Dockerfile的一部分调用 的 命令 来完成 。")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM microsoft/windowsservercore\n# Create Windows user in the container\nRUN net user /add patrick\n# Set it for subsequent commands\nUSER patrick\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h2",{attrs:{id:"workdir-🔗"}},[e._v("WORKDIR "),a("a",{attrs:{href:"#workdir"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("WORKDIR /path/to/workdir\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("WORKDIR")]),e._v(" 指令集的工作目录对任何 "),a("code",[e._v("RUN")]),e._v(" ， "),a("code",[e._v("CMD")]),e._v(" ， "),a("code",[e._v("ENTRYPOINT")]),e._v(" ， "),a("code",[e._v("COPY")]),e._v(" 和 "),a("code",[e._v("ADD")]),e._v(" 它后面的说明 "),a("code",[e._v("Dockerfile")]),e._v(" 。 如果 "),a("code",[e._v("WORKDIR")]),e._v(" 不存在，即使以后的任何 "),a("code",[e._v("Dockerfile")]),e._v(" 指令 中都没有使用它，也将创建它 。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("WORKDIR")]),e._v(" 指令可以在中多次使用 "),a("code",[e._v("Dockerfile")]),e._v(" 。 如果提供了相对路径，则它将相对于上一条 "),a("code",[e._v("WORKDIR")]),e._v(" 指令 的路径 。 例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("WORKDIR /a\nWORKDIR b\nWORKDIR c\nRUN pwd\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("最终的输出 "),a("code",[e._v("pwd")]),e._v(" 命令这 "),a("code",[e._v("Dockerfile")]),e._v(" 将是 "),a("code",[e._v("/a/b/c")]),e._v(" 。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("WORKDIR")]),e._v(" 指令可以解析先前使用设置的环境变量 "),a("code",[e._v("ENV")]),e._v(" 。 您只能使用在中显式设置的环境变量 "),a("code",[e._v("Dockerfile")]),e._v(" 。 例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ENV DIRPATH /path\nWORKDIR $DIRPATH/$DIRNAME\nRUN pwd\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("最终 "),a("code",[e._v("pwd")]),e._v(" 命令 的输出 "),a("code",[e._v("Dockerfile")]),e._v(" 将是 "),a("code",[e._v("/path/$DIRNAME")])]),e._v(" "),a("h2",{attrs:{id:"arg-🔗"}},[e._v("ARG "),a("a",{attrs:{href:"#arg"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ARG <name>[=<default value>]\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("ARG")]),e._v(" 指令定义了一个变量，用户可以在构建时 "),a("code",[e._v("docker build")]),e._v(" 使用 带有 "),a("code",[e._v("--build-arg <varname>=<value>")]),e._v(" 标志 的 命令将其 传递给构建器 。 如果用户指定了Dockerfile中未定义的构建参数，则该构建会输出警告。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[Warning] One or more build-args [foo] were not consumed.\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("Dockerfile可能包含一个或多个 "),a("code",[e._v("ARG")]),e._v(" 指令。 例如，以下是有效的Dockerfile：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM busybox\nARG user1\nARG buildno\n# ...\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("blockquote",[a("p",[a("strong",[e._v("警告：")])]),e._v(" "),a("p",[e._v("不建议使用构建时变量来传递诸如github密钥，用户凭据等机密。构建时变量值对于使用该 "),a("code",[e._v("docker history")]),e._v(" 命令 的图像的任何用户都是可见的 。")]),e._v(" "),a("p",[e._v("请参阅 "),a("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/build_enhancements/#new-docker-build-secret-information",target:"_blank",rel:"noopener noreferrer"}},[e._v("“使用BuildKit生成映像”"),a("OutboundLink")],1),e._v(" 部分，以了解有关在生成映像时使用机密的安全方法。")])]),e._v(" "),a("h3",{attrs:{id:"默认值-🔗"}},[e._v("默认值 "),a("a",{attrs:{href:"#default-values"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("的 "),a("code",[e._v("ARG")]),e._v(" 指令可以可选地包括一个默认值：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM busybox\nARG user1=someuser\nARG buildno=1\n# ...\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("如果 "),a("code",[e._v("ARG")]),e._v(" 指令具有缺省值，并且在构建时未传递任何值，那么构建器将使用缺省值。")]),e._v(" "),a("h3",{attrs:{id:"范围-🔗"}},[e._v("范围 "),a("a",{attrs:{href:"#scope"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("一个 "),a("code",[e._v("ARG")]),e._v(" 变量定义进入从在其上在限定的线效果 "),a("code",[e._v("Dockerfile")]),e._v(" 不从参数对命令行或其他地方使用。 例如，考虑以下Dockerfile：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM busybox\nUSER ${user:-some_user}\nARG user\nUSER $user\n# ...\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("用户通过调用以下命令来构建此文件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build --build-arg user=what_user .\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[a("code",[e._v("USER")]),e._v(" 在第2行 ， at "),a("code",[e._v("some_user")]),e._v(" 在 "),a("code",[e._v("user")]),e._v(" 变量3上定义为。 "),a("code",[e._v("USER")]),e._v(" 在第4 行， at 定义 为 "),a("code",[e._v("what_user")]),e._v(" as "),a("code",[e._v("user")]),e._v(" ，并且 "),a("code",[e._v("what_user")]),e._v(" 在命令行上传递 了 值。 在通过 "),a("code",[e._v("ARG")]),e._v(" 指令 对其进行定义之前 ，对变量的任何使用都会导致一个空字符串。")]),e._v(" "),a("p",[e._v("的 "),a("code",[e._v("ARG")]),e._v(" 指令在它被定义的构建阶段结束推移的范围进行。 要在多个阶段使用arg，每个阶段都必须包含 "),a("code",[e._v("ARG")]),e._v(" 指令。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM busybox\nARG SETTINGS\nRUN ./run/setup $SETTINGS\n\nFROM busybox\nARG SETTINGS\nRUN ./run/other $SETTINGS\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h3",{attrs:{id:"使用arg变量-🔗"}},[e._v("使用ARG变量 "),a("a",{attrs:{href:"#using-arg-variables"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("您可以使用 "),a("code",[e._v("ARG")]),e._v(" 或 "),a("code",[e._v("ENV")]),e._v(" 指令指定该 "),a("code",[e._v("RUN")]),e._v(" 指令 可用的变量 。 使用 "),a("code",[e._v("ENV")]),e._v(" 指令 定义的环境变量 始终会覆盖 "),a("code",[e._v("ARG")]),e._v(" 同名指令。 考虑此Dockerfile和 "),a("code",[e._v("ENV")]),e._v(" and "),a("code",[e._v("ARG")]),e._v(" 指令。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ubuntu\nARG CONT_IMG_VER\nENV CONT_IMG_VER v1.0.0\nRUN echo $CONT_IMG_VER\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("然后，假定此映像是使用以下命令构建的：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build --build-arg CONT_IMG_VER=v2.0.1 .\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("在这种情况下，该 "),a("code",[e._v("RUN")]),e._v(" 指令将使用 "),a("code",[e._v("v1.0.0")]),e._v(" 而不是 "),a("code",[e._v("ARG")]),e._v(" 用户传递 的 设置： "),a("code",[e._v("v2.0.1")]),e._v(" 此行为类似于Shell脚本，其中局部作用域的变量从其定义的角度覆盖作为参数传递或从环境继承的变量。")]),e._v(" "),a("p",[e._v("使用上面的示例，但使用不同的 "),a("code",[e._v("ENV")]),e._v(" 规范，可以在 "),a("code",[e._v("ARG")]),e._v(" 和 "),a("code",[e._v("ENV")]),e._v(" 指令 之间创建更有用的交互 ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ubuntu\nARG CONT_IMG_VER\nENV CONT_IMG_VER ${CONT_IMG_VER:-v1.0.0}\nRUN echo $CONT_IMG_VER\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("与 "),a("code",[e._v("ARG")]),e._v(" 指令 不同 ， "),a("code",[e._v("ENV")]),e._v(" 值始终保留在生成的映像中。 考虑不带 "),a("code",[e._v("--build-arg")]),e._v(" 标志 的Docker构建 ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker build .\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("使用此Dockerfile示例， "),a("code",[e._v("CONT_IMG_VER")]),e._v(" 它仍然保留在映像中，但其值将是 指令 "),a("code",[e._v("v1.0.0")]),e._v(" 第3行中的默认设置 "),a("code",[e._v("ENV")]),e._v(" 。")]),e._v(" "),a("p",[e._v("在此示例中，变量扩展技术使您可以从命令行传递参数，并利用 "),a("code",[e._v("ENV")]),e._v(" 指令 将其保留在最终映像中 。 仅 "),a("a",{attrs:{href:"#environment-replacement"}},[e._v("有限的一组Dockerfile指令")]),e._v(" 支持变量扩展 "),a("a",{attrs:{href:"#environment-replacement"}},[e._v("。")])]),e._v(" "),a("h3",{attrs:{id:"预定义的-args🔗"}},[e._v("预定义的 "),a("a",{attrs:{href:"#predefined-args"}},[e._v("ARGs🔗")])]),e._v(" "),a("p",[e._v("Docker具有一组预定义 "),a("code",[e._v("ARG")]),e._v(" 变量，您可以在不使用 "),a("code",[e._v("ARG")]),e._v(" Dockerfile中 相应 指令的情况下使用它们。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("HTTP_PROXY")])]),e._v(" "),a("li",[a("code",[e._v("http_proxy")])]),e._v(" "),a("li",[a("code",[e._v("HTTPS_PROXY")])]),e._v(" "),a("li",[a("code",[e._v("https_proxy")])]),e._v(" "),a("li",[a("code",[e._v("FTP_PROXY")])]),e._v(" "),a("li",[a("code",[e._v("ftp_proxy")])]),e._v(" "),a("li",[a("code",[e._v("NO_PROXY")])]),e._v(" "),a("li",[a("code",[e._v("no_proxy")])])]),e._v(" "),a("p",[e._v("要使用这些，只需使用以下标志在命令行中传递它们：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--build-arg <varname>=<value>\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("默认情况下，这些预定义变量从的输出中排除 "),a("code",[e._v("docker history")]),e._v(" 。 排除它们可以减少意外泄露 "),a("code",[e._v("HTTP_PROXY")]),e._v(" 变量 中的敏感身份验证信息的风险 。")]),e._v(" "),a("p",[e._v("例如，考虑使用以下命令构建以下Dockerfile "),a("code",[e._v("--build-arg HTTP_PROXY=http://user:pass@proxy.lon.example.com")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM ubuntu\nRUN echo "Hello World"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("在这种情况下， "),a("code",[e._v("HTTP_PROXY")]),e._v(" 变量 的值在 中不可用， "),a("code",[e._v("docker history")]),e._v(" 也不被缓存。 如果要更改位置，并且代理服务器已更改为 "),a("code",[e._v("http://user:pass@proxy.sfo.example.com")]),e._v(" ，则后续的构建不会导致高速缓存未命中。")]),e._v(" "),a("p",[e._v("如果您需要覆盖此行为，则可以通过 "),a("code",[e._v("ARG")]),e._v(" 在Dockerfile中添加如下语句来做到这一点：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM ubuntu\nARG HTTP_PROXY\nRUN echo "Hello World"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("构建此Dockerfile时，将 "),a("code",[e._v("HTTP_PROXY")]),e._v(" 保留在中 "),a("code",[e._v("docker history")]),e._v(" ，并且更改其值会使构建缓存无效。")]),e._v(" "),a("h3",{attrs:{id:"全球范围内的自动平台-args🔗"}},[e._v("全球范围内的自动平台 "),a("a",{attrs:{href:"#automatic-platform-args-in-the-global-scope"}},[e._v("ARGs🔗")])]),e._v(" "),a("p",[e._v("仅当使用 "),a("a",{attrs:{href:"#buildkit"}},[e._v("BuildKit")]),e._v(" 后端 时，此功能才可用 。")]),e._v(" "),a("p",[e._v("Docker "),a("code",[e._v("ARG")]),e._v(" 在执行构建的节点的平台（构建平台）和结果映像的平台（目标平台）上用信息 预定义了一组 变量。 可以使用 "),a("code",[e._v("--platform")]),e._v(" 标志on 来指定目标平台 "),a("code",[e._v("docker build")]),e._v(" 。")]),e._v(" "),a("p",[e._v("以下 "),a("code",[e._v("ARG")]),e._v(" 变量是自动设置的：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("TARGETPLATFORM")]),e._v(" -构建结果的平台。 例如 "),a("code",[e._v("linux/amd64")]),e._v(" ， "),a("code",[e._v("linux/arm/v7")]),e._v(" ， "),a("code",[e._v("windows/amd64")]),e._v(" 。")]),e._v(" "),a("li",[a("code",[e._v("TARGETOS")]),e._v(" -TARGETPLATFORM的OS组件")]),e._v(" "),a("li",[a("code",[e._v("TARGETARCH")]),e._v(" -TARGETPLATFORM的体系结构组件")]),e._v(" "),a("li",[a("code",[e._v("TARGETVARIANT")]),e._v(" -TARGETPLATFORM的变体组件")]),e._v(" "),a("li",[a("code",[e._v("BUILDPLATFORM")]),e._v(" -执行构建的节点的平台。")]),e._v(" "),a("li",[a("code",[e._v("BUILDOS")]),e._v(" -BUILDPLATFORM的OS组件")]),e._v(" "),a("li",[a("code",[e._v("BUILDARCH")]),e._v(" -BUILDPLATFORM的体系结构组件")]),e._v(" "),a("li",[a("code",[e._v("BUILDVARIANT")]),e._v(" -BUILDPLATFORM的变体组件")])]),e._v(" "),a("p",[e._v("这些参数在全局范围内定义，因此在构建阶段或您的 "),a("code",[e._v("RUN")]),e._v(" 命令 中不会自动提供 。 为了在构建阶段公开这些参数之一，请重新定义它而没有价值。")]),e._v(" "),a("p",[e._v("例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM alpine\nARG TARGETPLATFORM\nRUN echo "I\'m building for $TARGETPLATFORM"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h3",{attrs:{id:"对构建缓存的影响-🔗"}},[e._v("对构建缓存的影响 "),a("a",{attrs:{href:"#impact-on-build-caching"}},[e._v("🔗")])]),e._v(" "),a("p",[a("code",[e._v("ARG")]),e._v(" 变量不会像 "),a("code",[e._v("ENV")]),e._v(" 变量 那样持久化到生成的映像 中。 但是， "),a("code",[e._v("ARG")]),e._v(" 变量确实以类似的方式影响构建缓存。 如果Dockerfile定义了一个 "),a("code",[e._v("ARG")]),e._v(" 其值不同于先前构建 的 变量，则首次使用时会发生“缓存未命中”，而不是其定义。 特别是， "),a("code",[e._v("RUN")]),e._v(" 一条指令之后的 所有 指令 都 隐式地 "),a("code",[e._v("ARG")]),e._v(" 使用该 "),a("code",[e._v("ARG")]),e._v(" 变量（作为环境变量），因此可能导致高速缓存未命中。 "),a("code",[e._v("ARG")]),e._v(" 除非。中有匹配的 "),a("code",[e._v("ARG")]),e._v(" 语句， 否则 所有预定义 变量均免于缓存 "),a("code",[e._v("Dockerfile")]),e._v(" 。")]),e._v(" "),a("p",[e._v("例如，考虑以下两个Dockerfile：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ubuntu\nARG CONT_IMG_VER\nRUN echo $CONT_IMG_VER\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ubuntu\nARG CONT_IMG_VER\nRUN echo hello\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("如果 "),a("code",[e._v("--build-arg CONT_IMG_VER=<value>")]),e._v(" 在命令行上 指定 ，则在两种情况下，第2行上的 指定 都不会导致高速缓存未命中。 第3行确实会导致缓存未命中。 "),a("code",[e._v("ARG CONT_IMG_VER")]),e._v(" 导致RUN行被标识为与正在运行的 "),a("code",[e._v("CONT_IMG_VER=<value>")]),e._v(" echo hello 相同 ，因此，如果进行了 "),a("code",[e._v("<value>")]),e._v(" 更改， 则会 遇到缓存未命中的情况。")]),e._v(" "),a("p",[e._v("考虑在同一命令行下的另一个示例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ubuntu\nARG CONT_IMG_VER\nENV CONT_IMG_VER $CONT_IMG_VER\nRUN echo $CONT_IMG_VER\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("在此示例中，高速缓存未命中发生在第3行。之所以发生未命中，是因为该变量在 "),a("code",[e._v("ENV")]),e._v(" 引用中 的值 引用了该 "),a("code",[e._v("ARG")]),e._v(" 变量，并且该变量通过命令行进行了更改。 在此示例中，该 "),a("code",[e._v("ENV")]),e._v(" 命令使图像包含该值。")]),e._v(" "),a("p",[e._v("如果一条 "),a("code",[e._v("ENV")]),e._v(" 指令覆盖 "),a("code",[e._v("ARG")]),e._v(" 了同名指令，例如Dockerfile：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("FROM ubuntu\nARG CONT_IMG_VER\nENV CONT_IMG_VER hello\nRUN echo $CONT_IMG_VER\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("第3行不会导致缓存未命中，因为的值 "),a("code",[e._v("CONT_IMG_VER")]),e._v(" 是一个常量（ "),a("code",[e._v("hello")]),e._v(" ）。 结果， "),a("code",[e._v("RUN")]),e._v(" （第4行） 使用的环境变量和值 在两次构建之间不会更改。")]),e._v(" "),a("h2",{attrs:{id:"已建-🔗"}},[e._v("已建 "),a("a",{attrs:{href:"#onbuild"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ONBUILD <INSTRUCTION>\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("当该图像用作另一个构建的基础时， 该 "),a("code",[e._v("ONBUILD")]),e._v(" 指令会在图像上添加要 在以后执行 的 "),a("em",[e._v("触发")]),e._v(" 指令。 触发器将在下游构建的上下文中执行，就好像它已 "),a("code",[e._v("FROM")]),e._v(" 在下游指令 之后立即插入 "),a("code",[e._v("Dockerfile")]),e._v(" 。")]),e._v(" "),a("p",[e._v("任何构建指令都可以注册为触发器。")]),e._v(" "),a("p",[e._v("如果要构建的图像将用作构建其他图像的基础，例如应用程序构建环境或可以使用用户特定配置自定义的守护程序，则此功能很有用。")]),e._v(" "),a("p",[e._v("例如，如果您的图像是可重用的Python应用程序构建器，则将需要在特定目录中添加应用程序源代码，并且 "),a("em",[e._v("此后")]),e._v(" 可能需要调用构建脚本 。 你不能只是打电话 "),a("code",[e._v("ADD")]),e._v(" 和 "),a("code",[e._v("RUN")]),e._v(" 现在，因为你还没有访问应用程序的源代码，这将是为每个应用程序生成不同的。 您可以简单地为应用程序开发人员提供 "),a("code",[e._v("Dockerfile")]),e._v(" 可复制粘贴到其应用程序中 的样板 ，但这效率低下，容易出错且难以更新，因为它与特定于应用程序的代码混合在一起。")]),e._v(" "),a("p",[e._v("解决方案是用于 "),a("code",[e._v("ONBUILD")]),e._v(" 注册预先的指令，以便在下一个构建阶段中稍后运行。")]),e._v(" "),a("p",[e._v("运作方式如下：")]),e._v(" "),a("ol",[a("li",[e._v("当遇到 "),a("code",[e._v("ONBUILD")]),e._v(" 指令时，构建器将触发器添加到正在构建的图像的元数据中。 该指令不会影响当前版本。")]),e._v(" "),a("li",[e._v("在构建结束时，所有触发器的列表都存储在映像清单的key下 "),a("code",[e._v("OnBuild")]),e._v(" 。 可以使用 "),a("code",[e._v("docker inspect")]),e._v(" 命令 检查它们 。")]),e._v(" "),a("li",[e._v("稍后，可以使用该 "),a("code",[e._v("FROM")]),e._v(" 指令 将该图像用作新版本的基础 。 作为处理 "),a("code",[e._v("FROM")]),e._v(" 指令的 一部分 ，下游构建器将查找 "),a("code",[e._v("ONBUILD")]),e._v(" 触发器，并按照注册时的顺序执行它们。 如果任何触发器失败，则该 "),a("code",[e._v("FROM")]),e._v(" 指令将中止，进而导致构建失败。 如果所有触发器都成功，则 "),a("code",[e._v("FROM")]),e._v(" 指令完成，并且构建照常继续。")]),e._v(" "),a("li",[e._v("执行完触发器后，将从最终图像中清除触发器。 换句话说，它们不是“孙子代”版本所继承的。")])]),e._v(" "),a("p",[e._v("例如，您可以添加以下内容：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ONBUILD ADD . /app/src\nONBUILD RUN /usr/local/bin/python-build --dir /app/src\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("blockquote",[a("p",[a("strong",[e._v("警告")])]),e._v(" "),a("p",[e._v("不允许 "),a("code",[e._v("ONBUILD")]),e._v(" 使用 链接 说明 "),a("code",[e._v("ONBUILD ONBUILD")]),e._v(" 。")])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("警告")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("ONBUILD")]),e._v(" 指令可能不会触发 "),a("code",[e._v("FROM")]),e._v(" 或 "),a("code",[e._v("MAINTAINER")]),e._v(" 指令。")])]),e._v(" "),a("h2",{attrs:{id:"停止-信号🔗"}},[e._v("停止 "),a("a",{attrs:{href:"#stopsignal"}},[e._v("信号🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("STOPSIGNAL signal\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("STOPSIGNAL")]),e._v(" 指令设置将被发送到容器退出的系统调用信号。 该信号可以是与内核syscall表中的位置匹配的有效无符号数字（例如9），也可以是格式为SIGNAME的信号名称（例如SIGKILL）。")]),e._v(" "),a("h2",{attrs:{id:"健康-检查🔗"}},[e._v("健康 "),a("a",{attrs:{href:"#healthcheck"}},[e._v("检查🔗")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("HEALTHCHECK")]),e._v(" 指令有两种形式：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("HEALTHCHECK [OPTIONS] CMD command")]),e._v(" （通过在容器内部运行命令来检查容器的运行状况）")]),e._v(" "),a("li",[a("code",[e._v("HEALTHCHECK NONE")]),e._v(" （禁用从基本映像继承的任何运行状况检查）")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("HEALTHCHECK")]),e._v(" 指令告诉Docker如何测试容器以检查其是否仍在工作。 这样可以检测到诸如Web服务器陷入无限循环并且无法处理新连接的情况，即使服务器进程仍在运行。")]),e._v(" "),a("p",[e._v("指定容器的 "),a("em",[e._v("运行状况检查后")]),e._v(" ，除了其正常状态外 ，它还具有"),a("em",[e._v("运行")]),e._v(" 状况。 此状态最初为 "),a("code",[e._v("starting")]),e._v(" 。 只要运行状况检查通过，它将变为 "),a("code",[e._v("healthy")]),e._v(" （以前处于任何状态）。 在一定数量的连续失败之后，它变为 "),a("code",[e._v("unhealthy")]),e._v(" 。")]),e._v(" "),a("p",[e._v("之前可能出现的选项 "),a("code",[e._v("CMD")]),e._v(" 是：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("--interval=DURATION")]),e._v(" （默认值： "),a("code",[e._v("30s")]),e._v(" ）")]),e._v(" "),a("li",[a("code",[e._v("--timeout=DURATION")]),e._v(" （默认值： "),a("code",[e._v("30s")]),e._v(" ）")]),e._v(" "),a("li",[a("code",[e._v("--start-period=DURATION")]),e._v(" （默认值： "),a("code",[e._v("0s")]),e._v(" ）")]),e._v(" "),a("li",[a("code",[e._v("--retries=N")]),e._v(" （默认值： "),a("code",[e._v("3")]),e._v(" ）")])]),e._v(" "),a("p",[e._v("运行状况检查将首先 在启动容器后 "),a("strong",[e._v("间隔")]),e._v(" 几秒钟 运行 一次，然后 在每次之前的检查完成后 "),a("strong",[e._v("间隔")]),e._v(" 几秒钟 再次"),a("strong",[e._v("运行")]),e._v(" 。")]),e._v(" "),a("p",[e._v("如果单次检查花费的时间超过 "),a("strong",[e._v("超时")]),e._v(" 秒数，则认为检查失败。")]),e._v(" "),a("p",[e._v("对于要考虑的容器 ，需要 "),a("strong",[e._v("重试")]),e._v(" 连续进行的运行状况检查失败 "),a("code",[e._v("unhealthy")]),e._v(" 。")]),e._v(" "),a("p",[a("strong",[e._v("开始时间段")]),e._v(" 为需要时间进行引导的容器提供了初始化时间。 在此期间内的探针故障将不计入最大重试次数。 但是，如果运行状况检查在启动期间成功，则认为该容器已启动，并且所有连续失败将计入最大重试次数。")]),e._v(" "),a("p",[a("code",[e._v("HEALTHCHECK")]),e._v(" Dockerfile中 只能有一条 指令。 如果您列出多个，则只有最后一个 "),a("code",[e._v("HEALTHCHECK")]),e._v(" 才会生效。")]),e._v(" "),a("p",[a("code",[e._v("CMD")]),e._v(" 关键字 后面的命令 可以是shell命令（例如 "),a("code",[e._v("HEALTHCHECK CMD /bin/check-running")]),e._v(" ）或 "),a("em",[e._v("exec")]),e._v(" 数组（与其他Dockerfile命令一样； "),a("code",[e._v("ENTRYPOINT")]),e._v(" 有关详细信息 ，请参见例如 ）。")]),e._v(" "),a("p",[e._v("命令的退出状态指示容器的健康状态。 可能的值为：")]),e._v(" "),a("ul",[a("li",[e._v("0：成功-容器健康且可以使用")]),e._v(" "),a("li",[e._v("1：不健康-容器无法正常工作")]),e._v(" "),a("li",[e._v("2：保留-请勿使用此退出代码")])]),e._v(" "),a("p",[e._v("例如，要每五分钟检查一次，以便网络服务器能够在三秒钟内为站点的主页提供服务：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("HEALTHCHECK --interval=5m --timeout=3s \\\n  CMD curl -f http://localhost/ || exit 1\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("为了帮助调试失败的探针，该命令在stdout或stderr上写入的任何输出文本（UTF-8编码）都将存储在运行状况中，并可以通过查询 "),a("code",[e._v("docker inspect")]),e._v(" 。 此类输出应保持简短（当前仅存储前4096个字节）。")]),e._v(" "),a("p",[e._v("容器的健康状态发生更改时，将 "),a("code",[e._v("health_status")]),e._v(" 生成具有新状态 的 事件。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("HEALTHCHECK")]),e._v(" 功能已在Docker 1.12中添加。")]),e._v(" "),a("h2",{attrs:{id:"shell-🔗"}},[e._v("SHELL "),a("a",{attrs:{href:"#shell"}},[e._v("🔗")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('SHELL ["executable", "parameters"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("SHELL")]),e._v(" 指令允许 覆盖 用于 命令 的 "),a("em",[e._v("shell")]),e._v(" 形式 的默认shell 。 在Linux上 "),a("code",[e._v('["/bin/sh", "-c"]')]),e._v(" ， 默认shell是 ，在Windows 上，默认shell 是 "),a("code",[e._v('["cmd", "/S", "/C"]')]),e._v(" 。 该 "),a("code",[e._v("SHELL")]),e._v(" 指令 "),a("em",[e._v("必须")]),e._v(" 以Docker格式的JSON形式编写。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("SHELL")]),e._v(" 指令在Windows上特别有用，在Windows上有两个常用且完全不同的本机shell： "),a("code",[e._v("cmd")]),e._v(" 和 "),a("code",[e._v("powershell")]),e._v(" ，以及可用的替代shell包括 "),a("code",[e._v("sh")]),e._v(" 。")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("SHELL")]),e._v(" 说明可以出现多次。 每个 "),a("code",[e._v("SHELL")]),e._v(" 指令将覆盖所有先前的 "),a("code",[e._v("SHELL")]),e._v(" 指令，并影响所有后续的指令。 例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM microsoft/windowsservercore\n\n# Executed as cmd /S /C echo default\nRUN echo default\n\n# Executed as cmd /S /C powershell -command Write-Host default\nRUN powershell -command Write-Host default\n\n# Executed as powershell -command Write-Host hello\nSHELL ["powershell", "-command"]\nRUN Write-Host hello\n\n# Executed as cmd /S /C echo hello\nSHELL ["cmd", "/S", "/C"]\nRUN echo hello\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("p",[e._v("以下说明可以通过影响 "),a("code",[e._v("SHELL")]),e._v(" 指令时， "),a("em",[e._v("壳")]),e._v(" 他们的形式在一个Dockerfile使用： "),a("code",[e._v("RUN")]),e._v(" ， "),a("code",[e._v("CMD")]),e._v(" 和 "),a("code",[e._v("ENTRYPOINT")]),e._v(" 。")]),e._v(" "),a("p",[e._v("以下示例是Windows上常见的模式，可通过使用 "),a("code",[e._v("SHELL")]),e._v(" 指令 进行精简 ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('RUN powershell -command Execute-MyCmdlet -param1 "c:\\foo.txt"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("docker调用的命令将是：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('cmd /S /C powershell -command Execute-MyCmdlet -param1 "c:\\foo.txt"\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("这效率低下有两个原因。 首先，有一个不必要的cmd.exe命令处理器（也称为Shell）被调用。 其次，"),a("em",[e._v("shell")]),e._v(" 形式的 每条 "),a("code",[e._v("RUN")]),e._v(" 指令都 需要 在命令前加上前缀。 "),a("code",[e._v("powershell -command")])]),e._v(" "),a("p",[e._v("为了使其更有效，可以采用两种机制之一。 一种是使用RUN命令的JSON形式，例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('RUN ["powershell", "-command", "Execute-MyCmdlet", "-param1 \\"c:\\\\foo.txt\\""]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("尽管JSON形式是明确的，并且不使用不必要的cmd.exe，但它确实需要通过双引号和转义来实现更多的详细信息。 另一种机制是使用 "),a("code",[e._v("SHELL")]),e._v(" 指令和 "),a("em",[e._v("外壳程序")]),e._v(" 形式，使Windows用户的语法更自然，尤其是与 "),a("code",[e._v("escape")]),e._v(" parser指令 结合使用时 ：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# escape=`\n\nFROM microsoft/nanoserver\nSHELL ["powershell","-command"]\nRUN New-Item -ItemType Directory C:\\Example\nADD Execute-MyCmdlet.ps1 c:\\example\\\nRUN c:\\example\\Execute-MyCmdlet -sample \'hello world\'\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("导致：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("PS E:\\docker\\build\\shell> docker build -t shell .\nSending build context to Docker daemon 4.096 kB\nStep 1/5 : FROM microsoft/nanoserver\n ---\x3e 22738ff49c6d\nStep 2/5 : SHELL powershell -command\n ---\x3e Running in 6fcdb6855ae2\n ---\x3e 6331462d4300\nRemoving intermediate container 6fcdb6855ae2\nStep 3/5 : RUN New-Item -ItemType Directory C:\\Example\n ---\x3e Running in d0eef8386e97\n\n    Directory: C:\\\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----       10/28/2016  11:26 AM                Example\n\n ---\x3e 3f2fbf1395d9\nRemoving intermediate container d0eef8386e97\nStep 4/5 : ADD Execute-MyCmdlet.ps1 c:\\example\\\n ---\x3e a955b2621c31\nRemoving intermediate container b825593d39fc\nStep 5/5 : RUN c:\\example\\Execute-MyCmdlet 'hello world'\n ---\x3e Running in be6d8e63fe75\nhello world\n ---\x3e 8e559e9bf424\nRemoving intermediate container be6d8e63fe75\nSuccessfully built 8e559e9bf424\nPS E:\\docker\\build\\shell>\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br")])]),a("p",[e._v("该 "),a("code",[e._v("SHELL")]),e._v(" 指令还可用于修改外壳的操作方式。 例如， "),a("code",[e._v("SHELL cmd /S /C /V:ON|OFF")]),e._v(" 在Windows上 使用 ，可以修改延迟的环境变量扩展语义。")]),e._v(" "),a("p",[e._v("如果 "),a("code",[e._v("SHELL")]),e._v(" 需要备用shell，例如 ， 和其他 "),a("code",[e._v("zsh")]),e._v(" ， 该 指令也可以在Linux上使用 。 "),a("code",[e._v("csh")]),e._v(" "),a("code",[e._v("tcsh")])]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("SHELL")]),e._v(" 功能已在Docker 1.12中添加。")]),e._v(" "),a("h2",{attrs:{id:"外部实施功能-🔗"}},[e._v("外部实施功能 "),a("a",{attrs:{href:"#external-implementation-features"}},[e._v("🔗")])]),e._v(" "),a("p",[e._v("仅当使用 "),a("a",{attrs:{href:"#buildkit"}},[e._v("BuildKit")]),e._v(" 后端 时，此功能才可用 。")]),e._v(" "),a("p",[e._v("Docker构建支持实验性功能，例如缓存安装，构建机密和ssh转发，这些功能通过使用带有语法指令的构建器的外部实现启用。 要了解这些功能， "),a("a",{attrs:{href:"https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/experimental.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("请参阅BuildKit信息库中的文档"),a("OutboundLink")],1),e._v(" 。")]),e._v(" "),a("h2",{attrs:{id:"dockerfile示例-examples"}},[e._v("Dockerfile示例 "),a("a",{attrs:{href:"#dockerfile-examples"}},[e._v("examples")])]),e._v(" "),a("p",[e._v("在下面，您可以看到Dockerfile语法的一些示例。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# Nginx\n#\n# VERSION               0.0.1\n\nFROM      ubuntu\nLABEL Description="This image is used to start the foobar executable" Vendor="ACME Products" Version="1.0"\nRUN apt-get update && apt-get install -y inotify-tools nginx apache2 openssh-server\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# Firefox over VNC\n#\n# VERSION               0.3\n\nFROM ubuntu\n\n# Install vnc, xvfb in order to create a \'fake\' display and firefox\nRUN apt-get update && apt-get install -y x11vnc xvfb firefox\nRUN mkdir ~/.vnc\n# Setup a password\nRUN x11vnc -storepasswd 1234 ~/.vnc/passwd\n# Autostart firefox (might not be the best way, but it does the trick)\nRUN bash -c \'echo "firefox" >> /.bashrc\'\n\nEXPOSE 5900\nCMD    ["x11vnc", "-forever", "-usepw", "-create"]\n\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Multiple images example\n#\n# VERSION               0.1\n\nFROM ubuntu\nRUN echo foo > bar\n# Will output something like ===> 907ad6c2736f\n\nFROM ubuntu\nRUN echo moo > oink\n# Will output something like ===> 695d7793cbe4\n\n# You'll now have two images, 907ad6c2736f with /bar, and 695d7793cbe4 with\n# /oink.\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])])])}),[],!1,null,null,null);s.default=v.exports}}]);