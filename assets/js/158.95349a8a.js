(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{427:function(e,s,t){"use strict";t.r(s);var n=t(25),a=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#使用-buildkit-构建镜像"}},[e._v("使用 BuildKit 构建镜像")]),t("ul",[t("li",[t("a",{attrs:{href:"#启用-buildkit"}},[e._v("启用 BuildKit")])]),t("li",[t("a",{attrs:{href:"#dockerfile-新增指令详解"}},[e._v("Dockerfile 新增指令详解")]),t("ul",[t("li",[t("a",{attrs:{href:"#run-mount-type-cache"}},[e._v("RUN --mount=type=cache")])]),t("li",[t("a",{attrs:{href:"#run-mount-type-bind"}},[e._v("RUN --mount=type=bind")])]),t("li",[t("a",{attrs:{href:"#run-mount-type-tmpfs"}},[e._v("RUN --mount=type=tmpfs")])]),t("li",[t("a",{attrs:{href:"#run-mount-type-secret"}},[e._v("RUN --mount=type=secret")])]),t("li",[t("a",{attrs:{href:"#run-mount-type-ssh"}},[e._v("RUN --mount=type=ssh")])])])]),t("li",[t("a",{attrs:{href:"#清理构建缓存"}},[e._v("清理构建缓存")])]),t("li",[t("a",{attrs:{href:"#官方文档"}},[e._v("官方文档")])])])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"使用-buildkit-构建镜像"}},[e._v("使用 "),t("code",[e._v("BuildKit")]),e._v(" 构建镜像")]),e._v(" "),t("p",[t("strong",[e._v("BuildKit")]),e._v(" 是下一代的镜像构建组件，在 "),t("a",{attrs:{href:"https://github.com/moby/buildkit",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/moby/buildkit"),t("OutboundLink")],1),e._v(" 开源。")]),e._v(" "),t("p",[t("strong",[e._v("注意：如果您的镜像构建使用的是云服务商提供的镜像构建服务（Docker Hub 自动构建、腾讯云容器服务、阿里云容器服务等），由于上述服务提供商的 Docker 版本低于 18.09，BuildKit 无法使用，将造成镜像构建失败。建议使用 BuildKit 构建镜像时使用一个新的 Dockerfile 文件（例如 Dockerfile.buildkit）")])]),e._v(" "),t("p",[t("strong",[e._v("注意：docker-compose build 命令暂时不支持 BuildKit")])]),e._v(" "),t("p",[e._v("下面介绍如何在 Docker CE 18.09+ 版本中使用 "),t("code",[e._v("BuildKit")]),e._v(" 提供的 "),t("code",[e._v("Dockerfile")]),e._v(" 新指令来更快、更安全的构建 Docker 镜像。")]),e._v(" "),t("h3",{attrs:{id:"启用-buildkit"}},[e._v("启用 "),t("code",[e._v("BuildKit")])]),e._v(" "),t("p",[e._v("启用 "),t("code",[e._v("BuildKit")]),e._v(" 必须先设置 "),t("strong",[e._v("环境变量")]),e._v("。")]),e._v(" "),t("p",[e._v("Linux、macOS 执行如下命令：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ export DOCKER_BUILDKIT=1\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("Windows 执行如下命令：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ set $env:DOCKER_BUILDKIT=1\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("blockquote",[t("p",[e._v("以上是设置环境变量的临时方法，若使环境变量永久生效请读者自行设置。")])]),e._v(" "),t("h3",{attrs:{id:"dockerfile-新增指令详解"}},[t("code",[e._v("Dockerfile")]),e._v(" 新增指令详解")]),e._v(" "),t("p",[e._v("启用 "),t("code",[e._v("BuildKit")]),e._v(" 之后，我们可以使用下面几个新的指令来加快镜像构建。")]),e._v(" "),t("h4",{attrs:{id:"run-mount-type-cache"}},[t("code",[e._v("RUN --mount=type=cache")])]),e._v(" "),t("p",[e._v("目前，几乎所有的程序都会使用依赖管理工具，例如 "),t("code",[e._v("Go")]),e._v(" 中的 "),t("code",[e._v("go mod")]),e._v("、"),t("code",[e._v("Node.js")]),e._v(" 中的 "),t("code",[e._v("npm")]),e._v(" 等等，当我们构建一个镜像时，往往会重复的从互联网中获取依赖包，难以缓存，大大降低了镜像的构建效率。")]),e._v(" "),t("p",[e._v("例如一个前端工程需要用到 "),t("code",[e._v("npm")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("FROM node:alpine as builder\n\nWORKDIR /app\n\nCOPY package.json /app/\n\nRUN npm i --registry=https://registry.npm.taobao.org \\\n        && rm -rf ~/.npm\n\nCOPY src /app/src\n\nRUN npm run build\n\nFROM nginx:alpine\n\nCOPY --from=builder /app/dist /app/dist\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("p",[e._v("使用多阶段构建，构建的镜像中只包含了目标文件夹 "),t("code",[e._v("dist")]),e._v("，但仍然存在一些问题，当 "),t("code",[e._v("package.json")]),e._v(" 文件变动时，"),t("code",[e._v("RUN npm i && rm -rf ~/.npm")]),e._v(" 这一层会重新执行，变更多次后，生成了大量的中间层镜像。")]),e._v(" "),t("p",[e._v("为解决这个问题，进一步的我们可以设想一个类似 "),t("strong",[e._v("数据卷")]),e._v(" 的功能，在镜像构建时把 "),t("code",[e._v("node_modules")]),e._v(" 文件夹挂载上去，在构建完成后，这个 "),t("code",[e._v("node_modules")]),e._v(" 文件夹会自动卸载，实际的镜像中并不包含 "),t("code",[e._v("node_modules")]),e._v(" 这个文件夹，这样我们就省去了每次获取依赖的时间，大大增加了镜像构建效率，同时也避免了生成了大量的中间层镜像。")]),e._v(" "),t("p",[t("code",[e._v("BuildKit")]),e._v(" 提供了 "),t("code",[e._v("RUN --mount=type=cache")]),e._v(" 指令，可以实现上边的设想。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# syntax = docker/dockerfile:experimental\nFROM node:alpine as builder\n\nWORKDIR /app\n\nCOPY package.json /app/\n\nRUN --mount=type=cache,target=/app/node_modules,id=my_app_npm_module,sharing=locked \\\n    --mount=type=cache,target=/root/.npm,id=npm_cache \\\n        npm i --registry=https://registry.npm.taobao.org\n\nCOPY src /app/src\n\nRUN --mount=type=cache,target=/app/node_modules,id=my_app_npm_module,sharing=locked \\\n# --mount=type=cache,target=/app/dist,id=my_app_dist,sharing=locked \\\n        npm run build\n\nFROM nginx:alpine\n\n# COPY --from=builder /app/dist /app/dist\n\n# 为了更直观的说明 from 和 source 指令，这里使用 RUN 指令\nRUN --mount=type=cache,target=/tmp/dist,from=builder,source=/app/dist \\\n    # --mount=type=cache,target/tmp/dist,from=my_app_dist,sharing=locked \\\n    mkdir -p /app/dist && cp -r /tmp/dist/* /app/dist\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br")])]),t("p",[t("strong",[e._v("由于 "),t("code",[e._v("BuildKit")]),e._v(" 为实验特性，每个 "),t("code",[e._v("Dockerfile")]),e._v(" 文件开头都必须加上如下指令")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# syntax = docker/dockerfile:experimental\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("第一个 "),t("code",[e._v("RUN")]),e._v(" 指令执行后，"),t("code",[e._v("id")]),e._v(" 为 "),t("code",[e._v("my_app_npm_module")]),e._v(" 的缓存文件夹挂载到了 "),t("code",[e._v("/app/node_modules")]),e._v(" 文件夹中。多次执行也不会产生多个中间层镜像。")]),e._v(" "),t("p",[e._v("第二个 "),t("code",[e._v("RUN")]),e._v(" 指令执行时需要用到 "),t("code",[e._v("node_modules")]),e._v(" 文件夹，"),t("code",[e._v("node_modules")]),e._v(" 已经挂载，命令也可以正确执行。")]),e._v(" "),t("p",[e._v("第三个 "),t("code",[e._v("RUN")]),e._v(" 指令将上一阶段产生的文件复制到指定位置，"),t("code",[e._v("from")]),e._v(" 指明缓存的来源，这里 "),t("code",[e._v("builder")]),e._v(" 表示缓存来源于构建的第一阶段，"),t("code",[e._v("source")]),e._v(" 指明缓存来源的文件夹。")]),e._v(" "),t("p",[e._v("上面的 "),t("code",[e._v("Dockerfile")]),e._v(" 中 "),t("code",[e._v("--mount=type=cache,...")]),e._v(" 中指令作用如下：")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Option")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("id")])]),e._v(" "),t("td",[t("code",[e._v("id")]),e._v(" 设置一个标志，以便区分缓存。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("target")]),e._v(" (必填项)")]),e._v(" "),t("td",[e._v("缓存的挂载目标文件夹。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ro")]),e._v(","),t("code",[e._v("readonly")])]),e._v(" "),t("td",[e._v("只读，缓存文件夹不能被写入。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("sharing")])]),e._v(" "),t("td",[e._v("有 "),t("code",[e._v("shared")]),e._v(" "),t("code",[e._v("private")]),e._v(" "),t("code",[e._v("locked")]),e._v(" 值可供选择。"),t("code",[e._v("sharing")]),e._v(" 设置当一个缓存被多次使用时的表现，由于 "),t("code",[e._v("BuildKit")]),e._v(" 支持并行构建，当多个步骤使用同一缓存时（同一 "),t("code",[e._v("id")]),e._v("）会发生冲突。"),t("code",[e._v("shared")]),e._v(" 表示多个步骤可以同时读写，"),t("code",[e._v("private")]),e._v(" 表示当多个步骤使用同一缓存时，每个步骤使用不同的缓存，"),t("code",[e._v("locked")]),e._v(" 表示当一个步骤完成释放缓存后，后一个步骤才能继续使用该缓存。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("from")])]),e._v(" "),t("td",[e._v("缓存来源（构建阶段），不填写时为空文件夹。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("source")])]),e._v(" "),t("td",[e._v("来源的文件夹路径。")])])])]),e._v(" "),t("h4",{attrs:{id:"run-mount-type-bind"}},[t("code",[e._v("RUN --mount=type=bind")])]),e._v(" "),t("p",[e._v("该指令可以将一个镜像（或上一构建阶段）的文件挂载到指定位置。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# syntax = docker/dockerfile:experimental\nRUN --mount=type=bind,from=php:alpine,source=/usr/local/bin/docker-php-entrypoint,target=/docker-php-entrypoint \\\n        cat /docker-php-entrypoint\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h4",{attrs:{id:"run-mount-type-tmpfs"}},[t("code",[e._v("RUN --mount=type=tmpfs")])]),e._v(" "),t("p",[e._v("该指令可以将一个 "),t("code",[e._v("tmpfs")]),e._v(" 文件系统挂载到指定位置。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# syntax = docker/dockerfile:experimental\nRUN --mount=type=tmpfs,target=/temp \\\n        mount | grep /temp\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h4",{attrs:{id:"run-mount-type-secret"}},[t("code",[e._v("RUN --mount=type=secret")])]),e._v(" "),t("p",[e._v("该指令可以将一个文件挂载到指定位置。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# syntax = docker/dockerfile:experimental\nRUN --mount=type=secret,id=aws,target=/root/.aws/credentials \\\n        cat /root/.aws/credentials\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker build -t test --secret id=aws,src=$HOME/.aws/credentials .\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h4",{attrs:{id:"run-mount-type-ssh"}},[t("code",[e._v("RUN --mount=type=ssh")])]),e._v(" "),t("p",[e._v("该指令可以挂载 "),t("code",[e._v("ssh")]),e._v(" 密钥。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# syntax = docker/dockerfile:experimental\nFROM alpine\nRUN apk add --no-cache openssh-client\nRUN mkdir -p -m 0700 ~/.ssh && ssh-keyscan gitlab.com >> ~/.ssh/known_hosts\nRUN --mount=type=ssh ssh git@gitlab.com | tee /hello\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ eval $(ssh-agent)\n$ ssh-add ~/.ssh/id_rsa\n(Input your passphrase here)\n$ docker build -t test --ssh default=$SSH_AUTH_SOCK .\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h3",{attrs:{id:"清理构建缓存"}},[e._v("清理构建缓存")]),e._v(" "),t("p",[e._v("执行以下命令清理构建缓存")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker builder prune\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h3",{attrs:{id:"官方文档"}},[e._v("官方文档")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/experimental.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/experimental.md"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=a.exports}}]);