(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{410:function(t,e,a){"use strict";a.r(e);var r=a(25),i=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#时代-¶-times-此标题的永久链接"}},[t._v("时代 ¶")])]),a("li",[a("a",{attrs:{href:"#日期-¶-dates-此标题的永久链接"}},[t._v("日期 ¶")])]),a("li",[a("a",{attrs:{href:"#timedeltas-¶-timedeltas-此标题的永久链接"}},[t._v("timedeltas ¶")])]),a("li",[a("a",{attrs:{href:"#日期算术-¶-date-arithmetic-此标题的永久链接"}},[t._v("日期算术 ¶")])]),a("li",[a("a",{attrs:{href:"#比较值-¶-comparing-values-此标题的永久链接"}},[t._v("比较值 ¶")])]),a("li",[a("a",{attrs:{href:"#结合日期和时间-¶-combining-dates-and-times-此标题的永久链接"}},[t._v("结合日期和时间 ¶")])]),a("li",[a("a",{attrs:{href:"#格式化和解析-¶-formatting-and-parsing-此标题的永久链接"}},[t._v("格式化和解析 ¶")])]),a("li",[a("a",{attrs:{href:"#时区-¶-time-zones-此标题的永久链接"}},[t._v("时区 ¶")])])])]),t._v("\n| 目的： | datetime模块包括用于执行日期和时间解析，格式化和算术的函数和类。 |\n| 适用于： | 2.3及更高版本 |"),a("p"),t._v(" "),a("p",[a("a",{attrs:{href:"#module-datetime",title:"datetime：日期/时间值操作。"}},[t._v("datetime")]),t._v(" 包含用于处理日期和时间，separatley以及一起使用的函数和类。")]),t._v(" "),a("h2",{attrs:{id:"时代-¶"}},[t._v("时代 "),a("a",{attrs:{href:"#times",title:"此标题的永久链接"}},[t._v("¶")])]),t._v(" "),a("p",[t._v("时间值用 "),a("a",{attrs:{href:"https://pymotw.com/2/time/index.html#module-time",title:"时间：操纵时钟时间的功能",target:"_blank",rel:"noopener noreferrer"}},[t._v("时间"),a("OutboundLink")],1),t._v(" 类别 表示 。 时间具有小时，分钟，秒和微秒的属性。 它们还可以包括时区信息。 初始化 "),a("a",{attrs:{href:"https://pymotw.com/2/time/index.html#module-time",title:"时间：操纵时钟时间的功能",target:"_blank",rel:"noopener noreferrer"}},[t._v("时间"),a("OutboundLink")],1),t._v(" 实例 的参数 是可选的，但是默认值 0 不太可能是您想要的。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("t = datetime.time(1, 2, 3)\nprint t\nprint 'hour  :', t.hour\nprint 'minute:', t.minute\nprint 'second:', t.second\nprint 'microsecond:', t.microsecond\nprint 'tzinfo:', t.tzinfo")]),t._v(" "),a("p",[t._v("$ python datetime_time.py")]),t._v(" "),a("p",[t._v("01:02:03\nhour  : 1\nminute: 2\nsecond: 3\nmicrosecond: 0\ntzinfo: None")]),t._v(" "),a("p",[t._v("时间实例仅保存时间值，而不保存与该时间关联的日期。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("print 'Earliest  :', datetime.time.min\nprint 'Latest    :', datetime.time.max\nprint 'Resolution:', datetime.time.resolution")]),t._v(" "),a("p",[t._v("的 "),a("em",[t._v("最小")]),t._v(" 和 "),a("em",[t._v("最大")]),t._v(" 类的属性反映的时间在一天的有效范围。")]),t._v(" "),a("p",[t._v("$ python datetime_time_minmax.py")]),t._v(" "),a("p",[t._v("Earliest  : 00:00:00\nLatest    : 23:59:59.999999\nResolution: 0:00:00.000001")]),t._v(" "),a("p",[t._v("时间分辨率仅限于整个微秒。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("for m in [ 1, 0, 0.1, 0.6 ]:\ntry:\nprint '%02.1f :' % m, datetime.time(0, 0, 0, microsecond=m)\nexcept TypeError, err:\nprint 'ERROR:', err")]),t._v(" "),a("p",[t._v("实际上，对微秒参数使用浮点数会生成 "),a("a",{attrs:{href:"https://pymotw.com/2/exceptions/index.html#exceptions-typeerror",target:"_blank",rel:"noopener noreferrer"}},[a("em",[t._v("TypeError")]),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("p",[t._v("$ python datetime_time_resolution.py")]),t._v(" "),a("p",[t._v("1.0 : 00:00:00.000001\n0.0 : 00:00:00\n0.1 : ERROR: integer argument expected, got float\n0.6 : ERROR: integer argument expected, got float")]),t._v(" "),a("h2",{attrs:{id:"日期-¶"}},[t._v("日期 "),a("a",{attrs:{href:"#dates",title:"此标题的永久链接"}},[t._v("¶")])]),t._v(" "),a("p",[t._v("日历日期值用 date 类 表示 。 实例具有年，月和日的属性。 使用 today（） 类方法 创建代表今天日期的日期很容易 。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("today = datetime.date.today()\nprint today\nprint 'ctime:', today.ctime()\nprint 'tuple:', today.timetuple()\nprint 'ordinal:', today.toordinal()\nprint 'Year:', today.year\nprint 'Mon :', today.month\nprint 'Day :', today.day")]),t._v(" "),a("p",[t._v("本示例以几种格式打印当前日期：")]),t._v(" "),a("p",[t._v("$ python datetime_date.py")]),t._v(" "),a("p",[t._v("2013-02-21\nctime: Thu Feb 21 00:00:00 2013\ntuple: time.struct_time(tm_year=2013, tm_mon=2, tm_mday=21, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=52, tm_isdst=-1)\nordinal: 734920\nYear: 2013\nMon : 2\nDay : 21")]),t._v(" "),a("p",[t._v("还有一些类方法可用于从整数（使用公历1的1月1日开始计数）使用POSIX时间戳值来创建整数实例。")]),t._v(" "),a("p",[t._v("import datetime\nimport time")]),t._v(" "),a("p",[t._v("o = 733114\nprint 'o:', o\nprint 'fromordinal(o):', datetime.date.fromordinal(o)\nt = time.time()\nprint 't:', t\nprint 'fromtimestamp(t):', datetime.date.fromtimestamp(t)")]),t._v(" "),a("p",[t._v("此示例说明了 fromordinal（） 和 fromtimestamp（） 使用的不同值类型 。")]),t._v(" "),a("p",[t._v("$ python datetime_date_fromordinal.py")]),t._v(" "),a("p",[t._v("o: 733114\nfromordinal(o): 2008-03-13\nt: 1361446545.52\nfromtimestamp(t): 2013-02-21")]),t._v(" "),a("p",[t._v("与 "),a("a",{attrs:{href:"https://pymotw.com/2/time/index.html#module-time",title:"时间：操纵时钟时间的功能",target:"_blank",rel:"noopener noreferrer"}},[t._v("time一样"),a("OutboundLink")],1),t._v(" ，可以使用 "),a("em",[t._v("min")]),t._v(" 和 "),a("em",[t._v("max")]),t._v(" 属性 确定支持的日期值的范围 。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("print 'Earliest  :', datetime.date.min\nprint 'Latest    :', datetime.date.max\nprint 'Resolution:', datetime.date.resolution")]),t._v(" "),a("p",[t._v("日期的分辨率是整天。")]),t._v(" "),a("p",[t._v("$ python datetime_date_minmax.py")]),t._v(" "),a("p",[t._v("Earliest  : 0001-01-01\nLatest    : 9999-12-31\nResolution: 1 day, 0:00:00")]),t._v(" "),a("p",[t._v("创建新日期实例的另一种 方法是使用现有日期 的 replace（） 方法。 例如，您可以更改年份，而无需考虑日期和月份。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("d1 = datetime.date(2008, 3, 12)\nprint 'd1:', d1")]),t._v(" "),a("p",[t._v("d2 = d1.replace(year=2009)\nprint 'd2:', d2")]),t._v(" "),a("p",[t._v("$ python datetime_date_replace.py")]),t._v(" "),a("p",[t._v("d1: 2008-03-12\nd2: 2009-03-12")]),t._v(" "),a("h2",{attrs:{id:"timedeltas-¶"}},[t._v("timedeltas "),a("a",{attrs:{href:"#timedeltas",title:"此标题的永久链接"}},[t._v("¶")])]),t._v(" "),a("p",[t._v("使用 replace（） 并不是计算将来/过去日期的唯一方法。 您可以使用 "),a("a",{attrs:{href:"#module-datetime",title:"datetime：日期/时间值操作。"}},[t._v("日期时间")]),t._v(" 通过执行上的日期值基本算术 timedelta 类。 减去日期会产生一个 timedelta ，并且 可以从一个日期中添加或减去 一个 timedelta 以产生另一个日期。 timedelta 的内部值以 天，秒和微秒为单位存储。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v('print "microseconds:", datetime.timedelta(microseconds=1)\nprint "milliseconds:", datetime.timedelta(milliseconds=1)\nprint "seconds     :", datetime.timedelta(seconds=1)\nprint "minutes     :", datetime.timedelta(minutes=1)\nprint "hours       :", datetime.timedelta(hours=1)\nprint "days        :", datetime.timedelta(days=1)\nprint "weeks       :", datetime.timedelta(weeks=1)')]),t._v(" "),a("p",[t._v("传递给构造函数的中间级别值转换为天，秒和微秒。")]),t._v(" "),a("p",[t._v("$ python datetime_timedelta.py")]),t._v(" "),a("p",[t._v("microseconds: 0:00:00.000001\nmilliseconds: 0:00:00.001000\nseconds     : 0:00:01\nminutes     : 0:01:00\nhours       : 1:00:00\ndays        : 1 day, 0:00:00\nweeks       : 7 days, 0:00:00")]),t._v(" "),a("h2",{attrs:{id:"日期算术-¶"}},[t._v("日期算术 "),a("a",{attrs:{href:"#date-arithmetic",title:"此标题的永久链接"}},[t._v("¶")])]),t._v(" "),a("p",[t._v("日期数学使用标准算术运算符。 此具有日期对象的示例说明了如何使用 timedelta 对象计算新日期，并减去日期实例以生成timedelta（包括负增量值）。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("today = datetime.date.today()\nprint 'Today    :', today")]),t._v(" "),a("p",[t._v("one_day = datetime.timedelta(days=1)\nprint 'One day  :', one_day")]),t._v(" "),a("p",[t._v("yesterday = today - one_day\nprint 'Yesterday:', yesterday")]),t._v(" "),a("p",[t._v("tomorrow = today + one_day\nprint 'Tomorrow :', tomorrow")]),t._v(" "),a("p",[t._v("print 'tomorrow - yesterday:', tomorrow - yesterday\nprint 'yesterday - tomorrow:', yesterday - tomorrow")]),t._v(" "),a("p",[t._v("$ python datetime_date_math.py")]),t._v(" "),a("p",[t._v("Today    : 2013-02-21\nOne day  : 1 day, 0:00:00\nYesterday: 2013-02-20\nTomorrow : 2013-02-22\ntomorrow - yesterday: 2 days, 0:00:00\nyesterday - tomorrow: -2 days, 0:00:00")]),t._v(" "),a("h2",{attrs:{id:"比较值-¶"}},[t._v("比较值 "),a("a",{attrs:{href:"#comparing-values",title:"此标题的永久链接"}},[t._v("¶")])]),t._v(" "),a("p",[t._v("可以使用标准运算符比较日期和时间值，以确定哪个更早或更晚。")]),t._v(" "),a("p",[t._v("import datetime\nimport time")]),t._v(" "),a("p",[t._v("print 'Times:'\nt1 = datetime.time(12, 55, 0)\nprint '\\tt1:', t1\nt2 = datetime.time(13, 5, 0)\nprint '\\tt2:', t2\nprint '\\tt1 < t2:', t1 < t2")]),t._v(" "),a("p",[t._v("print 'Dates:'\nd1 = datetime.date.today()\nprint '\\td1:', d1\nd2 = datetime.date.today() + datetime.timedelta(days=1)\nprint '\\td2:', d2\nprint '\\td1 > d2:', d1 > d2")]),t._v(" "),a("p",[t._v("$ python datetime_comparing.py")]),t._v(" "),a("p",[t._v("Times:\nt1: 12:55:00\nt2: 13:05:00\nt1 < t2: True\nDates:\nd1: 2013-02-21\nd2: 2013-02-22\nd1 > d2: False")]),t._v(" "),a("h2",{attrs:{id:"结合日期和时间-¶"}},[t._v("结合日期和时间 "),a("a",{attrs:{href:"#combining-dates-and-times",title:"此标题的永久链接"}},[t._v("¶")])]),t._v(" "),a("p",[t._v("使用 "),a("a",{attrs:{href:"#module-datetime",title:"datetime：日期/时间值操作。"}},[t._v("datetime")]),t._v(" 类来保存由日期和时间组成的值。 与 date一样 ，有几种方便的类方法可用于 从其他公共值 创建 "),a("a",{attrs:{href:"#module-datetime",title:"datetime：日期/时间值操作。"}},[t._v("datetime")]),t._v(" 实例。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("print 'Now    :', datetime.datetime.now()\nprint 'Today  :', datetime.datetime.today()\nprint 'UTC Now:', datetime.datetime.utcnow()")]),t._v(" "),a("p",[t._v("d = datetime.datetime.now()\nfor attr in [ 'year', 'month', 'day', 'hour', 'minute', 'second', 'microsecond']:\nprint attr, ':', getattr(d, attr)")]),t._v(" "),a("p",[t._v("如您所料， "),a("a",{attrs:{href:"#module-datetime",title:"datetime：日期/时间值操作。"}},[t._v("datetime")]),t._v(" 实例具有日期和时间对象的所有属性。")]),t._v(" "),a("p",[t._v("$ python datetime_datetime.py")]),t._v(" "),a("p",[t._v("Now    : 2013-02-21 06:35:45.658505\nToday  : 2013-02-21 06:35:45.659381\nUTC Now: 2013-02-21 11:35:45.659396\nyear : 2013\nmonth : 2\nday : 21\nhour : 6\nminute : 35\nsecond : 45\nmicrosecond : 659677")]),t._v(" "),a("p",[t._v("与日期一样，datetime提供了用于创建新实例的便捷类方法。 它还包括 fromordinal（） 和 fromtimestamp（） 。 另外， 如果您已经有一个日期实例和一个时间实例并想创建一个日期时间 ，则 combin（） 可能会很有用。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v("t = datetime.time(1, 2, 3)\nprint 't :', t")]),t._v(" "),a("p",[t._v("d = datetime.date.today()\nprint 'd :', d")]),t._v(" "),a("p",[t._v("dt = datetime.datetime.combine(d, t)\nprint 'dt:', dt")]),t._v(" "),a("p",[t._v("$ python datetime_datetime_combine.py")]),t._v(" "),a("p",[t._v("t : 01:02:03\nd : 2013-02-21\ndt: 2013-02-21 01:02:03")]),t._v(" "),a("h2",{attrs:{id:"格式化和解析-¶"}},[t._v("格式化和解析 "),a("a",{attrs:{href:"#formatting-and-parsing",title:"此标题的永久链接"}},[t._v("¶")])]),t._v(" "),a("p",[t._v("日期时间对象的默认字符串表示形式使用 "),a("a",{attrs:{href:"http://www.iso.org/iso/support/faqs/faqs_widely_used_standards/widely_used_standards_other/date_and_time_format.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),a("OutboundLink")],1),t._v(" 格式（ YYYY-MM-DDTHH：MM：SS.mmmmmm ）。 可以使用 strftime（） 生成其他格式 。 同样，如果您的输入数据包括可使用 time.strptime（） 解析的时间戳值 ，则 datetime.strptime（） 是将其转换为datetime实例的便捷方法。")]),t._v(" "),a("p",[t._v("import datetime")]),t._v(" "),a("p",[t._v('format = "%a %b %d %H:%M:%S %Y"')]),t._v(" "),a("p",[t._v("today = datetime.datetime.today()\nprint 'ISO     :', today")]),t._v(" "),a("p",[t._v("s = today.strftime(format)\nprint 'strftime:', s")]),t._v(" "),a("p",[t._v("d = datetime.datetime.strptime(s, format)\nprint 'strptime:', d.strftime(format)")]),t._v(" "),a("p",[t._v("$ python datetime_datetime_strptime.py")]),t._v(" "),a("p",[t._v("ISO     : 2013-02-21 06:35:45.707450\nstrftime: Thu Feb 21 06:35:45 2013\nstrptime: Thu Feb 21 06:35:45 2013")]),t._v(" "),a("h2",{attrs:{id:"时区-¶"}},[t._v("时区 "),a("a",{attrs:{href:"#time-zones",title:"此标题的永久链接"}},[t._v("¶")])]),t._v(" "),a("p",[t._v("在 "),a("a",{attrs:{href:"#module-datetime",title:"datetime：日期/时间值操作。"}},[t._v("datetime中")]),t._v(" ，时区由 tzinfo 的子类表示 。 由于 tzinfo 是抽象的基类，因此您需要定义一个子类并为一些方法提供适当的实现以使其有用。 不幸的是， 尽管文档确实提供了一些示例实现，但 "),a("a",{attrs:{href:"#module-datetime",title:"datetime：日期/时间值操作。"}},[t._v("datetime")]),t._v(" 并未包括任何可供使用的实际实现。 有关使用固定偏移量和DST感知类的示例，以及有关创建自己的类的更多详细信息，请参阅标准库文档页面。 "),a("a",{attrs:{href:"http://pytz.sourceforge.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("pytz"),a("OutboundLink")],1),t._v(" 也是时区实施细节的良好来源。")]),t._v(" "),a("p",[t._v("也可以看看")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.python.org/2/library/datetime.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("约会时间"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("该模块的标准库文档。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pymotw.com/2/calendar/index.html#module-calendar",title:"日历：日历模块实现用于处理日期的类，以管理以年/月/周为单位的值。",target:"_blank",rel:"noopener noreferrer"}},[t._v("日历"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("该 "),a("a",{attrs:{href:"https://pymotw.com/2/calendar/index.html#module-calendar",title:"日历：日历模块实现用于处理日期的类，以管理以年/月/周为单位的值。",target:"_blank",rel:"noopener noreferrer"}},[t._v("日历"),a("OutboundLink")],1),t._v(" 模块。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pymotw.com/2/time/index.html#module-time",title:"时间：操纵时钟时间的功能",target:"_blank",rel:"noopener noreferrer"}},[t._v("时间"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("该 "),a("a",{attrs:{href:"https://pymotw.com/2/time/index.html#module-time",title:"时间：操纵时钟时间的功能",target:"_blank",rel:"noopener noreferrer"}},[t._v("时间"),a("OutboundLink")],1),t._v(" 模块。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://labix.org/python-dateutil",target:"_blank",rel:"noopener noreferrer"}},[t._v("dateutil"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Labix的dateutil使用其他功能扩展了datetime模块。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar",target:"_blank",rel:"noopener noreferrer"}},[t._v("WikiPedia：阳历公历"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("公历系统的描述。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://pytz.sourceforge.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("pytz"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("世界时区数据库")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.iso.org/iso/support/faqs/faqs_widely_used_standards/widely_used_standards_other/date_and_time_format.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("日期和时间的数字表示标准")])])}),[],!1,null,null,null);e.default=i.exports}}]);