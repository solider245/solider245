(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{403:function(s,a,t){"use strict";t.r(a);var n=t(25),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"无插件vim配置文件vimrc推荐与各vim配置项解释"}},[s._v("无插件Vim配置文件vimrc推荐与各VIM配置项解释")]),s._v(" "),t("blockquote",[t("p",[s._v("无插件配置是新手最好的配置，他可以根据需要对应来关闭你不需要的模块。\n也方便新手更好的理解VIM")])]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E6%97%A0%E6%8F%92%E4%BB%B6vim%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6vimrc%E6%8E%A8%E8%8D%90%E4%B8%8E%E5%90%84vim%E9%85%8D%E7%BD%AE%E9%A1%B9%E8%A7%A3%E9%87%8A"}},[s._v("无插件Vim配置文件vimrc推荐与各VIM配置项解释")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#vim%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE"}},[s._v("vim基础配置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vim%E7%BC%96%E7%A0%81%E8%AE%BE%E7%BD%AE"}},[s._v("Vim编码设置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vim%E7%95%8C%E9%9D%A2%E6%98%BE%E7%A4%BA%E8%AE%BE%E7%BD%AE"}},[s._v("Vim界面显示设置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vim%E6%9F%A5%E6%89%BE%E9%85%8D%E7%BD%AE"}},[s._v("Vim查找配置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vim-tab%E5%88%B6%E8%A1%A8%E7%AC%A6%E8%AE%BE%E7%BD%AE"}},[s._v("Vim Tab制表符设置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vim%E7%BC%A9%E8%BF%9B%E9%85%8D%E7%BD%AE"}},[s._v("Vim缩进配置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vim%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E5%85%89%E6%A0%87%E4%BD%8D%E7%BD%AE"}},[s._v("Vim显示当前光标位置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vim%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E8%AE%BE%E7%BD%AE"}},[s._v("Vim文件类型设置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vim%E6%8C%89%E9%94%AE%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE"}},[s._v("Vim按键映射配置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%97%A0%E6%8F%92%E4%BB%B6vimrc%E5%9C%B0%E5%9D%80"}},[s._v("无插件vimrc地址")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE"}},[s._v("参考文献")])])])])]),s._v(" "),t("h2",{attrs:{id:"vim基础配置"}},[s._v("vim基础配置")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" nocompatible                "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" don\'t bother with vi compatibility "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用于关闭 compatible，表示不与 Vi 兼容。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" autoread                    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" reload files when changed on disk, i.e. via '),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(' "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#autoread 表示如果当前文件在 Vim 外被修改且未在 Vim 里面重新载入的话，则自动重新读取。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("shortmess")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("atI   \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#选项用于设置Vim缩短消息长度的标志位列表，例如，shortmess=m 表示用 “[+]” 代替 “[Modified]”，推荐通过 :h shortmess 查看 shortmess 选项的详细介绍                    ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" magic                       "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" For regular expressions turn magic on "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#选项用于改变搜索模式使用的特殊字符，推荐阅读Vim搜索字符转义与magic搜索模式。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" title                       "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" change the terminal\'s title "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用于设置 Vim 窗口标题。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" nobackup                    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" do not keep a backup file "')]),s._v("                                                                    \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用于关闭 backup，设置覆盖文件时不保留备份文件。                      ")]),s._v("\n                    \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" noerrorbells                "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" don\'t beep "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用于关闭 errorbells 选项，表示 Vim 有错误信息时不响铃。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" visualbell "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("t_vb")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" turn off error beep/flash "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#visualbell表示使用可视响铃代替鸣叫，而显示可视响铃的终端代码由 t_vb 选项给出。如果既不想要响铃也不想要闪烁，使用 :set visualbell t_vb= 实现。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("t_vb")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("           \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("timeoutlen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#表示以毫秒计的等待键码或映射的键序列完成的时间，推荐阅读Vim操作符待决模式(Vim Operator-Pending mode)。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h2",{attrs:{id:"vim编码设置"}},[s._v("Vim编码设置")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("encoding")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf-8\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#encoding 设置 Vim 内部使用的字符编码，它应用于缓冲区、寄存器、表达式所用的字符。  ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("fileencodings")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#fileencodings 设置一个字符编码的列表，表示 Vim 自动检测文件编码时的备选字符编码列表。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("fileformats")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("unix,dos,mac  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用于设置参与自动检测换行符 () 格式类型的备选列表")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("termencoding")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf-8                                                                                                                          \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用于设置终端使用的编码方式。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("formatoptions")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v("m\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("formatoptions")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v("B\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#formatoptions 表示自动排版完成的方式。Vim 在可视化模式下，可使用 = 进行代码格式的自动排版。m 表示在任何值高于 255 的多字节字符上分行；B 表示在连接行时，不要在两个多字节字符之间插入空格。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("encoding 设置 Vim 内部使用的字符编码，它应用于缓冲区、寄存器、表达式所用的字符。")])]),s._v(" "),t("li",[t("p",[s._v("fileencodings 设置一个字符编码的列表，表示 Vim 自动检测文件编码时的备选字符编码列表。")])]),s._v(" "),t("li",[t("p",[s._v("fileformats 用于设置参与自动检测换行符 () 格式类型的备选列表。")])]),s._v(" "),t("li",[t("p",[s._v("termencoding 用于设置终端使用的编码方式。")])]),s._v(" "),t("li",[t("p",[s._v("formatoptions 表示自动排版完成的方式。Vim 在可视化模式下，可使用 = 进行代码格式的自动排版。m 表示在任何值高于 255 的多字节字符上分行；B 表示在连接行时，不要在两个多字节字符之间插入空格。")])])]),s._v(" "),t("h2",{attrs:{id:"vim界面显示设置"}},[s._v("Vim界面显示设置")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" ruler                       "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" show the current row and column "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" number                      "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" show line numbers "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" nowrap\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" showcmd                     "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" display incomplete commands "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" showmode                    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" display current modes "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" showmatch                   "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" jump to matches when entering parentheses "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("matchtime")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("                 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" tenths of a second to show the matching parenthesis "')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[t("code",[s._v("ruler")]),s._v(" 用于显示当前光标所在位置的行号和列号 (逗号分隔)。如果还有空间，在最右端显示文本在文件中的相对位置。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://image.vimjc.com/images/vim-ruler.png",alt:"Vim-ruler配置"}})]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("number")]),s._v(" 用于设置显示行号。"),t("code",[s._v("nowrap")]),s._v(" 设置超过窗口宽度的行不自动回绕显示。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("showcmd")]),s._v(" 用于设置在屏幕最后一行显示 (部分的) 命令。"),t("code",[s._v("showmode")]),s._v(" 在插入、替换和可视模式里，在最后一行提供消息。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("showmatch")]),s._v(" 表示插入括号时短暂地跳转到与之匹配的对应括号，而停留的时间由 "),t("code",[s._v("matchtime")]),s._v(" 选项设置。如果置位 ‘showmatch’，"),t("code",[s._v("matchtime")]),s._v(" 表示显示配对括号的十分之一秒。")])])]),s._v(" "),t("h2",{attrs:{id:"vim查找配置"}},[s._v("Vim查找配置")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" hlsearch                    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" highlight searches "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" incsearch                   "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" do incremental searching, search as you type "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" ignorecase                  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" ignore case when searching "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" smartcase                   "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" no ignorecase if Uppercase char present "')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v("hlsearch")]),s._v(" 用于设置将搜索结果高亮显示，而 "),t("code",[s._v("incsearch")]),s._v(" 选项会让 Vim 根据已经在查找域中输入的文本，预览第一处匹配目标；每当新输入一个字符时，Vim 会即时更新预览内容。")])]),s._v(" "),t("li",[t("p",[s._v("当 "),t("code",[s._v("ignorecase")]),s._v(" 和 "),t("code",[s._v("smartcase")]),s._v(" 选项均打开时，如果搜索模式中包含大写字母，Vim就会认为当前的查找(搜索)是区分大小写的。如果搜索模式中不包含任何大写字母，Vim 则会认为搜索应该不区分大小写。这是个比较 ”智能的” 推测你搜索意图的机制。")])])]),s._v(" "),t("blockquote",[t("p",[s._v("推荐阅读："),t("a",{attrs:{href:"https://vimjc.com/vim-incsearch.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Vim增量查找与incsearch实时查找预览"),t("OutboundLink")],1),s._v("、"),t("a",{attrs:{href:"https://vimjc.com/vim-search.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Vim搜索命令使用方法和技巧"),t("OutboundLink")],1),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"vim-tab制表符设置"}},[s._v("Vim Tab制表符设置")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" expandtab                   "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" expand tabs to spaces "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" smarttab        \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" shiftround\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v("expandtab")]),s._v(" 选项用于设置在Vim插入模式下按下 "),t("strong",[s._v("Tab")]),s._v(" 键时，输入到Vim中的都是空格。"),t("code",[s._v("smarttab")]),s._v(" 表示插入 Tab 时使用 "),t("code",[s._v("shiftwidth")]),s._v("。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("shiftround")]),s._v(" 表示缩进列数对齐到 "),t("code",[s._v("shiftwidth")]),s._v(" 值的整数倍。参考："),t("a",{attrs:{href:"https://vimjc.com/vim-indent.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Vim自动缩进配置、原理和tab键制表符"),t("OutboundLink")],1),s._v("。")])])]),s._v(" "),t("h2",{attrs:{id:"vim缩进配置"}},[s._v("Vim缩进配置")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" autoindent smartindent shiftround\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("shiftwidth")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("tabstop")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("softtabstop")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" insert mode tab and backspace use 4 spaces "')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v("autoindent")]),s._v(" 用于设置新增加的行和前一行具有相同的缩进形式。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("smartindent")]),s._v(" 选项用于设置新增行时进行”智能”缩进，主要用于 C 语言一族，与 "),t("code",[s._v("cindent")]),s._v(" 选项类似。")]),s._v(" "),t("blockquote",[t("p",[s._v("在Vim smartindent 缩进模式下，每一行都有相同的缩进量，直到遇到右大括号 (}) 取消缩进形式。")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("shiftwidth")]),s._v(" 选项用于设置执行Vim普通模式下的缩进操作 ( "),t("code",[s._v("<<")]),s._v(" 和 "),t("code",[s._v(">>")]),s._v(" 命令 )时缩进的列数。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("shiftround")]),s._v(" 选项则表示缩进列数会自动取整到 ‘shiftwidth’ 选项值的倍数。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("tabstop")]),s._v(" 选项设置按下 "),t("code",[s._v("Tab")]),s._v(" 键时，缩进的空格个数。")])])]),s._v(" "),t("h2",{attrs:{id:"vim显示当前光标位置"}},[s._v("Vim显示当前光标位置")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" cursorcolumn\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" cursorline\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[t("code",[s._v("cursorcolumn")]),s._v(" 设置高亮显示光标当前所在列，")]),s._v(" "),t("li",[t("code",[s._v("cursorline")]),s._v(" 设置高亮显示光标所在屏幕行。\n"),t("blockquote",[t("p",[s._v("更多内容，请阅："),t("a",{attrs:{href:"https://vimjc.com/vim-cursorline-column.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Vim快速跳转任意行、任意列以及高亮显示当前行、当前列"),t("OutboundLink")],1),s._v("。")])])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://image.vimjc.com/images/691e0c29gy1fu1ljb55mkj21hc0u0ai8.jpg",alt:"Vim高亮显示行列"}})]),s._v(" "),t("h2",{attrs:{id:"vim文件类型设置"}},[s._v("Vim文件类型设置")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("filetype on\nfiletype plugin on\nfiletype indent on\n\nautocmd FileType python "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("tabstop")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("shiftwidth")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" expandtab ai\nautocmd FileType ruby "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("tabstop")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("shiftwidth")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("softtabstop")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" expandtab ai\nautocmd BufRead,BufNew "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*.md,"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*.mkd,"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*.markdown "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("filetype")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("markdown.mkd\n\nautocmd BufNewFile "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*.sh,"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*.py "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('":call AutoSetFileHead()'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v('"')]),s._v("\nfunction"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" AutoSetFileHead"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" .sh "')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("filetype "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sh'")]),s._v("\n call setline"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v('#!/bin/bash"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n endif\n\n "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" python "')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("filetype "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'python'")]),s._v("\n call setline"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v('#!/usr/bin/env python"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n call append"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[s._v("\\\\")]),s._v('# encoding: utf\\-8"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n endif\n\n normal G\n normal o\n normal o\nendfunc\n\nautocmd FileType c,cpp,java,go,php,javascript,puppet,python,rust,twig,xml,yml,perl autocmd BufWritePre "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("buffer"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" :call "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("SID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("StripTrailingWhitespaces"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfun"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("SID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("StripTrailingWhitespaces"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" line"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" col"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n %s/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("+$//e\n call cursor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l, c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nendfun\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v("filetype on")]),s._v(" 配置项是 Vim 文件类型检测功能的开关；")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("filetype plugin on")]),s._v(" 用于 Vim 打开加载文件类型插件功能；")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("filetype indent on")]),s._v(" 用于指定 Vim 为不同类型的文件定义不同的缩进格式。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("autocmd FileType python set tabstop=4 shiftwidth=4 expandtab ai")]),s._v(" 表示对于 * "),t("code",[s._v("Python")]),s._v(" 文件 (通过 "),t("a",{attrs:{href:"https://vimjc.com/vim-autocmd.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[s._v("autocmd")]),s._v(" 命令"),t("OutboundLink")],1),s._v("指示 Vim 监听 "),t("strong",[s._v("FileType")]),s._v(" 事件)，自动设置 Tab 键对应的空格个数等。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v('autocmd BufNewFile *.sh,*.py exec \\":call AutoSetFileHead()\\"')]),s._v(" 表示新建后缀为 "),t("strong",[s._v(".sh")]),s._v("、"),t("strong",[s._v(".py")]),s._v(" 的文件时，自动执行 AutoSetFileHead 函数。AutoSetFileHead 函数基本的逻辑是在新文件的首行自动插入部分内容，例如，新建 shell 脚本自动添加 "),t("strong",[s._v("#!/bin/bash”")]),s._v("，然后新增两个空白行 (通过 "),t("code",[s._v("normal G")]),s._v("、"),t("code",[s._v("normal o")]),s._v("、"),t("code",[s._v("normal o")]),s._v(" 三行实现)。")])])]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("注")]),s._v("：AutoSetFileHead 函数里使用了 "),t("code",[s._v("normal")]),s._v(" 命令，可以阅读《"),t("a",{attrs:{href:"https://vimjc.com/vim-normal-command.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Vim normal命令和重复操作"),t("OutboundLink")],1),s._v("》了解该命令的细节。")])]),s._v(" "),t("h2",{attrs:{id:"vim按键映射配置"}},[s._v("Vim按键映射配置")]),s._v(" "),t("p",[s._v("以下Vim按键映射配置的详细功能介绍，请阅读：《"),t("a",{attrs:{href:"https://vimjc.com/vim-commands-and-vim-mapping-conf.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("常用Vim命令及实用Vim按键映射配置详解"),t("OutboundLink")],1),s._v("》。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("nnoremap k gk\nnnoremap gk k\nnnoremap j gj\nnnoremap gj j\n\nmap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-j"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-W"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("j\nmap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-k"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-W"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("k\nmap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-h"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-W"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("h\nmap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-W"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("l\n\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("F"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" :set nu"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" nu?"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CR"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("F"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),s._v(" :set list"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" list?"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CR"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("F"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("4")]),s._v(">")]),s._v(" :set wrap"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" wrap?"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CR"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pastetoggle")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("F"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("5")]),s._v(">")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"    when in insert mode, press <F5> to go to "')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"    paste mode, where you can paste mass data "')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"    that won\'t be autoindented "')]),s._v("\nau InsertLeave "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("* "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" nopaste\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("F"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("6")]),s._v(">")]),s._v(" :exec exists"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'syntax\\_on'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ? "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'syn off'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'syn on'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CR"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\ninoremap kj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Esc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("leader"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("q :q"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CR"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("leader"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("w :w"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CR"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nmap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Leader"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("sa ggVG"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\n\n"')]),s._v(" undo\nnnoremap U "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-r"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nnnoremap "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' \\"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("\nnnoremap "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" '")]),s._v("\n\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("silent"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" n nzz\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("silent"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" N Nzz\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("silent"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("* "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*zz\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("silent"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#zz")]),s._v("\nnnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("silent"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("* g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("*zz\nnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("silent"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("leader"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/ :nohls"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CR"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nvnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("gv\nvnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("gv\n\nmap Y y$\n\nnnoremap "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("\n\nnnoremap H ^\nnnoremap L $\n\ncmap w"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" w "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("sudo "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null %\n\ncnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-j"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("_kd"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\ncnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-k"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("_ku"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\ncnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Home"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\ncnoremap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("-e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("End"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v("nnoremap gk k")]),s._v(" 表示将 "),t("code",[s._v("gk")]),s._v(" "),t("a",{attrs:{href:"https://vimjc.com/vim-map.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("按键映射"),t("OutboundLink")],1),s._v("为 "),t("code",[s._v("k")]),s._v("，从"),t("a",{attrs:{href:"https://vimjc.com/vim-line-downward.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Vim光标移动之实际行与屏幕行"),t("OutboundLink")],1),s._v("一文可知，"),t("code",[s._v("gk")]),s._v(" 表示上移一个屏幕行。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("cnoremap <C-a> <Home>")]),s._v(" 表示将 "),t("code",[s._v("<Ctrl> a")]),s._v(" 组合键映射为 "),t("strong",[s._v("Home")]),s._v(" 键，实现在 Vim 命令行模式下 按 "),t("code",[s._v("<Ctrl> a")]),s._v(" 移动光标到最前面，类似于《"),t("a",{attrs:{href:"https://vimjc.com/linux-vim-tricks.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("高效Linux技巧及Vim命令"),t("OutboundLink")],1),s._v("》一文提到的快速移动光标到行首的效果。")])]),s._v(" "),t("li",[t("p",[t("img",{attrs:{src:"https://image.vimjc.com/images/linux-tricks-1.gif",alt:"vim按键映射"}})])])]),s._v(" "),t("h2",{attrs:{id:"无插件vimrc地址"}},[s._v("无插件vimrc地址")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://gist.github.com/xurenlu/5458034",target:"_blank",rel:"noopener noreferrer"}},[s._v("带中文参考的vimrc"),t("OutboundLink")],1),s._v(" "),t("a",{attrs:{href:"https://github.com/wklken/vim-for-server/blob/master/vimrc",target:"_blank",rel:"noopener noreferrer"}},[s._v("带部分中文参考的vimrc"),t("OutboundLink")],1),s._v(" "),t("a",{attrs:{href:"https://github.com/VyronLee/vimrc",target:"_blank",rel:"noopener noreferrer"}},[s._v("一个将vimrc模块化的深圳老铁"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"参考文献"}},[s._v("参考文献")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://vimjc.com/vimrc.html#9%E3%80%81Vim%E6%8C%89%E9%94%AE%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("无插件Vim配置文件vimrc推荐与各VIM配置项解释"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);